# Source: cloud2edge/charts/ditto/templates/concierge-networkpolicy.yaml
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: c2e-ditto-concierge
  labels:
    app.kubernetes.io/name: ditto-concierge
    helm.sh/chart: ditto-2.4.0
    app.kubernetes.io/instance: c2e
    app.kubernetes.io/version: "2.4.0"
    app.kubernetes.io/managed-by: Helm
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: ditto-concierge
      app.kubernetes.io/instance: c2e
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow inner cluster communication
  - from:
    - podSelector:
        matchLabels:
          actorSystemName: ditto-cluster
    ports:
    - protocol: TCP
      port: 2551
    - protocol: TCP
      port: 8558
# Open all egress
  egress:
  - {}
---
# Source: cloud2edge/charts/ditto/templates/connectivity-networkpolicy.yaml
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: c2e-ditto-connectivity
  labels:
    app.kubernetes.io/name: ditto-connectivity
    helm.sh/chart: ditto-2.4.0
    app.kubernetes.io/instance: c2e
    app.kubernetes.io/version: "2.4.0"
    app.kubernetes.io/managed-by: Helm
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: ditto-connectivity
      app.kubernetes.io/instance: c2e
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow inner cluster communication
  - from:
    - podSelector:
        matchLabels:
          actorSystemName: ditto-cluster
    ports:
    - protocol: TCP
      port: 2551
    - protocol: TCP
      port: 8558
  # Open all egress
  egress:
  - {}
---
# Source: cloud2edge/charts/ditto/templates/gateway-networkpolicy.yaml
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: c2e-ditto-gateway
  labels:
    app.kubernetes.io/name: ditto-gateway
    helm.sh/chart: ditto-2.4.0
    app.kubernetes.io/instance: c2e
    app.kubernetes.io/version: "2.4.0"
    app.kubernetes.io/managed-by: Helm
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: ditto-gateway
      app.kubernetes.io/instance: c2e
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow access from Nginx
  - from:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: ditto-nginx
          app.kubernetes.io/instance: c2e
    ports:
    - protocol: TCP
      port: http
  # Allow inner cluster communication
  - from:
    - podSelector:
        matchLabels:
          actorSystemName: ditto-cluster
    ports:
    - protocol: TCP
      port: 2551
    - protocol: TCP
      port: 8558
  # Open all egress
  egress:
  - {}
---
# Source: cloud2edge/charts/ditto/templates/nginx-networkpolicy.yaml
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: c2e-ditto-nginx
  labels:
    app.kubernetes.io/name: ditto-nginx
    helm.sh/chart: ditto-2.4.0
    app.kubernetes.io/instance: c2e
    app.kubernetes.io/version: "2.4.0"
    app.kubernetes.io/managed-by: Helm
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: ditto-nginx
      app.kubernetes.io/instance: c2e
  policyTypes:
  - Ingress
  ingress:
  # Allow access from OpenShift Router
  - ports:
    - protocol: TCP
      port: 8080
---
# Source: cloud2edge/charts/ditto/templates/policies-networkpolicy.yaml
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: c2e-ditto-policies
  labels:
    app.kubernetes.io/name: ditto-policies
    helm.sh/chart: ditto-2.4.0
    app.kubernetes.io/instance: c2e
    app.kubernetes.io/version: "2.4.0"
    app.kubernetes.io/managed-by: Helm
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: ditto-policies
      app.kubernetes.io/instance: c2e
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow inner cluster communication
  - from:
    - podSelector:
        matchLabels:
          actorSystemName: ditto-cluster
    ports:
    - protocol: TCP
      port: 2551
    - protocol: TCP
      port: 8558
  # Open all egress
  egress:
  - {}
---
# Source: cloud2edge/charts/ditto/templates/swaggerui-networkpolicy.yaml
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: c2e-ditto-swaggerui
  labels:
    app.kubernetes.io/name: ditto-swaggerui
    helm.sh/chart: ditto-2.4.0
    app.kubernetes.io/instance: c2e
    app.kubernetes.io/version: "2.4.0"
    app.kubernetes.io/managed-by: Helm
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: ditto-swaggerui
      app.kubernetes.io/instance: c2e
  policyTypes:
  - Ingress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: ditto-nginx
          app.kubernetes.io/instance: c2e
    ports:
    - protocol: TCP
      port: 8080
---
# Source: cloud2edge/charts/ditto/templates/things-networkpolicy.yaml
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: c2e-ditto-things
  labels:
    app.kubernetes.io/name: ditto-things
    helm.sh/chart: ditto-2.4.0
    app.kubernetes.io/instance: c2e
    app.kubernetes.io/version: "2.4.0"
    app.kubernetes.io/managed-by: Helm
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: ditto-things
      app.kubernetes.io/instance: c2e
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow access from concierge
  - from:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: ditto-concierge
          app.kubernetes.io/instance: c2e
    ports:
    - protocol: TCP
      port: http
  # Allow inner cluster communication
  - from:
    - podSelector:
        matchLabels:
          actorSystemName: ditto-cluster
    ports:
    - protocol: TCP
      port: 2551
    - protocol: TCP
      port: 8558
  # Open all egress
  egress:
  - {}
---
# Source: cloud2edge/charts/ditto/templates/thingssearch-networkpolicy.yaml
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: c2e-ditto-thingssearch
  labels:
    app.kubernetes.io/name: ditto-thingssearch
    helm.sh/chart: ditto-2.4.0
    app.kubernetes.io/instance: c2e
    app.kubernetes.io/version: "2.4.0"
    app.kubernetes.io/managed-by: Helm
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: ditto-thingssearch
      app.kubernetes.io/instance: c2e
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow inner cluster communication
  - from:
    - podSelector:
        matchLabels:
          actorSystemName: ditto-cluster
    ports:
    - protocol: TCP
      port: 2551
    - protocol: TCP
      port: 8558
  # Open all egress
  egress:
  - {}
---
# Source: cloud2edge/charts/ditto/charts/mongodb/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ditto-mongodb
  namespace: cloud2edge
  labels:
    app: mongodb
    chart: mongodb-7.14.8
    release: "c2e"
    heritage: "Helm"
secrets:
  - name: ditto-mongodb
---
# Source: cloud2edge/charts/ditto/templates/serviceaccount.yaml
# Copyright (c) 2019 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: c2e-ditto
  labels:
    app.kubernetes.io/name: ditto
    helm.sh/chart: ditto-2.4.0
    app.kubernetes.io/instance: c2e
    app.kubernetes.io/version: "2.4.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: cloud2edge/charts/hono/templates/hono-service-command-router/hono-service-command-router-sa.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: c2e-service-command-router
  namespace: cloud2edge
  labels:
    app.kubernetes.io/name: hono
    helm.sh/chart: hono-1.12.8
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: c2e
    app.kubernetes.io/version: 1.12.2
---
# Source: cloud2edge/charts/ditto/templates/gateway-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: c2e-ditto-gateway-secret
  labels:
    app.kubernetes.io/name: ditto-gateway-secret
    helm.sh/chart: ditto-2.4.0
    app.kubernetes.io/instance: c2e
    app.kubernetes.io/version: "2.4.0"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  devops-password: "bWRHZUVydldsUmRk"
  status-password: "ZldLZnNvNWdEV2Vr"
---
# Source: cloud2edge/charts/ditto/templates/mongodb-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: c2e-ditto-mongodb-secret
  labels:
    app.kubernetes.io/name: ditto-mongodb-secret
    helm.sh/chart: ditto-2.4.0
    app.kubernetes.io/instance: c2e
    app.kubernetes.io/version: "2.4.0"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  concierge-uri: "bW9uZ29kYjovL2RpdHRvLW1vbmdvZGI6MjcwMTcvY29uY2llcmdl"
  connectivity-uri: "bW9uZ29kYjovL2RpdHRvLW1vbmdvZGI6MjcwMTcvY29ubmVjdGl2aXR5"
  things-uri: "bW9uZ29kYjovL2RpdHRvLW1vbmdvZGI6MjcwMTcvdGhpbmdz"
  searchDB-uri: "bW9uZ29kYjovL2RpdHRvLW1vbmdvZGI6MjcwMTcvc2VhcmNoREI="
  policies-uri: "bW9uZ29kYjovL2RpdHRvLW1vbmdvZGI6MjcwMTcvcG9saWNpZXM="
---
# Source: cloud2edge/charts/hono/templates/artemis/artemis-secret.yaml
#
# Copyright (c) 2019, 2022 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
#
apiVersion: v1
kind: Secret
metadata:
  name: c2e-artemis-conf
  namespace: cloud2edge
  labels:
    app.kubernetes.io/name: hono
    helm.sh/chart: hono-1.12.8
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: c2e
    app.kubernetes.io/version: 1.12.2
    app.kubernetes.io/component: amqp-messaging-network-broker
type: Opaque
stringData:
  "broker.xml": |
    <?xml version='1.0'?>
    
    <!--
        Copyright (c) 2016, 2021 Contributors to the Eclipse Foundation
       
        See the NOTICE file(s) distributed with this work for additional
        information regarding copyright ownership.
       
        This program and the accompanying materials are made available under the
        terms of the Eclipse Public License 2.0 which is available at
        http://www.eclipse.org/legal/epl-2.0
       
        SPDX-License-Identifier: EPL-2.0
     -->
    
    <configuration xmlns="urn:activemq"
                   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                   xsi:schemaLocation="urn:activemq /schema/artemis-configuration.xsd">
    
       <core xmlns="urn:activemq:core" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="urn:activemq:core ">
    
          <name>hono-broker</name>
    
          <persistence-enabled>true</persistence-enabled>
    
          <!-- this could be ASYNCIO or NIO
           -->
          <journal-type>ASYNCIO</journal-type>
    
          <paging-directory>./data/paging</paging-directory>
    
          <bindings-directory>./data/bindings</bindings-directory>
    
          <journal-directory>./data/journal</journal-directory>
    
          <large-messages-directory>./data/large-messages</large-messages-directory>
    
          <journal-datasync>true</journal-datasync>
    
          <journal-min-files>2</journal-min-files>
    
          <journal-pool-files>10</journal-pool-files>
    
          <!--
            You can specify the NIC you want to use to verify if the network
             <network-check-NIC>theNickName</network-check-NIC>
            -->
    
          <!--
            Use this to use an HTTP server to validate the network
             <network-check-URL-list>http://www.apache.org</network-check-URL-list> -->
    
          <!-- <network-check-period>10000</network-check-period> -->
          <!-- <network-check-timeout>1000</network-check-timeout> -->
    
          <!-- this is a comma separated list, no spaces, just DNS or IPs
               it should accept IPV6
    
               Warning: Make sure you understand your network topology as this is meant to validate if your network is valid.
                        Using IPs that could eventually disappear or be partially visible may defeat the purpose.
                        You can use a list of multiple IPs, and if any successful ping will make the server OK to continue running -->
          <!-- <network-check-list>10.0.0.1</network-check-list> -->
    
          <!-- use this to customize the ping used for ipv4 addresses -->
          <!-- <network-check-ping-command>ping -c 1 -t %d %s</network-check-ping-command> -->
    
          <!-- use this to customize the ping used for ipv6 addresses -->
          <!-- <network-check-ping6-command>ping6 -c 1 %2$s</network-check-ping6-command> -->
    
    
    
          <!--
           This value was determined through a calculation.
           Your system could perform 7.58 writes per millisecond
           on the current journal configuration.
           That translates as a sync write every 132000 nanoseconds
          -->
          <journal-buffer-timeout>132000</journal-buffer-timeout>
    
    
          <!-- how often we are looking for how many bytes are being used on the disk in ms -->
          <disk-scan-period>5000</disk-scan-period>
    
          <!-- once the disk hits this limit the system will block, or close the connection in certain protocols
               that won't support flow control. -->
          <max-disk-usage>90</max-disk-usage>
    
          <!-- the system will enter into page mode once you hit this limit.
               This is an estimate in bytes of how much the messages are using in memory -->
          <global-max-size>100Mb</global-max-size>
    
          <acceptors>
    
             <!-- AMQP Acceptor.  Listens on default AMQP port for AMQP traffic.-->
             <!--<acceptor name="amqp">tcp://0.0.0.0:5672?protocols=AMQP</acceptor>-->
             <acceptor name="amqps">
                 tcp://0.0.0.0:5671?protocols=AMQP;sslEnabled=true;
                 keyStorePath=file:/run/artemis/split-1/custom/etc/artemisKeyStore.p12;keyStorePassword=artemiskeys;
             </acceptor>
    
          </acceptors>
    
    
          <security-settings>
             <security-setting match="#">
                <permission type="createNonDurableQueue" roles="admin"/>
                <permission type="deleteNonDurableQueue" roles="admin"/>
                <permission type="createDurableQueue" roles="admin"/>
                <permission type="deleteDurableQueue" roles="admin"/>
                <permission type="createAddress" roles="admin"/>
                <permission type="deleteAddress" roles="admin"/>
                <permission type="consume" roles="admin"/>
                <permission type="browse" roles="admin"/>
                <permission type="send" roles="admin"/>
                <!-- we need this otherwise ./artemis data imp wouldn't work -->
                <permission type="manage" roles="admin"/>
             </security-setting>
          </security-settings>
    
          <address-settings>
             <!-- if you define auto-create on certain queues, management has to be auto-create -->
             <address-setting match="activemq.management#">
                <dead-letter-address>DLQ</dead-letter-address>
                <expiry-address>ExpiryQueue</expiry-address>
                <redelivery-delay>0</redelivery-delay>
                <!-- with -1 only the global-max-size is in use for limiting -->
                <max-size-bytes>-1</max-size-bytes>
                <message-counter-history-day-limit>10</message-counter-history-day-limit>
                <address-full-policy>PAGE</address-full-policy>
                <auto-create-queues>true</auto-create-queues>
                <auto-create-addresses>true</auto-create-addresses>
                <auto-create-jms-queues>true</auto-create-jms-queues>
                <auto-create-jms-topics>true</auto-create-jms-topics>
             </address-setting>
             <!--default for catch all-->
             <address-setting match="#">
                <dead-letter-address>DLQ</dead-letter-address>
                <expiry-address>ExpiryQueue</expiry-address>
                <redelivery-delay>0</redelivery-delay>
                <!-- with -1 only the global-max-size is in use for limiting -->
                <max-size-bytes>-1</max-size-bytes>
                <message-counter-history-day-limit>10</message-counter-history-day-limit>
                <address-full-policy>PAGE</address-full-policy>
                <auto-create-queues>true</auto-create-queues>
                <auto-create-addresses>true</auto-create-addresses>
                <auto-create-jms-queues>true</auto-create-jms-queues>
                <auto-create-jms-topics>true</auto-create-jms-topics>
                <default-address-routing-type>ANYCAST</default-address-routing-type>
             </address-setting>
          </address-settings>
    
           <wildcard-addresses>
               <delimiter>/</delimiter>
           </wildcard-addresses>
    
       </core>
    </configuration>
  "artemis-users.properties": |
    ###############################################################################
    # Copyright (c) 2016, 2018 Contributors to the Eclipse Foundation
    #
    # See the NOTICE file(s) distributed with this work for additional
    # information regarding copyright ownership.
    #
    # This program and the accompanying materials are made available under the
    # terms of the Eclipse Public License 2.0 which is available at
    # http://www.eclipse.org/legal/epl-2.0
    #
    # SPDX-License-Identifier: EPL-2.0
    ###############################################################################
    artemis=artemis
  "artemis-roles.properties": |
    ###############################################################################
    # Copyright (c) 2016, 2018 Contributors to the Eclipse Foundation
    #
    # See the NOTICE file(s) distributed with this work for additional
    # information regarding copyright ownership.
    #
    # This program and the accompanying materials are made available under the
    # terms of the Eclipse Public License 2.0 which is available at
    # http://www.eclipse.org/legal/epl-2.0
    #
    # SPDX-License-Identifier: EPL-2.0
    ###############################################################################
    admin=artemis
  "login.config": |
    /*
    * Copyright (c) 2016, 2018 Contributors to the Eclipse Foundation
    *
    * See the NOTICE file(s) distributed with this work for additional
    * information regarding copyright ownership.
    *
    * This program and the accompanying materials are made available under the
    * terms of the Eclipse Public License 2.0 which is available at
    * http://www.eclipse.org/legal/epl-2.0
    *
    * SPDX-License-Identifier: EPL-2.0
    */
    activemq {
       org.apache.activemq.artemis.spi.core.security.jaas.PropertiesLoginModule sufficient
           debug=false
           reload=true
           org.apache.activemq.jaas.properties.user="artemis-users.properties"
           org.apache.activemq.jaas.properties.role="artemis-roles.properties";
    
       org.apache.activemq.artemis.spi.core.security.jaas.GuestLoginModule sufficient
           debug=false
           org.apache.activemq.jaas.guest.user="admin"
           org.apache.activemq.jaas.guest.role="amq";
    };
  "logging.properties": |
    ###############################################################################
    # Copyright (c) 2016, 2018 Contributors to the Eclipse Foundation
    #
    # See the NOTICE file(s) distributed with this work for additional
    # information regarding copyright ownership.
    #
    # This program and the accompanying materials are made available under the
    # terms of the Eclipse Public License 2.0 which is available at
    # http://www.eclipse.org/legal/epl-2.0
    #
    # SPDX-License-Identifier: EPL-2.0
    ###############################################################################
    # Additional logger names to configure (root logger is always configured)
    # Root logger option
    loggers=org.eclipse.jetty,org.jboss.logging,org.apache.activemq.artemis.core.server,org.apache.activemq.artemis.utils,org.apache.activemq.artemis.journal,org.apache.activemq.artemis.jms.server,org.apache.activemq.artemis.integration.bootstrap,org.apache.activemq.audit.base,org.apache.activemq.audit.message
    
    # Root logger level
    logger.level=INFO
    # ActiveMQ Artemis logger levels
    logger.org.apache.activemq.artemis.core.server.level=INFO
    logger.org.apache.activemq.artemis.journal.level=INFO
    logger.org.apache.activemq.artemis.utils.level=INFO
    logger.org.apache.activemq.artemis.jms.level=INFO
    logger.org.apache.activemq.artemis.integration.bootstrap.level=INFO
    logger.org.eclipse.jetty.level=WARN
    # Root logger handlers
    logger.handlers=FILE,CONSOLE
    
    # to enable audit change the level to INFO
    logger.org.apache.activemq.audit.base.level=ERROR
    logger.org.apache.activemq.audit.base.handlers=AUDIT_FILE
    logger.org.apache.activemq.audit.base.useParentHandlers=false
    
    logger.org.apache.activemq.audit.message.level=ERROR
    logger.org.apache.activemq.audit.message.handlers=AUDIT_FILE
    logger.org.apache.activemq.audit.message.useParentHandlers=false
    
    # Console handler configuration
    handler.CONSOLE=org.jboss.logmanager.handlers.ConsoleHandler
    handler.CONSOLE.properties=autoFlush
    handler.CONSOLE.level=DEBUG
    handler.CONSOLE.autoFlush=true
    handler.CONSOLE.formatter=PATTERN
    
    # File handler configuration
    handler.FILE=org.jboss.logmanager.handlers.PeriodicRotatingFileHandler
    handler.FILE.level=DEBUG
    handler.FILE.properties=suffix,append,autoFlush,fileName
    handler.FILE.suffix=.yyyy-MM-dd
    handler.FILE.append=true
    handler.FILE.autoFlush=true
    handler.FILE.fileName=${artemis.instance}/log/artemis.log
    handler.FILE.formatter=PATTERN
    
    # Formatter pattern configuration
    formatter.PATTERN=org.jboss.logmanager.formatters.PatternFormatter
    formatter.PATTERN.properties=pattern
    formatter.PATTERN.pattern=%d %-5p [%c] %s%E%n
    
    #Audit logger
    handler.AUDIT_FILE=org.jboss.logmanager.handlers.PeriodicRotatingFileHandler
    handler.AUDIT_FILE.level=INFO
    handler.AUDIT_FILE.properties=suffix,append,autoFlush,fileName
    handler.AUDIT_FILE.suffix=.yyyy-MM-dd
    handler.AUDIT_FILE.append=true
    handler.AUDIT_FILE.autoFlush=true
    handler.AUDIT_FILE.fileName=${artemis.instance}/log/audit.log
    handler.AUDIT_FILE.formatter=AUDIT_PATTERN
    
    formatter.AUDIT_PATTERN=org.jboss.logmanager.formatters.PatternFormatter
    formatter.AUDIT_PATTERN.properties=pattern
    formatter.AUDIT_PATTERN.pattern=%d [AUDIT](%t) %s%E%n
    
  "liveness-probe.sh": |
    
  "readiness-probe.sh": |
    #!/usr/bin/env bash
    
    # readiness-probe - checks if a given ActiveMQ Artemis broker instance's acceptor is running
    #
    # Copyright (c) 2022 Contributors to the Eclipse Foundation
    ##
    # This program and the accompanying materials are made available under the
    # terms of the Eclipse Public License 2.0 which is available at
    # http://www.eclipse.org/legal/epl-2.0
    #
    # SPDX-License-Identifier: EPL-2.0
    #
    # readiness-probe [broker_name acceptor_name]
    #
    
    brokerName=${1:-hono-broker}
    acceptorName=${2:-amqps}
    url="http://localhost:8161/console/jolokia/read/org.apache.activemq.artemis:broker=%22${brokerName}%22,component=acceptors,name=%22${acceptorName}%22/Started"
    
    curl -s --user artemis:artemis -H "Origin: http://localhost" ${url} | grep "\"value\":true"
    
    
data:
  "artemisKeyStore.p12": MIIGQgIBAzCCBggGCSqGSIb3DQEHAaCCBfkEggX1MIIF8TCCBOcGCSqGSIb3DQEHBqCCBNgwggTUAgEAMIIEzQYJKoZIhvcNAQcBMBwGCiqGSIb3DQEMAQYwDgQIr5VFrbeDjeACAggAgIIEoAVbYXseDIQqTEJEy2rgegR04iKrZgyWcwoCwdTYvog3Mh0OhvlzhxFbFXIjK7FqO7xc40sj3aNxeP+EBHTkbMvNPSDAMAFI2KbASQFzya9uC/Cq7ENq4avMcrb82r3GKLSNVUz51GwJo5VjjMvfhGRMbXWNM1yeaBrK+bsFy28S1Ksp66W9A0jIE8wA5nR3F5xHnTqdwFL6Yp5nLtq7VkrJcZzfuzos1mCF06qBcObPFyZu7ciTeB/D+LRZrigavv7BpjUZV8sgyPAkkcxJeg6v3Eg/LW3CIQbGQvaMBnyh4Jrye81AhM3LbM3f8feLl8JQX7KV8DeOoWPZF2DMMMzZa2IKw4ELaUXimc3ii3MVJl8w5XGYEdrA7g7eIWFoVYHyM2y7qLKyqyUe1Lu+Kld6W9gHwVNdgtmL3ZT6tFcu8Z/8HmDsnilV/Ln2ALmR6pqz/4hry0mA5Pvxak67Fmlpnf/WNRp0CpybaJugOUzUaNckF/JNqIIWm46LUVMY4XfxW03gBxCJ2HJIZKlJnO5WIMvblSordUj54FDJyBCuwRE8enbpYqnswLJT9reVUpwpUKBiJITIfxzJxU9DLqhqFSYGcTr2X7ZyE598mNhJ+bF7xX4dIxnEHlMyOEvRo3RaFZhhflYCT2G6P8h+BjMEDek+zhKfuWmwwaewiYnNAheMjuf5j9ZPXPDJOj1BnbXmOi/f0xqSIw+xqONWaEW8JaRldo1oovDyuAMlux0CLZa9bYdMuJGwehiVTQO6k2HeNso3XsLXJrB+GGNPLp4cWsNGrlg1z8J0Q5rh7MZnKZ0K8Nt/Oph6Arr3DXDTOjuLxNrJRlpzOlli8DYnKmtwhMm1mjwKL2RCmqoUb+c8a9c4w1yPFo5bBS4iSaQicNZaPeujXhaTMZehZHqts3rXCv5I98WjrrpMnPGhQ1ooFa8pic9L2wuj6pXSJ764wxIZOZaeL0pOkN+8l4Da7vu21rmN8ZLviJ6mVsyUkM823MQoHOPfs7P2IvfKpW3e6wnVP6kLRKa/Jc80b5g55kcjsYLgspvfUGAwBk0CZYDMTbkl5QVps0mSN5ayHjJvAGsc2heCBRb9MA50VhRBF9Nztxyk8t0Rq5IO0EnyGxSNHNlwguqJf0c4eKsH/siaRH2+InV/PtsiasdAfjurLgxSSMuIiVV2qXuTy3u1mlheTubCiMg/C0H4WLCA9NB93aPTQyuBcxgmPsEScUsXh+GVmMS4GL4m+L3zpOha5dauRXjV8/aXy+AWEufD6JMPBUNi1ZGDH6Up+m+AcDRTxMNIF7sQSgec+rUqg96d88GRnWx7bt7YgBaE1C7CVHQN7d2UCh/B5xJa22FCWtd/aC+Hg0B5LZ1t7mHaYIgx2NXCSPucaeZRUtvDSYymgPnCt07eZ5FXTo/FPTOxhbkIrObCn8qD/ZApslYUjKXmAVxNIWPOi4fcwu3CWp/eBhUkFffx+sdLtSTWBjhIFyl2kuOY6KUlpaByHytrsnjyCc5XSSNKYK2rMSwdBvEIojnqzrKOoByvdbPSl738Rx8soxzRbpoeIw+aC6LydylpCjGgMIIBAgYJKoZIhvcNAQcBoIH0BIHxMIHuMIHrBgsqhkiG9w0BDAoBAqCBtDCBsTAcBgoqhkiG9w0BDAEDMA4ECMDiV0ONRDF7AgIIAASBkAmEfu3+E2GM4ej2BNs0R1onfMJIqhArKL2PvVbr6+SKHm5j0Hq1PrGHOuLXOORzNnwSspiLrrSdB33l03DxzY3jN9wHmZF+Bb1pZ6NmXU9XkmokjL1fPwnGfsTuJNfOHy4tTWBELLeGl16IeMFuhkjqL1H0eO/1zy0RFooqYCh4DCt2Gcv49O2ap10QvS0GFTElMCMGCSqGSIb3DQEJFTEWBBSQInZoGjHVAPY57s2X0GS2fLYQejAxMCEwCQYFKw4DAhoFAAQUlbna0+96Eyok5Di/cuU+0yMttZ8ECG78ode5TJ5aAgIIAA==
---
# Source: cloud2edge/charts/hono/templates/dispatch-router/dispatch-router-secret.yaml
#
# Copyright (c) 2019, 2022 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
#
apiVersion: v1
kind: Secret
metadata:
  name: c2e-dispatch-router-conf
  namespace: cloud2edge
  labels:
    app.kubernetes.io/name: hono
    helm.sh/chart: hono-1.12.8
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: c2e
    app.kubernetes.io/version: 1.12.2
    app.kubernetes.io/component: amqp-messaging-network-router
type: Opaque
stringData:
  "qdrouterd.json": |
    [
      ["router", {
        "id": "c2e.Example.Router",
        "mode": "standalone",
        "workerThreads": 3
      }],
    
      ["authServicePlugin", {
        "name": "Hono Auth",
        "host": "c2e-service-auth",
        "port": 5671,
        "sslProfile": "internal"
      }],
    
      ["sslProfile", {
        "name": "server",
        "protocols": "TLSv1.2",
        "certFile": "/etc/hono/qdrouter-cert.pem",
        "privateKeyFile": "/etc/hono/qdrouter-key.pem"
      }],
    
      ["listener", {
        "sslProfile": "server",
        "requireSsl": true,
        "host": "0.0.0.0",
        "port": 5671,
        "linkCapacity": 100,
        "authenticatePeer": true,
        "saslMechanisms": "PLAIN",
        "saslPlugin": "Hono Auth"
      }],
    
      ["listener", {
        "host": "0.0.0.0",
        "port": 5672,
        "linkCapacity": 100,
        "authenticatePeer": true,
        "saslMechanisms": "PLAIN",
        "saslPlugin": "Hono Auth"
      }],
    
      ["sslProfile", {
        "name": "internal",
        "protocols": "TLSv1.2",
        "caCertFile": "/etc/hono/trusted-certs.pem",
        "certFile": "/etc/hono/qdrouter-cert.pem",
        "privateKeyFile": "/etc/hono/qdrouter-key.pem",
        "uidFormat": "ou"
      }],
    
      ["listener", {
        "sslProfile": "internal",
        "requireSsl": true,
        "host": "0.0.0.0",
        "port": 5673,
        "linkCapacity": 100,
        "authenticatePeer": true,
        "saslMechanisms": "EXTERNAL"
      }],
    
      ["listener", {
        "host": "0.0.0.0",
        "port": 8088,
        "http": true
      }],
    
      ["sslProfile", {
        "name": "broker-profile",
        "caCertFile": "/etc/hono/trusted-certs.pem",
        "protocols": "TLSv1.2"
      }],
    
      ["connector", {
        "name": "broker-connection",
        "sslProfile": "broker-profile",
        "role": "route-container",
        "port": 5671,
        "saslMechanisms": "PLAIN",
        "saslUsername": "artemis",
        "saslPassword": "file:/etc/hono/broker-password",
        "host": "c2e-artemis",
        "verifyHostname": false
      }],
    
      ["linkRoute", {
        "prefix": "event/",
        "direction": "in",
        "connection": "broker-connection"
      }],
    
      ["linkRoute", {
        "prefix": "event/",
        "direction": "out",
        "connection": "broker-connection"
      }],
    
      ["address", {
        "prefix": "telemetry/",
        "distribution": "balanced"
      }],
    
      ["address", {
        "prefix": "event/",
        "distribution": "balanced"
      }],
    
      ["address", {
        "prefix": "notification/",
        "distribution": "multicast"
      }],
    
      ["policy", {
        "maxConnections": 1000,
        "enableVhostPolicy": true,
        "defaultVhost": "hono"
      }],
    
      ["vhost", {
          "hostname": "hono",
          "maxConnections": 500,
          "maxConnectionsPerUser": 20,
          "maxConnectionsPerHost": 10,
          "allowUnknownUser": true,
          "groups": {
            "$default": {
              "remoteHosts": "*",
              "maxSessionWindow": 3276800,
              "maxSessions": 10
            }
          }
      }],
    
      ["vhost", {
          "hostname": "hono-internal",
          "maxConnections": 50,
          "groups": {
            "Adapters": {
              "users": "Eclipse IoT;Hono",
              "remoteHosts": "*",
              "maxSessions": 4,
              "maxSessionWindow": 8192000,
              "maxMessageSize": 131072,
              "allowUserIdProxy": true,
              "allowAnonymousSender": true,
              "sources": "command_internal/*, command/*, notification/*",
              "targets": "telemetry/*, event/*, command_internal/*, command_response/*, notification/*"
            }
          }
      }],
    
      ["log", {
        "module": "DEFAULT",
        "enable": "info+"
      }]
    ]
    
data:
  "qdrouter-key.pem": LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JR0hBZ0VBTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEJHMHdhd0lCQVFRZ2cxMjU0WU83WkFKanc2WW0KQTF2SjMxNW5wUXhxeUo0VE0vUU5EUHFuekZDaFJBTkNBQVNud2kzUW9ZaWRuVXpNaUI2VFArZUhTYzRpVy84LwpzM3VUWVBvbmpnMHlnWVE5WVJiWm9HRjdWbDRERDZ0bTRNNWxlSkFLYkRlc2JYV3J3Rk0xTFpKSgotLS0tLUVORCBQUklWQVRFIEtFWS0tLS0tCg==
  "qdrouter-cert.pem": LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNQekNDQWVTZ0F3SUJBZ0lVQjJ2eFdJOXdqMzJPSExhQUJWVitpdVZrZFJ3d0NnWUlLb1pJemowRUF3SXcKVURFTE1Ba0dBMVVFQmhNQ1EwRXhEekFOQmdOVkJBY01CazkwZEdGM1lURVVNQklHQTFVRUNnd0xSV05zYVhCegpaU0JKYjFReERUQUxCZ05WQkFzTUJFaHZibTh4Q3pBSkJnTlZCQU1NQW1OaE1CNFhEVEl5TURFeU5qQTRNRFl3Ck9Wb1hEVEl6TURFeU5qQTRNRFl3T1Zvd1ZqRUxNQWtHQTFVRUJoTUNRMEV4RHpBTkJnTlZCQWNNQms5MGRHRjMKWVRFVU1CSUdBMVVFQ2d3TFJXTnNhWEJ6WlNCSmIxUXhEVEFMQmdOVkJBc01CRWh2Ym04eEVUQVBCZ05WQkFNTQpDSEZrY205MWRHVnlNRmt3RXdZSEtvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQUVwOEl0MEtHSW5aMU16SWdlCmt6L25oMG5PSWx2L1A3TjdrMkQ2SjQ0Tk1vR0VQV0VXMmFCaGUxWmVBdytyWnVET1pYaVFDbXczckcxMXE4QlQKTlMyU1NhT0JsVENCa2pBZEJnTlZIUTRFRmdRVWNvWmdwNldZa2pDOE1RUkcwVFlKUmVmN01Oc3dDd1lEVlIwUApCQVFEQWdPb01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakJGQmdOVkhSRUVQakE4CmdoUm9iMjV2TFdScGMzQmhkR05vTFhKdmRYUmxjb0laYUc5dWJ5MWthWE53WVhSamFDMXliM1YwWlhJdWFHOXUKYjRJSmJHOWpZV3hvYjNOME1Bb0dDQ3FHU000OUJBTUNBMGtBTUVZQ0lRQ3lVRGZ3VkhxRXdwN3NnL1plK21TQQpDcElpb3VTeE1KNXZ5L1hCQXFROEZ3SWhBSVYrQlRidnZ3MHZJUnMzZk5BeGJkbjUyY1FQTHZLaDQ0Y2g1a2tpCmNneHAKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJQjR6Q0NBWW1nQXdJQkFnSVVEdmZzZXZIcEY3T2JSZUFBbUdYWEhIc0FYRHd3Q2dZSUtvWkl6ajBFQXdJdwpVakVMTUFrR0ExVUVCaE1DUTBFeER6QU5CZ05WQkFjTUJrOTBkR0YzWVRFVU1CSUdBMVVFQ2d3TFJXTnNhWEJ6ClpTQkpiMVF4RFRBTEJnTlZCQXNNQkVodmJtOHhEVEFMQmdOVkJBTU1CSEp2YjNRd0hoY05Nakl3TVRJMk1EZ3cKTmpBM1doY05Nak13TVRJMk1EZ3dOakEzV2pCUU1Rc3dDUVlEVlFRR0V3SkRRVEVQTUEwR0ExVUVCd3dHVDNSMApZWGRoTVJRd0VnWURWUVFLREF0RlkyeHBjSE5sSUVsdlZERU5NQXNHQTFVRUN3d0VTRzl1YnpFTE1Ba0dBMVVFCkF3d0NZMkV3V1RBVEJnY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkNBQVJRQXJORk5GNnZZTkpTeWloTWtqWUIKM1BYZ0Z1RS95dmJDVWd1T216a3dyMDFySWxYK3IvRVJ4Nnc0aHc5UXF3ZnFQcloyejJSdjA2dGN5ckxSblMxZwpvejh3UFRBZEJnTlZIUTRFRmdRVWVUQ20wMHRNajkrZC9QZEUyVFM1MEdIcUs4MHdEd1lEVlIwVEFRSC9CQVV3CkF3RUIvekFMQmdOVkhROEVCQU1DQVFZd0NnWUlLb1pJemowRUF3SURTQUF3UlFJaEFKWVU2YXI0QkFCeFNpRzcKbEplMGdibW1BQW5LU2RFL2lUYnNLTWJsUjE5UkFpQTZoYU8rbHI4WUZNOWpoYXRDWjJqdk1NWHA4UFFUWWcrdgo5OTJ4a29rbWFRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  "trusted-certs.pem": LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUI0ekNDQVltZ0F3SUJBZ0lVRHZmc2V2SHBGN09iUmVBQW1HWFhISHNBWER3d0NnWUlLb1pJemowRUF3SXcKVWpFTE1Ba0dBMVVFQmhNQ1EwRXhEekFOQmdOVkJBY01CazkwZEdGM1lURVVNQklHQTFVRUNnd0xSV05zYVhCegpaU0JKYjFReERUQUxCZ05WQkFzTUJFaHZibTh4RFRBTEJnTlZCQU1NQkhKdmIzUXdIaGNOTWpJd01USTJNRGd3Ck5qQTNXaGNOTWpNd01USTJNRGd3TmpBM1dqQlFNUXN3Q1FZRFZRUUdFd0pEUVRFUE1BMEdBMVVFQnd3R1QzUjAKWVhkaE1SUXdFZ1lEVlFRS0RBdEZZMnhwY0hObElFbHZWREVOTUFzR0ExVUVDd3dFU0c5dWJ6RUxNQWtHQTFVRQpBd3dDWTJFd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFSUUFyTkZORjZ2WU5KU3lpaE1rallCCjNQWGdGdUUveXZiQ1VndU9temt3cjAxcklsWCtyL0VSeDZ3NGh3OVFxd2ZxUHJaMnoyUnYwNnRjeXJMUm5TMWcKb3o4d1BUQWRCZ05WSFE0RUZnUVVlVENtMDB0TWo5K2QvUGRFMlRTNTBHSHFLODB3RHdZRFZSMFRBUUgvQkFVdwpBd0VCL3pBTEJnTlZIUThFQkFNQ0FRWXdDZ1lJS29aSXpqMEVBd0lEU0FBd1JRSWhBSllVNmFyNEJBQnhTaUc3CmxKZTBnYm1tQUFuS1NkRS9pVGJzS01ibFIxOVJBaUE2aGFPK2xyOFlGTTlqaGF0Q1oyanZNTVhwOFBRVFlnK3YKOTkyeGtva21hUT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNlRENDQWgrZ0F3SUJBZ0lVYmM4RmY0SDZJWTd1MzE5czlZM3BhdlFHN28wd0NnWUlLb1pJemowRUF3SXcKVWpFTE1Ba0dBMVVFQmhNQ1EwRXhEekFOQmdOVkJBY01CazkwZEdGM1lURVVNQklHQTFVRUNnd0xSV05zYVhCegpaU0JKYjFReERUQUxCZ05WQkFzTUJFaHZibTh4RFRBTEJnTlZCQU1NQkhKdmIzUXdIaGNOTWpJd01USTJNRGd3Ck5qQTNXaGNOTWpNd01USTJNRGd3TmpBM1dqQlNNUXN3Q1FZRFZRUUdFd0pEUVRFUE1BMEdBMVVFQnd3R1QzUjAKWVhkaE1SUXdFZ1lEVlFRS0RBdEZZMnhwY0hObElFbHZWREVOTUFzR0ExVUVDd3dFU0c5dWJ6RU5NQXNHQTFVRQpBd3dFY205dmREQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJDbWV3ZGlyMFMvSDE1eVpDTHV5Cnk4dk1MQU53QWJYVFVBcFk5d1N4ZnE5M25XTzFEdm9VWFJqOCtaS2hNVTFXc2wzQVFhZWxVNXBUMmswWXJhMEYKV0dtamdkSXdnYzh3SFFZRFZSME9CQllFRkhnZ2R4OXFYMnZ1OXVGaUF2WER2WHhHMnZ2Sk1JR1BCZ05WSFNNRQpnWWN3Z1lTQUZIZ2dkeDlxWDJ2dTl1RmlBdlhEdlh4RzJ2dkpvVmFrVkRCU01Rc3dDUVlEVlFRR0V3SkRRVEVQCk1BMEdBMVVFQnd3R1QzUjBZWGRoTVJRd0VnWURWUVFLREF0RlkyeHBjSE5sSUVsdlZERU5NQXNHQTFVRUN3d0UKU0c5dWJ6RU5NQXNHQTFVRUF3d0VjbTl2ZElJVWJjOEZmNEg2SVk3dTMxOXM5WTNwYXZRRzdvMHdEd1lEVlIwVApBUUgvQkFVd0F3RUIvekFMQmdOVkhROEVCQU1DQVFZd0NnWUlLb1pJemowRUF3SURSd0F3UkFJZ0s4V29HSVlyCmJEZmRsMU5yUnpxUVpvbE5JRnQ0Tm45cWZWUU1WUHFuck1nQ0lHaFJjM1MxTFpSbHk2MU9JN2RzZHhqRVZaUkgKTkpBTUlqemNaSVRJdkNIMgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlGRmpDQ0F2NmdBd0lCQWdJUkFKRXJDRXJQREJpblUvYldMaVduWDFvd0RRWUpLb1pJaHZjTkFRRUxCUUF3ClR6RUxNQWtHQTFVRUJoTUNWVk14S1RBbkJnTlZCQW9USUVsdWRHVnlibVYwSUZObFkzVnlhWFI1SUZKbGMyVmgKY21Ob0lFZHliM1Z3TVJVd0V3WURWUVFERXd4SlUxSkhJRkp2YjNRZ1dERXdIaGNOTWpBd09UQTBNREF3TURBdwpXaGNOTWpVd09URTFNVFl3TURBd1dqQXlNUXN3Q1FZRFZRUUdFd0pWVXpFV01CUUdBMVVFQ2hNTlRHVjBKM01nClJXNWpjbmx3ZERFTE1Ba0dBMVVFQXhNQ1VqTXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUsKQW9JQkFRQzdBaFVvelBhZ2xOTVBFdXlOVlpMRCtJTHhtYVo2UW9pblhTYXF0U3U1eFV5eHI0NXIrWFhJbzljUApSNVFVVlRWWGpKNm9vamtaOVlJOFFxbE9idlU3d3k3YmpjQ3dYUE5aT09mdHoybndXZ3NidnNDVUpDV0gramR4CnN4UG5IS3pobSsvYjVEdEZVa1dXcWNGVHpqVElVdTYxcnUyUDNtQnc0cVZVcTdadERwZWxRRFJySzlPOFp1dG0KTkh6NmE0dVBWeW1aK0RBWFhicHliL3VCeGEzU2hsZzlGOGZuQ2J2eEsvZUczTUhhY1YzVVJ1UE1yU1hCaUx4ZwpaM1Ztcy9FWTk2SmM1bFAvT29pMlI2WC9FeGpxbUFsM1A1MVQrYzhCNWZXbWNCY1VyMk9rLzVtems1M2NVNmNHCi9raUZIYUZwcmlWMXV4UE1VZ1AxN1ZHaGk5c1ZBZ01CQUFHamdnRUlNSUlCQkRBT0JnTlZIUThCQWY4RUJBTUMKQVlZd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3SUdDQ3NHQVFVRkJ3TUJNQklHQTFVZEV3RUIvd1FJTUFZQgpBZjhDQVFBd0hRWURWUjBPQkJZRUZCUXVzeGUzV0ZiTHJsQUpRT1lmcjUyTEZNTEdNQjhHQTFVZEl3UVlNQmFBCkZIbTBXZVo3dHVYa0FYT0FDSWpJR2xqMjZadHVNRElHQ0NzR0FRVUZCd0VCQkNZd0pEQWlCZ2dyQmdFRkJRY3cKQW9ZV2FIUjBjRG92TDNneExta3ViR1Z1WTNJdWIzSm5MekFuQmdOVkhSOEVJREFlTUJ5Z0dxQVloaFpvZEhSdwpPaTh2ZURFdVl5NXNaVzVqY2k1dmNtY3ZNQ0lHQTFVZElBUWJNQmt3Q0FZR1o0RU1BUUlCTUEwR0N5c0dBUVFCCmd0OFRBUUVCTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElDQVFDRnlrNUhQcVAzaFVTRnZOVm5lTEtZWTYxMVRSNlcKUFRObGNsUXRnYURxdyszNElMOWZ6TGR3QUxkdU8vWmVsTjdrSUorbTc0dXlBK2VpdFJZOGtjNjA3VGtDNTN3bAppa2ZtWlc0L1J2VFo4TTZVSys1VXpoSzhqQ2RMdU1HWUw2S3Z6WEdSU2dpM3lMZ2pld1F0Q1BrSVZ6NkQyUVF6CkNrY2hlQW1DSjhNcXlKdTV6bHp5Wk1qQXZubkFUNDV0UkF4ZWtyc3U5NHNRNGVnZFJDbmJXU0R0WTdraCtCSW0KbEpOWG9CMWxCTUVLSXE0UURVT1hvUmdmZnVEZ2hqZTFXckc5TUwrSGJpc3EveUZPR3dYRDlSaVg4RjZzdzZXNAphdkF1dkRzenVlNUwzc3o4NUsrRUM0WS93RlZETnZabzRUWVhhbzZaMGYrbFFLYzB0OERRWXprMU9YVnU4cnAyCnlKTUM2YWxMYkJmT0RBTFp2WUg3bjdkbzFBWmxzNEk5ZDFQNGpua0RyUW94QjNVcVE5aFZsM0xFS1E3M3hGMU8KeUs1R2hERFg4b1ZmR0tGNXUrZGVjSXNINFlhVHc3bVAzR0Z4SlNxdjMrMGxVRkpvaTVMYzVkYTE0OXA5MElkcwpoQ0V4cm9MMSs3bXJ5SWtYUGVGTTVUZ085cjBydlphQkZPdlYyejBncDM1WjArTDRXUGxidUVqTi9seFBGaW4rCkhsVWpyOGdSc0kzcWZKT1FGeS85cktJSlIwWS84T213dC84b1RXZ3kxbWRlSG1tams3ajFuWXN2QzlKU1E2WnYKTWxkbFRUS0IzemhUaFYxK1hXWXA2cmpkNUpXMXpiVldFa0xOeEU3R0pUaEVVRzNzemdCVkdQN3BTV1RVVHNxWApuTFJid0hPb3E3aEh3Zz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZhekNDQTFPZ0F3SUJBZ0lSQUlJUXo3RFNRT05aUkdQZ3UyT0Npd0F3RFFZSktvWklodmNOQVFFTEJRQXcKVHpFTE1Ba0dBMVVFQmhNQ1ZWTXhLVEFuQmdOVkJBb1RJRWx1ZEdWeWJtVjBJRk5sWTNWeWFYUjVJRkpsYzJWaApjbU5vSUVkeWIzVndNUlV3RXdZRFZRUURFd3hKVTFKSElGSnZiM1FnV0RFd0hoY05NVFV3TmpBME1URXdORE00CldoY05NelV3TmpBME1URXdORE00V2pCUE1Rc3dDUVlEVlFRR0V3SlZVekVwTUNjR0ExVUVDaE1nU1c1MFpYSnUKWlhRZ1UyVmpkWEpwZEhrZ1VtVnpaV0Z5WTJnZ1IzSnZkWEF4RlRBVEJnTlZCQU1UREVsVFVrY2dVbTl2ZENCWQpNVENDQWlJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dJUEFEQ0NBZ29DZ2dJQkFLM29KSFAwRkRmem01NHJWeWdjCmg3N2N0OTg0a0l4dVBPWlhvSGozZGNLaS92VnFidllBVHlqYjNtaUdiRVNUdHJGai9SUVNhNzhmMHVveG15RisKMFRNOHVrajEzWG5mczdqL0V2RWhta3ZCaW9aeGFVcG1abXlQZmp4d3Y2MHBJZ2J6NU1EbWdLN2lTNCszbVg2VQpBNS9UUjVkOG1VZ2pVK2c0cms4S2I0TXUwVWxYaklCMHR0b3YwRGlOZXdOd0lSdDE4akE4K28rdTNkcGpxK3NXClQ4S09FVXQrend2by83VjNMdlN5ZTByZ1RCSWxESENOQXltZzRWTWs3QlBaN2htL0VMTktqRCtKbzJGUjNxeUgKQjVUMFkzSHNMdUp2VzVpQjRZbGNOSGxzZHU4N2tHSjU1dHVrbWk4bXhkQVE0UTdlMlJDT0Z2dTM5NmozeCtVQwpCNWlQTmdpVjUrSTNsZzAyZFo3N0RuS3hIWnU4QS9sSkJkaUIzUVcwS3RaQjZhd0JkcFVLRDlqZjFiMFNIelV2CktCZHMwcGpCcUFsa2QyNUhON3JPckZsZWFKMS9jdGFKeFFaQktUNVpQdDBtOVNUSkVhZGFvMHhBSDBhaG1iV24KT2xGdWhqdWVmWEtuRWdWNFdlMCtVWGdWQ3dPUGpkQXZCYkkrZTBvY1MzTUZFdnpHNnVCUUUzeERrM1N6eW5UbgpqaDhCQ05BdzFGdHhOclFIdXNFd01GeEl0NEk3bUtaOVlJcWlveW1DekxxOWd3UWJvb01EUWFIV0JmRWJ3cmJ3CnFIeUdPMGFvU0NxSTNIYWFkcjhmYXFVOUdZL3JPUE5rM3NnckRRb28vL2ZiNGhWQzFDTFFKMTNoZWY0WTUzQ0kKclU3bTJZczZ4dDBuVVc3L3ZHVDFNME5QQWdNQkFBR2pRakJBTUE0R0ExVWREd0VCL3dRRUF3SUJCakFQQmdOVgpIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJSNXRGbm1lN2JsNUFGemdBaUl5QnBZOXVtYmJqQU5CZ2txCmhraUc5dzBCQVFzRkFBT0NBZ0VBVlI5WXFieXlxRkRRRExIWUdta2dKeWtJckdGMVhJcHUrSUxsYVMvVjlsWkwKdWJoekVGblRJWmQrNTB4eCs3TFNZSzA1cUF2cUZ5RldoZkZRRGxucnp1Qlo2YnJKRmUrR25ZK0VnUGJrNlpHUQozQmViWWh0RjhHYVYwbnh2d3VvNzd4L1B5OWF1Si9HcHNNaXUvWDErbXZvaUJPdi8yWC9xa1NzaXNSY09qL0tLCk5GdFkyUHdCeVZTNXVDYk1pb2d6aVV3dGhEeUMzKzZXVndXNkxMdjN4TGZIVGp1Q3ZqSElJbk56a3RIQ2dLUTUKT1JBekk0Sk1QSitHc2xXWUhiNHBob3dpbTU3aWF6dFhPb0p3VGR3Sng0bkxDZ2ROYk9oZGpzbnZ6cXZIdTdVcgpUa1hXU3RBbXpPVnl5Z2hxcFpYakZhSDNwTzNKTEYrbCsvK3NLQUl1dnRkN3UrTnhlNUFXMHdkZVJsTjhOd2RDCmpOUEVscHpWbWJVcTRKVWFnRWl1VERrSHpzeEhwRktWSzdxNCs2M1NNMU45NVIxTmJkV2hzY2RDYitaQUp6VmMKb3lpM0I0M25qVE9RNXlPZisxQ2NlV3hHMWJRVnM1WnVmcHNNbGpxNFVpMC8xbHZoK3dqQ2hQNGtxS09KMnF4cQo0Umdxc2FoRFlWdlRIOXc3alhieUxlaU5kZDhYTTJ3OVUvdDd5MEZmLzl5aTBHRTQ0WmE0ckYyTE45ZDExVFBBCm1SR3VuVUhCY25XRXZnSkJRbDluSkVpVTBac252Z2MvdWJoUGdYUlI0WHEzN1owajRyN2cxU2dFRXp3eEE1N2QKZW15UHhnY1l4bi9lUjQ0L0tKNEVCcytsVkRSM3ZleUptK2tYUTk5YjIxLytqaDVYb3MxQW5YNWlJdHJlR0NjPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  "broker-password" : YXJ0ZW1pcw==
---
# Source: cloud2edge/charts/hono/templates/hono-adapter-amqp/hono-adapter-amqp-vertx-secret.yaml
#
# Copyright (c) 2019, 2022 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
#
apiVersion: v1
kind: Secret
metadata:
  name: c2e-adapter-amqp-vertx-conf
  namespace: cloud2edge
  labels:
    app.kubernetes.io/name: hono
    helm.sh/chart: hono-1.12.8
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: c2e
    app.kubernetes.io/version: 1.12.2
    app.kubernetes.io/component: adapter-amqp-vertx
type: Opaque
stringData:
  logging-quarkus-prod.yml: |
    quarkus:
      log:
        category:
          "org.apache.kafka":
            level: ERROR
          "org.eclipse.hono":
            level: INFO
          "org.eclipse.hono.client.impl.HonoConnectionImpl":
            level: ERROR
    
  logging-quarkus-dev.yml: |
    quarkus:
      log:
        category:
          "io.netty.handler.logging.LoggingHandler":
            level: DEBUG
          "org.apache.kafka":
            level: INFO
          "org.eclipse.hono":
            level: DEBUG
          "org.infinispan":
            level: DEBUG
    
  logging-quarkus-trace.yml: |
    quarkus:
      log:
        category:
          "io.netty.handler.logging.LoggingHandler":
            level: DEBUG
          "org.apache.kafka":
            level: INFO
          "org.eclipse.hono":
            level: TRACE
          "org.infinispan":
            level: DEBUG
    
  application.yml: |
    hono:
      app:
        maxInstances: 1
      amqp:
        bindAddress: "0.0.0.0"
        keyPath: "/etc/hono/key.pem"
        certPath: "/etc/hono/cert.pem"
        insecurePortEnabled: true
        insecurePortBindAddress: "0.0.0.0"
        tenantIdleTimeout: "1h"
      healthCheck:
        insecurePort: 8088
        insecurePortBindAddress: "0.0.0.0"
      messaging:
        name: Hono adapter-amqp-vertx
        amqpHostname: hono-internal
        host: c2e-dispatch-router
        port: 5673
        keyPath: /etc/hono/key.pem
        certPath: /etc/hono/cert.pem
        trustStorePath: /etc/hono/trusted-certs.pem
        hostnameVerificationRequired: false
      command:
        name: Hono adapter-amqp-vertx
        amqpHostname: hono-internal
        host: c2e-dispatch-router
        port: 5673
        keyPath: /etc/hono/key.pem
        certPath: /etc/hono/cert.pem
        trustStorePath: /etc/hono/trusted-certs.pem
        hostnameVerificationRequired: false
      tenant:
        name: Hono adapter-amqp-vertx
        host: c2e-service-device-registry
        port: 5671
        credentialsPath: /etc/hono/adapter.credentials
        trustStorePath: "/etc/hono/trusted-certs.pem"
        hostnameVerificationRequired: false
      registration:
        name: Hono adapter-amqp-vertx
        host: c2e-service-device-registry
        port: 5671
        credentialsPath: /etc/hono/adapter.credentials
        trustStorePath: "/etc/hono/trusted-certs.pem"
        hostnameVerificationRequired: false
      credentials:
        name: Hono adapter-amqp-vertx
        host: c2e-service-device-registry
        port: 5671
        credentialsPath: /etc/hono/adapter.credentials
        trustStorePath: "/etc/hono/trusted-certs.pem"
        hostnameVerificationRequired: false
      commandRouter:
        name: Hono adapter-amqp-vertx
        host: c2e-service-command-router
        port: 5671
        credentialsPath: /etc/hono/adapter.credentials
        trustStorePath: "/etc/hono/trusted-certs.pem"
        hostnameVerificationRequired: false    
    quarkus:
      jaeger:
        service-name: "c2e-adapter-amqp-vertx"
      log:
        console:
          color: true
        min-level: TRACE
        level: INFO
        category:
          "io.quarkus.jaeger":
            level: DEBUG
          "io.quarkus.vertx.core.runtime":
            level: DEBUG
      vertx:
        prefer-native-transport: true
        resolver:
          cache-max-time-to-live: 0
data:
  key.pem: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JR0hBZ0VBTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEJHMHdhd0lCQVFRZ05GNzUrenUrQnY3UnhNQWYKakFRdHdjd2IzTHN2UnpUZnY5M3RrbnR4SDZPaFJBTkNBQVNYTUJCbmFmM0ZNK0ZMamwxL1hKWU9aaUNpM2JxUgpOOXJBUzE2VmNuUGtYT3pRUTZpSVR1dlIxY1VGSU9mUXBFOW15UU1sT1p5K1EwM0t1TklWR2IyNQotLS0tLUVORCBQUklWQVRFIEtFWS0tLS0tCg==
  cert.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNTRENDQWU2Z0F3SUJBZ0lVQjJ2eFdJOXdqMzJPSExhQUJWVitpdVZrZFNjd0NnWUlLb1pJemowRUF3SXcKVURFTE1Ba0dBMVVFQmhNQ1EwRXhEekFOQmdOVkJBY01CazkwZEdGM1lURVVNQklHQTFVRUNnd0xSV05zYVhCegpaU0JKYjFReERUQUxCZ05WQkFzTUJFaHZibTh4Q3pBSkJnTlZCQU1NQW1OaE1CNFhEVEl5TURFeU5qQTRNRFl4Ck1Gb1hEVEl6TURFeU5qQTRNRFl4TUZvd1dqRUxNQWtHQTFVRUJoTUNRMEV4RHpBTkJnTlZCQWNNQms5MGRHRjMKWVRFVU1CSUdBMVVFQ2d3TFJXTnNhWEJ6WlNCSmIxUXhEVEFMQmdOVkJBc01CRWh2Ym04eEZUQVRCZ05WQkFNTQpER0Z0Y1hBdFlXUmhjSFJsY2pCWk1CTUdCeXFHU000OUFnRUdDQ3FHU000OUF3RUhBMElBQkpjd0VHZHAvY1V6CjRVdU9YWDljbGc1bUlLTGR1cEUzMnNCTFhwVnljK1JjN05CRHFJaE82OUhWeFFVZzU5Q2tUMmJKQXlVNW5MNUQKVGNxNDBoVVp2Ym1qZ1pzd2daZ3dIUVlEVlIwT0JCWUVGSlZRRDFPVEtRNExNV2lVVnpjWFBjTGliRlBnTUFzRwpBMVVkRHdRRUF3SURxREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd1N3WURWUjBSCkJFUXdRb0lYYUc5dWJ5MWhaR0Z3ZEdWeUxXRnRjWEF0ZG1WeWRIaUNIR2h2Ym04dFlXUmhjSFJsY2kxaGJYRncKTFhabGNuUjRMbWh2Ym0rQ0NXeHZZMkZzYUc5emREQUtCZ2dxaGtqT1BRUURBZ05JQURCRkFpQjRHdVZ3L3VNNwpXeFo0S1pQOXAzSy8rNVdjcTRvdDU1YklrUElSTzdpT25nSWhBTCtiK1BMMjA3NmdqTjI4cEkxbGZ0eEI2SHE5CnRTcENmc2lWQUg4aUpxb2cKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJQjR6Q0NBWW1nQXdJQkFnSVVEdmZzZXZIcEY3T2JSZUFBbUdYWEhIc0FYRHd3Q2dZSUtvWkl6ajBFQXdJdwpVakVMTUFrR0ExVUVCaE1DUTBFeER6QU5CZ05WQkFjTUJrOTBkR0YzWVRFVU1CSUdBMVVFQ2d3TFJXTnNhWEJ6ClpTQkpiMVF4RFRBTEJnTlZCQXNNQkVodmJtOHhEVEFMQmdOVkJBTU1CSEp2YjNRd0hoY05Nakl3TVRJMk1EZ3cKTmpBM1doY05Nak13TVRJMk1EZ3dOakEzV2pCUU1Rc3dDUVlEVlFRR0V3SkRRVEVQTUEwR0ExVUVCd3dHVDNSMApZWGRoTVJRd0VnWURWUVFLREF0RlkyeHBjSE5sSUVsdlZERU5NQXNHQTFVRUN3d0VTRzl1YnpFTE1Ba0dBMVVFCkF3d0NZMkV3V1RBVEJnY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkNBQVJRQXJORk5GNnZZTkpTeWloTWtqWUIKM1BYZ0Z1RS95dmJDVWd1T216a3dyMDFySWxYK3IvRVJ4Nnc0aHc5UXF3ZnFQcloyejJSdjA2dGN5ckxSblMxZwpvejh3UFRBZEJnTlZIUTRFRmdRVWVUQ20wMHRNajkrZC9QZEUyVFM1MEdIcUs4MHdEd1lEVlIwVEFRSC9CQVV3CkF3RUIvekFMQmdOVkhROEVCQU1DQVFZd0NnWUlLb1pJemowRUF3SURTQUF3UlFJaEFKWVU2YXI0QkFCeFNpRzcKbEplMGdibW1BQW5LU2RFL2lUYnNLTWJsUjE5UkFpQTZoYU8rbHI4WUZNOWpoYXRDWjJqdk1NWHA4UFFUWWcrdgo5OTJ4a29rbWFRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  trusted-certs.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUI0ekNDQVltZ0F3SUJBZ0lVRHZmc2V2SHBGN09iUmVBQW1HWFhISHNBWER3d0NnWUlLb1pJemowRUF3SXcKVWpFTE1Ba0dBMVVFQmhNQ1EwRXhEekFOQmdOVkJBY01CazkwZEdGM1lURVVNQklHQTFVRUNnd0xSV05zYVhCegpaU0JKYjFReERUQUxCZ05WQkFzTUJFaHZibTh4RFRBTEJnTlZCQU1NQkhKdmIzUXdIaGNOTWpJd01USTJNRGd3Ck5qQTNXaGNOTWpNd01USTJNRGd3TmpBM1dqQlFNUXN3Q1FZRFZRUUdFd0pEUVRFUE1BMEdBMVVFQnd3R1QzUjAKWVhkaE1SUXdFZ1lEVlFRS0RBdEZZMnhwY0hObElFbHZWREVOTUFzR0ExVUVDd3dFU0c5dWJ6RUxNQWtHQTFVRQpBd3dDWTJFd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFSUUFyTkZORjZ2WU5KU3lpaE1rallCCjNQWGdGdUUveXZiQ1VndU9temt3cjAxcklsWCtyL0VSeDZ3NGh3OVFxd2ZxUHJaMnoyUnYwNnRjeXJMUm5TMWcKb3o4d1BUQWRCZ05WSFE0RUZnUVVlVENtMDB0TWo5K2QvUGRFMlRTNTBHSHFLODB3RHdZRFZSMFRBUUgvQkFVdwpBd0VCL3pBTEJnTlZIUThFQkFNQ0FRWXdDZ1lJS29aSXpqMEVBd0lEU0FBd1JRSWhBSllVNmFyNEJBQnhTaUc3CmxKZTBnYm1tQUFuS1NkRS9pVGJzS01ibFIxOVJBaUE2aGFPK2xyOFlGTTlqaGF0Q1oyanZNTVhwOFBRVFlnK3YKOTkyeGtva21hUT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNlRENDQWgrZ0F3SUJBZ0lVYmM4RmY0SDZJWTd1MzE5czlZM3BhdlFHN28wd0NnWUlLb1pJemowRUF3SXcKVWpFTE1Ba0dBMVVFQmhNQ1EwRXhEekFOQmdOVkJBY01CazkwZEdGM1lURVVNQklHQTFVRUNnd0xSV05zYVhCegpaU0JKYjFReERUQUxCZ05WQkFzTUJFaHZibTh4RFRBTEJnTlZCQU1NQkhKdmIzUXdIaGNOTWpJd01USTJNRGd3Ck5qQTNXaGNOTWpNd01USTJNRGd3TmpBM1dqQlNNUXN3Q1FZRFZRUUdFd0pEUVRFUE1BMEdBMVVFQnd3R1QzUjAKWVhkaE1SUXdFZ1lEVlFRS0RBdEZZMnhwY0hObElFbHZWREVOTUFzR0ExVUVDd3dFU0c5dWJ6RU5NQXNHQTFVRQpBd3dFY205dmREQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJDbWV3ZGlyMFMvSDE1eVpDTHV5Cnk4dk1MQU53QWJYVFVBcFk5d1N4ZnE5M25XTzFEdm9VWFJqOCtaS2hNVTFXc2wzQVFhZWxVNXBUMmswWXJhMEYKV0dtamdkSXdnYzh3SFFZRFZSME9CQllFRkhnZ2R4OXFYMnZ1OXVGaUF2WER2WHhHMnZ2Sk1JR1BCZ05WSFNNRQpnWWN3Z1lTQUZIZ2dkeDlxWDJ2dTl1RmlBdlhEdlh4RzJ2dkpvVmFrVkRCU01Rc3dDUVlEVlFRR0V3SkRRVEVQCk1BMEdBMVVFQnd3R1QzUjBZWGRoTVJRd0VnWURWUVFLREF0RlkyeHBjSE5sSUVsdlZERU5NQXNHQTFVRUN3d0UKU0c5dWJ6RU5NQXNHQTFVRUF3d0VjbTl2ZElJVWJjOEZmNEg2SVk3dTMxOXM5WTNwYXZRRzdvMHdEd1lEVlIwVApBUUgvQkFVd0F3RUIvekFMQmdOVkhROEVCQU1DQVFZd0NnWUlLb1pJemowRUF3SURSd0F3UkFJZ0s4V29HSVlyCmJEZmRsMU5yUnpxUVpvbE5JRnQ0Tm45cWZWUU1WUHFuck1nQ0lHaFJjM1MxTFpSbHk2MU9JN2RzZHhqRVZaUkgKTkpBTUlqemNaSVRJdkNIMgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlGRmpDQ0F2NmdBd0lCQWdJUkFKRXJDRXJQREJpblUvYldMaVduWDFvd0RRWUpLb1pJaHZjTkFRRUxCUUF3ClR6RUxNQWtHQTFVRUJoTUNWVk14S1RBbkJnTlZCQW9USUVsdWRHVnlibVYwSUZObFkzVnlhWFI1SUZKbGMyVmgKY21Ob0lFZHliM1Z3TVJVd0V3WURWUVFERXd4SlUxSkhJRkp2YjNRZ1dERXdIaGNOTWpBd09UQTBNREF3TURBdwpXaGNOTWpVd09URTFNVFl3TURBd1dqQXlNUXN3Q1FZRFZRUUdFd0pWVXpFV01CUUdBMVVFQ2hNTlRHVjBKM01nClJXNWpjbmx3ZERFTE1Ba0dBMVVFQXhNQ1VqTXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUsKQW9JQkFRQzdBaFVvelBhZ2xOTVBFdXlOVlpMRCtJTHhtYVo2UW9pblhTYXF0U3U1eFV5eHI0NXIrWFhJbzljUApSNVFVVlRWWGpKNm9vamtaOVlJOFFxbE9idlU3d3k3YmpjQ3dYUE5aT09mdHoybndXZ3NidnNDVUpDV0gramR4CnN4UG5IS3pobSsvYjVEdEZVa1dXcWNGVHpqVElVdTYxcnUyUDNtQnc0cVZVcTdadERwZWxRRFJySzlPOFp1dG0KTkh6NmE0dVBWeW1aK0RBWFhicHliL3VCeGEzU2hsZzlGOGZuQ2J2eEsvZUczTUhhY1YzVVJ1UE1yU1hCaUx4ZwpaM1Ztcy9FWTk2SmM1bFAvT29pMlI2WC9FeGpxbUFsM1A1MVQrYzhCNWZXbWNCY1VyMk9rLzVtems1M2NVNmNHCi9raUZIYUZwcmlWMXV4UE1VZ1AxN1ZHaGk5c1ZBZ01CQUFHamdnRUlNSUlCQkRBT0JnTlZIUThCQWY4RUJBTUMKQVlZd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3SUdDQ3NHQVFVRkJ3TUJNQklHQTFVZEV3RUIvd1FJTUFZQgpBZjhDQVFBd0hRWURWUjBPQkJZRUZCUXVzeGUzV0ZiTHJsQUpRT1lmcjUyTEZNTEdNQjhHQTFVZEl3UVlNQmFBCkZIbTBXZVo3dHVYa0FYT0FDSWpJR2xqMjZadHVNRElHQ0NzR0FRVUZCd0VCQkNZd0pEQWlCZ2dyQmdFRkJRY3cKQW9ZV2FIUjBjRG92TDNneExta3ViR1Z1WTNJdWIzSm5MekFuQmdOVkhSOEVJREFlTUJ5Z0dxQVloaFpvZEhSdwpPaTh2ZURFdVl5NXNaVzVqY2k1dmNtY3ZNQ0lHQTFVZElBUWJNQmt3Q0FZR1o0RU1BUUlCTUEwR0N5c0dBUVFCCmd0OFRBUUVCTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElDQVFDRnlrNUhQcVAzaFVTRnZOVm5lTEtZWTYxMVRSNlcKUFRObGNsUXRnYURxdyszNElMOWZ6TGR3QUxkdU8vWmVsTjdrSUorbTc0dXlBK2VpdFJZOGtjNjA3VGtDNTN3bAppa2ZtWlc0L1J2VFo4TTZVSys1VXpoSzhqQ2RMdU1HWUw2S3Z6WEdSU2dpM3lMZ2pld1F0Q1BrSVZ6NkQyUVF6CkNrY2hlQW1DSjhNcXlKdTV6bHp5Wk1qQXZubkFUNDV0UkF4ZWtyc3U5NHNRNGVnZFJDbmJXU0R0WTdraCtCSW0KbEpOWG9CMWxCTUVLSXE0UURVT1hvUmdmZnVEZ2hqZTFXckc5TUwrSGJpc3EveUZPR3dYRDlSaVg4RjZzdzZXNAphdkF1dkRzenVlNUwzc3o4NUsrRUM0WS93RlZETnZabzRUWVhhbzZaMGYrbFFLYzB0OERRWXprMU9YVnU4cnAyCnlKTUM2YWxMYkJmT0RBTFp2WUg3bjdkbzFBWmxzNEk5ZDFQNGpua0RyUW94QjNVcVE5aFZsM0xFS1E3M3hGMU8KeUs1R2hERFg4b1ZmR0tGNXUrZGVjSXNINFlhVHc3bVAzR0Z4SlNxdjMrMGxVRkpvaTVMYzVkYTE0OXA5MElkcwpoQ0V4cm9MMSs3bXJ5SWtYUGVGTTVUZ085cjBydlphQkZPdlYyejBncDM1WjArTDRXUGxidUVqTi9seFBGaW4rCkhsVWpyOGdSc0kzcWZKT1FGeS85cktJSlIwWS84T213dC84b1RXZ3kxbWRlSG1tams3ajFuWXN2QzlKU1E2WnYKTWxkbFRUS0IzemhUaFYxK1hXWXA2cmpkNUpXMXpiVldFa0xOeEU3R0pUaEVVRzNzemdCVkdQN3BTV1RVVHNxWApuTFJid0hPb3E3aEh3Zz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZhekNDQTFPZ0F3SUJBZ0lSQUlJUXo3RFNRT05aUkdQZ3UyT0Npd0F3RFFZSktvWklodmNOQVFFTEJRQXcKVHpFTE1Ba0dBMVVFQmhNQ1ZWTXhLVEFuQmdOVkJBb1RJRWx1ZEdWeWJtVjBJRk5sWTNWeWFYUjVJRkpsYzJWaApjbU5vSUVkeWIzVndNUlV3RXdZRFZRUURFd3hKVTFKSElGSnZiM1FnV0RFd0hoY05NVFV3TmpBME1URXdORE00CldoY05NelV3TmpBME1URXdORE00V2pCUE1Rc3dDUVlEVlFRR0V3SlZVekVwTUNjR0ExVUVDaE1nU1c1MFpYSnUKWlhRZ1UyVmpkWEpwZEhrZ1VtVnpaV0Z5WTJnZ1IzSnZkWEF4RlRBVEJnTlZCQU1UREVsVFVrY2dVbTl2ZENCWQpNVENDQWlJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dJUEFEQ0NBZ29DZ2dJQkFLM29KSFAwRkRmem01NHJWeWdjCmg3N2N0OTg0a0l4dVBPWlhvSGozZGNLaS92VnFidllBVHlqYjNtaUdiRVNUdHJGai9SUVNhNzhmMHVveG15RisKMFRNOHVrajEzWG5mczdqL0V2RWhta3ZCaW9aeGFVcG1abXlQZmp4d3Y2MHBJZ2J6NU1EbWdLN2lTNCszbVg2VQpBNS9UUjVkOG1VZ2pVK2c0cms4S2I0TXUwVWxYaklCMHR0b3YwRGlOZXdOd0lSdDE4akE4K28rdTNkcGpxK3NXClQ4S09FVXQrend2by83VjNMdlN5ZTByZ1RCSWxESENOQXltZzRWTWs3QlBaN2htL0VMTktqRCtKbzJGUjNxeUgKQjVUMFkzSHNMdUp2VzVpQjRZbGNOSGxzZHU4N2tHSjU1dHVrbWk4bXhkQVE0UTdlMlJDT0Z2dTM5NmozeCtVQwpCNWlQTmdpVjUrSTNsZzAyZFo3N0RuS3hIWnU4QS9sSkJkaUIzUVcwS3RaQjZhd0JkcFVLRDlqZjFiMFNIelV2CktCZHMwcGpCcUFsa2QyNUhON3JPckZsZWFKMS9jdGFKeFFaQktUNVpQdDBtOVNUSkVhZGFvMHhBSDBhaG1iV24KT2xGdWhqdWVmWEtuRWdWNFdlMCtVWGdWQ3dPUGpkQXZCYkkrZTBvY1MzTUZFdnpHNnVCUUUzeERrM1N6eW5UbgpqaDhCQ05BdzFGdHhOclFIdXNFd01GeEl0NEk3bUtaOVlJcWlveW1DekxxOWd3UWJvb01EUWFIV0JmRWJ3cmJ3CnFIeUdPMGFvU0NxSTNIYWFkcjhmYXFVOUdZL3JPUE5rM3NnckRRb28vL2ZiNGhWQzFDTFFKMTNoZWY0WTUzQ0kKclU3bTJZczZ4dDBuVVc3L3ZHVDFNME5QQWdNQkFBR2pRakJBTUE0R0ExVWREd0VCL3dRRUF3SUJCakFQQmdOVgpIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJSNXRGbm1lN2JsNUFGemdBaUl5QnBZOXVtYmJqQU5CZ2txCmhraUc5dzBCQVFzRkFBT0NBZ0VBVlI5WXFieXlxRkRRRExIWUdta2dKeWtJckdGMVhJcHUrSUxsYVMvVjlsWkwKdWJoekVGblRJWmQrNTB4eCs3TFNZSzA1cUF2cUZ5RldoZkZRRGxucnp1Qlo2YnJKRmUrR25ZK0VnUGJrNlpHUQozQmViWWh0RjhHYVYwbnh2d3VvNzd4L1B5OWF1Si9HcHNNaXUvWDErbXZvaUJPdi8yWC9xa1NzaXNSY09qL0tLCk5GdFkyUHdCeVZTNXVDYk1pb2d6aVV3dGhEeUMzKzZXVndXNkxMdjN4TGZIVGp1Q3ZqSElJbk56a3RIQ2dLUTUKT1JBekk0Sk1QSitHc2xXWUhiNHBob3dpbTU3aWF6dFhPb0p3VGR3Sng0bkxDZ2ROYk9oZGpzbnZ6cXZIdTdVcgpUa1hXU3RBbXpPVnl5Z2hxcFpYakZhSDNwTzNKTEYrbCsvK3NLQUl1dnRkN3UrTnhlNUFXMHdkZVJsTjhOd2RDCmpOUEVscHpWbWJVcTRKVWFnRWl1VERrSHpzeEhwRktWSzdxNCs2M1NNMU45NVIxTmJkV2hzY2RDYitaQUp6VmMKb3lpM0I0M25qVE9RNXlPZisxQ2NlV3hHMWJRVnM1WnVmcHNNbGpxNFVpMC8xbHZoK3dqQ2hQNGtxS09KMnF4cQo0Umdxc2FoRFlWdlRIOXc3alhieUxlaU5kZDhYTTJ3OVUvdDd5MEZmLzl5aTBHRTQ0WmE0ckYyTE45ZDExVFBBCm1SR3VuVUhCY25XRXZnSkJRbDluSkVpVTBac252Z2MvdWJoUGdYUlI0WHEzN1owajRyN2cxU2dFRXp3eEE1N2QKZW15UHhnY1l4bi9lUjQ0L0tKNEVCcytsVkRSM3ZleUptK2tYUTk5YjIxLytqaDVYb3MxQW5YNWlJdHJlR0NjPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  adapter.credentials: dXNlcm5hbWU9YW1xcC1hZGFwdGVyQEhPTk8KcGFzc3dvcmQ9YW1xcC1zZWNyZXQK
  truststore.jks: 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
---
# Source: cloud2edge/charts/hono/templates/hono-adapter-http/hono-adapter-http-vertx-secret.yaml
#
# Copyright (c) 2019, 2022 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
#
apiVersion: v1
kind: Secret
metadata:
  name: c2e-adapter-http-vertx-conf
  namespace: cloud2edge
  labels:
    app.kubernetes.io/name: hono
    helm.sh/chart: hono-1.12.8
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: c2e
    app.kubernetes.io/version: 1.12.2
    app.kubernetes.io/component: adapter-http-vertx
type: Opaque
stringData:
  logging-quarkus-prod.yml: |
    quarkus:
      log:
        category:
          "org.apache.kafka":
            level: ERROR
          "org.eclipse.hono":
            level: INFO
          "org.eclipse.hono.client.impl.HonoConnectionImpl":
            level: ERROR
    
  logging-quarkus-dev.yml: |
    quarkus:
      log:
        category:
          "io.netty.handler.logging.LoggingHandler":
            level: DEBUG
          "org.apache.kafka":
            level: INFO
          "org.eclipse.hono":
            level: DEBUG
          "org.infinispan":
            level: DEBUG
    
  logging-quarkus-trace.yml: |
    quarkus:
      log:
        category:
          "io.netty.handler.logging.LoggingHandler":
            level: DEBUG
          "org.apache.kafka":
            level: INFO
          "org.eclipse.hono":
            level: TRACE
          "org.infinispan":
            level: DEBUG
    
  application.yml: |
    hono:
      app:
        maxInstances: 1
      http:
        bindAddress: 0.0.0.0
        insecurePortBindAddress: 0.0.0.0
        insecurePortEnabled: true
        keyPath: /etc/hono/key.pem
        certPath: /etc/hono/cert.pem
        tenantIdleTimeout: "1h"
      healthCheck:
        insecurePort: 8088
        insecurePortBindAddress: "0.0.0.0"
      messaging:
        name: Hono adapter-http-vertx
        amqpHostname: hono-internal
        host: c2e-dispatch-router
        port: 5673
        keyPath: /etc/hono/key.pem
        certPath: /etc/hono/cert.pem
        trustStorePath: /etc/hono/trusted-certs.pem
        hostnameVerificationRequired: false
      command:
        name: Hono adapter-http-vertx
        amqpHostname: hono-internal
        host: c2e-dispatch-router
        port: 5673
        keyPath: /etc/hono/key.pem
        certPath: /etc/hono/cert.pem
        trustStorePath: /etc/hono/trusted-certs.pem
        hostnameVerificationRequired: false
      tenant:
        name: Hono adapter-http-vertx
        host: c2e-service-device-registry
        port: 5671
        credentialsPath: /etc/hono/adapter.credentials
        trustStorePath: "/etc/hono/trusted-certs.pem"
        hostnameVerificationRequired: false
      registration:
        name: Hono adapter-http-vertx
        host: c2e-service-device-registry
        port: 5671
        credentialsPath: /etc/hono/adapter.credentials
        trustStorePath: "/etc/hono/trusted-certs.pem"
        hostnameVerificationRequired: false
      credentials:
        name: Hono adapter-http-vertx
        host: c2e-service-device-registry
        port: 5671
        credentialsPath: /etc/hono/adapter.credentials
        trustStorePath: "/etc/hono/trusted-certs.pem"
        hostnameVerificationRequired: false
      commandRouter:
        name: Hono adapter-http-vertx
        host: c2e-service-command-router
        port: 5671
        credentialsPath: /etc/hono/adapter.credentials
        trustStorePath: "/etc/hono/trusted-certs.pem"
        hostnameVerificationRequired: false    
    quarkus:
      jaeger:
        service-name: "c2e-adapter-http-vertx"
      log:
        console:
          color: true
        min-level: TRACE
        level: INFO
        category:
          "io.quarkus.jaeger":
            level: DEBUG
          "io.quarkus.vertx.core.runtime":
            level: DEBUG
      vertx:
        prefer-native-transport: true
        resolver:
          cache-max-time-to-live: 0
data:
  key.pem: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JR0hBZ0VBTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEJHMHdhd0lCQVFRZzgvZGhNT0xWNSt2aHhlVzQKNDFzUjBROUk5UTJEbzYyN3RTUkN6NGJ5N21DaFJBTkNBQVF6TkZCZ2p1NmY0aW93M0RqZnJEeWZQbDJSaHlSRQplbkZjbUZTaVp6ZHoraVNrL0ljckl5TTRhbDJLR3JGYmxPQXJVYTdZbnp2dkZteXRwdzI0R2RRUwotLS0tLUVORCBQUklWQVRFIEtFWS0tLS0tCg==
  cert.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNTVENDQWU2Z0F3SUJBZ0lVQjJ2eFdJOXdqMzJPSExhQUJWVitpdVZrZFNFd0NnWUlLb1pJemowRUF3SXcKVURFTE1Ba0dBMVVFQmhNQ1EwRXhEekFOQmdOVkJBY01CazkwZEdGM1lURVVNQklHQTFVRUNnd0xSV05zYVhCegpaU0JKYjFReERUQUxCZ05WQkFzTUJFaHZibTh4Q3pBSkJnTlZCQU1NQW1OaE1CNFhEVEl5TURFeU5qQTRNRFl4Ck1Gb1hEVEl6TURFeU5qQTRNRFl4TUZvd1dqRUxNQWtHQTFVRUJoTUNRMEV4RHpBTkJnTlZCQWNNQms5MGRHRjMKWVRFVU1CSUdBMVVFQ2d3TFJXTnNhWEJ6WlNCSmIxUXhEVEFMQmdOVkJBc01CRWh2Ym04eEZUQVRCZ05WQkFNTQpER2gwZEhBdFlXUmhjSFJsY2pCWk1CTUdCeXFHU000OUFnRUdDQ3FHU000OUF3RUhBMElBQkRNMFVHQ083cC9pCktqRGNPTitzUEo4K1haR0hKRVI2Y1Z5WVZLSm5OM1A2SktUOGh5c2pJemhxWFlvYXNWdVU0Q3RScnRpZk8rOFcKYksybkRiZ1oxQktqZ1pzd2daZ3dIUVlEVlIwT0JCWUVGTk82dUx4SG1EZGVnV2NWK3RmNEh2UU0yYlk4TUFzRwpBMVVkRHdRRUF3SURxREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd1N3WURWUjBSCkJFUXdRb0lYYUc5dWJ5MWhaR0Z3ZEdWeUxXaDBkSEF0ZG1WeWRIaUNIR2h2Ym04dFlXUmhjSFJsY2kxb2RIUncKTFhabGNuUjRMbWh2Ym0rQ0NXeHZZMkZzYUc5emREQUtCZ2dxaGtqT1BRUURBZ05KQURCR0FpRUEvUDdDWld2SwpjSWtrUHMzUFJOdHVSczA5SzFqZ0xtQXR2OWJkS1FSWXIvQUNJUUNrZlNPVGhEOHRPeE1mL2d2NThTdHlnNEZVCnFWc1NBd2Fvdi9VZUlQWUpqZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUI0ekNDQVltZ0F3SUJBZ0lVRHZmc2V2SHBGN09iUmVBQW1HWFhISHNBWER3d0NnWUlLb1pJemowRUF3SXcKVWpFTE1Ba0dBMVVFQmhNQ1EwRXhEekFOQmdOVkJBY01CazkwZEdGM1lURVVNQklHQTFVRUNnd0xSV05zYVhCegpaU0JKYjFReERUQUxCZ05WQkFzTUJFaHZibTh4RFRBTEJnTlZCQU1NQkhKdmIzUXdIaGNOTWpJd01USTJNRGd3Ck5qQTNXaGNOTWpNd01USTJNRGd3TmpBM1dqQlFNUXN3Q1FZRFZRUUdFd0pEUVRFUE1BMEdBMVVFQnd3R1QzUjAKWVhkaE1SUXdFZ1lEVlFRS0RBdEZZMnhwY0hObElFbHZWREVOTUFzR0ExVUVDd3dFU0c5dWJ6RUxNQWtHQTFVRQpBd3dDWTJFd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFSUUFyTkZORjZ2WU5KU3lpaE1rallCCjNQWGdGdUUveXZiQ1VndU9temt3cjAxcklsWCtyL0VSeDZ3NGh3OVFxd2ZxUHJaMnoyUnYwNnRjeXJMUm5TMWcKb3o4d1BUQWRCZ05WSFE0RUZnUVVlVENtMDB0TWo5K2QvUGRFMlRTNTBHSHFLODB3RHdZRFZSMFRBUUgvQkFVdwpBd0VCL3pBTEJnTlZIUThFQkFNQ0FRWXdDZ1lJS29aSXpqMEVBd0lEU0FBd1JRSWhBSllVNmFyNEJBQnhTaUc3CmxKZTBnYm1tQUFuS1NkRS9pVGJzS01ibFIxOVJBaUE2aGFPK2xyOFlGTTlqaGF0Q1oyanZNTVhwOFBRVFlnK3YKOTkyeGtva21hUT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  trusted-certs.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUI0ekNDQVltZ0F3SUJBZ0lVRHZmc2V2SHBGN09iUmVBQW1HWFhISHNBWER3d0NnWUlLb1pJemowRUF3SXcKVWpFTE1Ba0dBMVVFQmhNQ1EwRXhEekFOQmdOVkJBY01CazkwZEdGM1lURVVNQklHQTFVRUNnd0xSV05zYVhCegpaU0JKYjFReERUQUxCZ05WQkFzTUJFaHZibTh4RFRBTEJnTlZCQU1NQkhKdmIzUXdIaGNOTWpJd01USTJNRGd3Ck5qQTNXaGNOTWpNd01USTJNRGd3TmpBM1dqQlFNUXN3Q1FZRFZRUUdFd0pEUVRFUE1BMEdBMVVFQnd3R1QzUjAKWVhkaE1SUXdFZ1lEVlFRS0RBdEZZMnhwY0hObElFbHZWREVOTUFzR0ExVUVDd3dFU0c5dWJ6RUxNQWtHQTFVRQpBd3dDWTJFd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFSUUFyTkZORjZ2WU5KU3lpaE1rallCCjNQWGdGdUUveXZiQ1VndU9temt3cjAxcklsWCtyL0VSeDZ3NGh3OVFxd2ZxUHJaMnoyUnYwNnRjeXJMUm5TMWcKb3o4d1BUQWRCZ05WSFE0RUZnUVVlVENtMDB0TWo5K2QvUGRFMlRTNTBHSHFLODB3RHdZRFZSMFRBUUgvQkFVdwpBd0VCL3pBTEJnTlZIUThFQkFNQ0FRWXdDZ1lJS29aSXpqMEVBd0lEU0FBd1JRSWhBSllVNmFyNEJBQnhTaUc3CmxKZTBnYm1tQUFuS1NkRS9pVGJzS01ibFIxOVJBaUE2aGFPK2xyOFlGTTlqaGF0Q1oyanZNTVhwOFBRVFlnK3YKOTkyeGtva21hUT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNlRENDQWgrZ0F3SUJBZ0lVYmM4RmY0SDZJWTd1MzE5czlZM3BhdlFHN28wd0NnWUlLb1pJemowRUF3SXcKVWpFTE1Ba0dBMVVFQmhNQ1EwRXhEekFOQmdOVkJBY01CazkwZEdGM1lURVVNQklHQTFVRUNnd0xSV05zYVhCegpaU0JKYjFReERUQUxCZ05WQkFzTUJFaHZibTh4RFRBTEJnTlZCQU1NQkhKdmIzUXdIaGNOTWpJd01USTJNRGd3Ck5qQTNXaGNOTWpNd01USTJNRGd3TmpBM1dqQlNNUXN3Q1FZRFZRUUdFd0pEUVRFUE1BMEdBMVVFQnd3R1QzUjAKWVhkaE1SUXdFZ1lEVlFRS0RBdEZZMnhwY0hObElFbHZWREVOTUFzR0ExVUVDd3dFU0c5dWJ6RU5NQXNHQTFVRQpBd3dFY205dmREQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJDbWV3ZGlyMFMvSDE1eVpDTHV5Cnk4dk1MQU53QWJYVFVBcFk5d1N4ZnE5M25XTzFEdm9VWFJqOCtaS2hNVTFXc2wzQVFhZWxVNXBUMmswWXJhMEYKV0dtamdkSXdnYzh3SFFZRFZSME9CQllFRkhnZ2R4OXFYMnZ1OXVGaUF2WER2WHhHMnZ2Sk1JR1BCZ05WSFNNRQpnWWN3Z1lTQUZIZ2dkeDlxWDJ2dTl1RmlBdlhEdlh4RzJ2dkpvVmFrVkRCU01Rc3dDUVlEVlFRR0V3SkRRVEVQCk1BMEdBMVVFQnd3R1QzUjBZWGRoTVJRd0VnWURWUVFLREF0RlkyeHBjSE5sSUVsdlZERU5NQXNHQTFVRUN3d0UKU0c5dWJ6RU5NQXNHQTFVRUF3d0VjbTl2ZElJVWJjOEZmNEg2SVk3dTMxOXM5WTNwYXZRRzdvMHdEd1lEVlIwVApBUUgvQkFVd0F3RUIvekFMQmdOVkhROEVCQU1DQVFZd0NnWUlLb1pJemowRUF3SURSd0F3UkFJZ0s4V29HSVlyCmJEZmRsMU5yUnpxUVpvbE5JRnQ0Tm45cWZWUU1WUHFuck1nQ0lHaFJjM1MxTFpSbHk2MU9JN2RzZHhqRVZaUkgKTkpBTUlqemNaSVRJdkNIMgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlGRmpDQ0F2NmdBd0lCQWdJUkFKRXJDRXJQREJpblUvYldMaVduWDFvd0RRWUpLb1pJaHZjTkFRRUxCUUF3ClR6RUxNQWtHQTFVRUJoTUNWVk14S1RBbkJnTlZCQW9USUVsdWRHVnlibVYwSUZObFkzVnlhWFI1SUZKbGMyVmgKY21Ob0lFZHliM1Z3TVJVd0V3WURWUVFERXd4SlUxSkhJRkp2YjNRZ1dERXdIaGNOTWpBd09UQTBNREF3TURBdwpXaGNOTWpVd09URTFNVFl3TURBd1dqQXlNUXN3Q1FZRFZRUUdFd0pWVXpFV01CUUdBMVVFQ2hNTlRHVjBKM01nClJXNWpjbmx3ZERFTE1Ba0dBMVVFQXhNQ1VqTXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUsKQW9JQkFRQzdBaFVvelBhZ2xOTVBFdXlOVlpMRCtJTHhtYVo2UW9pblhTYXF0U3U1eFV5eHI0NXIrWFhJbzljUApSNVFVVlRWWGpKNm9vamtaOVlJOFFxbE9idlU3d3k3YmpjQ3dYUE5aT09mdHoybndXZ3NidnNDVUpDV0gramR4CnN4UG5IS3pobSsvYjVEdEZVa1dXcWNGVHpqVElVdTYxcnUyUDNtQnc0cVZVcTdadERwZWxRRFJySzlPOFp1dG0KTkh6NmE0dVBWeW1aK0RBWFhicHliL3VCeGEzU2hsZzlGOGZuQ2J2eEsvZUczTUhhY1YzVVJ1UE1yU1hCaUx4ZwpaM1Ztcy9FWTk2SmM1bFAvT29pMlI2WC9FeGpxbUFsM1A1MVQrYzhCNWZXbWNCY1VyMk9rLzVtems1M2NVNmNHCi9raUZIYUZwcmlWMXV4UE1VZ1AxN1ZHaGk5c1ZBZ01CQUFHamdnRUlNSUlCQkRBT0JnTlZIUThCQWY4RUJBTUMKQVlZd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3SUdDQ3NHQVFVRkJ3TUJNQklHQTFVZEV3RUIvd1FJTUFZQgpBZjhDQVFBd0hRWURWUjBPQkJZRUZCUXVzeGUzV0ZiTHJsQUpRT1lmcjUyTEZNTEdNQjhHQTFVZEl3UVlNQmFBCkZIbTBXZVo3dHVYa0FYT0FDSWpJR2xqMjZadHVNRElHQ0NzR0FRVUZCd0VCQkNZd0pEQWlCZ2dyQmdFRkJRY3cKQW9ZV2FIUjBjRG92TDNneExta3ViR1Z1WTNJdWIzSm5MekFuQmdOVkhSOEVJREFlTUJ5Z0dxQVloaFpvZEhSdwpPaTh2ZURFdVl5NXNaVzVqY2k1dmNtY3ZNQ0lHQTFVZElBUWJNQmt3Q0FZR1o0RU1BUUlCTUEwR0N5c0dBUVFCCmd0OFRBUUVCTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElDQVFDRnlrNUhQcVAzaFVTRnZOVm5lTEtZWTYxMVRSNlcKUFRObGNsUXRnYURxdyszNElMOWZ6TGR3QUxkdU8vWmVsTjdrSUorbTc0dXlBK2VpdFJZOGtjNjA3VGtDNTN3bAppa2ZtWlc0L1J2VFo4TTZVSys1VXpoSzhqQ2RMdU1HWUw2S3Z6WEdSU2dpM3lMZ2pld1F0Q1BrSVZ6NkQyUVF6CkNrY2hlQW1DSjhNcXlKdTV6bHp5Wk1qQXZubkFUNDV0UkF4ZWtyc3U5NHNRNGVnZFJDbmJXU0R0WTdraCtCSW0KbEpOWG9CMWxCTUVLSXE0UURVT1hvUmdmZnVEZ2hqZTFXckc5TUwrSGJpc3EveUZPR3dYRDlSaVg4RjZzdzZXNAphdkF1dkRzenVlNUwzc3o4NUsrRUM0WS93RlZETnZabzRUWVhhbzZaMGYrbFFLYzB0OERRWXprMU9YVnU4cnAyCnlKTUM2YWxMYkJmT0RBTFp2WUg3bjdkbzFBWmxzNEk5ZDFQNGpua0RyUW94QjNVcVE5aFZsM0xFS1E3M3hGMU8KeUs1R2hERFg4b1ZmR0tGNXUrZGVjSXNINFlhVHc3bVAzR0Z4SlNxdjMrMGxVRkpvaTVMYzVkYTE0OXA5MElkcwpoQ0V4cm9MMSs3bXJ5SWtYUGVGTTVUZ085cjBydlphQkZPdlYyejBncDM1WjArTDRXUGxidUVqTi9seFBGaW4rCkhsVWpyOGdSc0kzcWZKT1FGeS85cktJSlIwWS84T213dC84b1RXZ3kxbWRlSG1tams3ajFuWXN2QzlKU1E2WnYKTWxkbFRUS0IzemhUaFYxK1hXWXA2cmpkNUpXMXpiVldFa0xOeEU3R0pUaEVVRzNzemdCVkdQN3BTV1RVVHNxWApuTFJid0hPb3E3aEh3Zz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZhekNDQTFPZ0F3SUJBZ0lSQUlJUXo3RFNRT05aUkdQZ3UyT0Npd0F3RFFZSktvWklodmNOQVFFTEJRQXcKVHpFTE1Ba0dBMVVFQmhNQ1ZWTXhLVEFuQmdOVkJBb1RJRWx1ZEdWeWJtVjBJRk5sWTNWeWFYUjVJRkpsYzJWaApjbU5vSUVkeWIzVndNUlV3RXdZRFZRUURFd3hKVTFKSElGSnZiM1FnV0RFd0hoY05NVFV3TmpBME1URXdORE00CldoY05NelV3TmpBME1URXdORE00V2pCUE1Rc3dDUVlEVlFRR0V3SlZVekVwTUNjR0ExVUVDaE1nU1c1MFpYSnUKWlhRZ1UyVmpkWEpwZEhrZ1VtVnpaV0Z5WTJnZ1IzSnZkWEF4RlRBVEJnTlZCQU1UREVsVFVrY2dVbTl2ZENCWQpNVENDQWlJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dJUEFEQ0NBZ29DZ2dJQkFLM29KSFAwRkRmem01NHJWeWdjCmg3N2N0OTg0a0l4dVBPWlhvSGozZGNLaS92VnFidllBVHlqYjNtaUdiRVNUdHJGai9SUVNhNzhmMHVveG15RisKMFRNOHVrajEzWG5mczdqL0V2RWhta3ZCaW9aeGFVcG1abXlQZmp4d3Y2MHBJZ2J6NU1EbWdLN2lTNCszbVg2VQpBNS9UUjVkOG1VZ2pVK2c0cms4S2I0TXUwVWxYaklCMHR0b3YwRGlOZXdOd0lSdDE4akE4K28rdTNkcGpxK3NXClQ4S09FVXQrend2by83VjNMdlN5ZTByZ1RCSWxESENOQXltZzRWTWs3QlBaN2htL0VMTktqRCtKbzJGUjNxeUgKQjVUMFkzSHNMdUp2VzVpQjRZbGNOSGxzZHU4N2tHSjU1dHVrbWk4bXhkQVE0UTdlMlJDT0Z2dTM5NmozeCtVQwpCNWlQTmdpVjUrSTNsZzAyZFo3N0RuS3hIWnU4QS9sSkJkaUIzUVcwS3RaQjZhd0JkcFVLRDlqZjFiMFNIelV2CktCZHMwcGpCcUFsa2QyNUhON3JPckZsZWFKMS9jdGFKeFFaQktUNVpQdDBtOVNUSkVhZGFvMHhBSDBhaG1iV24KT2xGdWhqdWVmWEtuRWdWNFdlMCtVWGdWQ3dPUGpkQXZCYkkrZTBvY1MzTUZFdnpHNnVCUUUzeERrM1N6eW5UbgpqaDhCQ05BdzFGdHhOclFIdXNFd01GeEl0NEk3bUtaOVlJcWlveW1DekxxOWd3UWJvb01EUWFIV0JmRWJ3cmJ3CnFIeUdPMGFvU0NxSTNIYWFkcjhmYXFVOUdZL3JPUE5rM3NnckRRb28vL2ZiNGhWQzFDTFFKMTNoZWY0WTUzQ0kKclU3bTJZczZ4dDBuVVc3L3ZHVDFNME5QQWdNQkFBR2pRakJBTUE0R0ExVWREd0VCL3dRRUF3SUJCakFQQmdOVgpIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJSNXRGbm1lN2JsNUFGemdBaUl5QnBZOXVtYmJqQU5CZ2txCmhraUc5dzBCQVFzRkFBT0NBZ0VBVlI5WXFieXlxRkRRRExIWUdta2dKeWtJckdGMVhJcHUrSUxsYVMvVjlsWkwKdWJoekVGblRJWmQrNTB4eCs3TFNZSzA1cUF2cUZ5RldoZkZRRGxucnp1Qlo2YnJKRmUrR25ZK0VnUGJrNlpHUQozQmViWWh0RjhHYVYwbnh2d3VvNzd4L1B5OWF1Si9HcHNNaXUvWDErbXZvaUJPdi8yWC9xa1NzaXNSY09qL0tLCk5GdFkyUHdCeVZTNXVDYk1pb2d6aVV3dGhEeUMzKzZXVndXNkxMdjN4TGZIVGp1Q3ZqSElJbk56a3RIQ2dLUTUKT1JBekk0Sk1QSitHc2xXWUhiNHBob3dpbTU3aWF6dFhPb0p3VGR3Sng0bkxDZ2ROYk9oZGpzbnZ6cXZIdTdVcgpUa1hXU3RBbXpPVnl5Z2hxcFpYakZhSDNwTzNKTEYrbCsvK3NLQUl1dnRkN3UrTnhlNUFXMHdkZVJsTjhOd2RDCmpOUEVscHpWbWJVcTRKVWFnRWl1VERrSHpzeEhwRktWSzdxNCs2M1NNMU45NVIxTmJkV2hzY2RDYitaQUp6VmMKb3lpM0I0M25qVE9RNXlPZisxQ2NlV3hHMWJRVnM1WnVmcHNNbGpxNFVpMC8xbHZoK3dqQ2hQNGtxS09KMnF4cQo0Umdxc2FoRFlWdlRIOXc3alhieUxlaU5kZDhYTTJ3OVUvdDd5MEZmLzl5aTBHRTQ0WmE0ckYyTE45ZDExVFBBCm1SR3VuVUhCY25XRXZnSkJRbDluSkVpVTBac252Z2MvdWJoUGdYUlI0WHEzN1owajRyN2cxU2dFRXp3eEE1N2QKZW15UHhnY1l4bi9lUjQ0L0tKNEVCcytsVkRSM3ZleUptK2tYUTk5YjIxLytqaDVYb3MxQW5YNWlJdHJlR0NjPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  adapter.credentials: dXNlcm5hbWU9aHR0cC1hZGFwdGVyQEhPTk8KcGFzc3dvcmQ9aHR0cC1zZWNyZXQK
  truststore.jks: MIIRggIBAzCCESwGCSqGSIb3DQEHAaCCER0EghEZMIIRFTCCEREGCSqGSIb3DQEHBqCCEQIwghD+AgEAMIIQ9wYJKoZIhvcNAQcBMGYGCSqGSIb3DQEFDTBZMDgGCSqGSIb3DQEFDDArBBT+u6nYAisLMRryYdqYFseJHak+XQICJxACASAwDAYIKoZIhvcNAgkFADAdBglghkgBZQMEASoEEIFFUYPiISO305S8A0cN7uCAghCAWq4LBY3JInZiO79Ynf3zFk7lL8l9M4I0XU6QU20cqEMn5Wojs1NRAYQfvJOXsWRappjODg+J1BL4WZzz7nUukkGm6O6tIMLxh4fLqJKYZ7KpucrU9j1B0/GQwqw8KVVoAxdDtpBQSirwJ73uSQyMeiQTR37RSD/A2SUhVQ10Nd6I8bPIsR+737So5bgNSVQC2Xe9tEOHRwOkEL7HB8g185YKSIub9W/5eZh01rKoneCEmscMtzqxUmUtu586utXSfybxPKjMswq/nFxEH4QY3N04dIONHLqrTQPOBgEmu5x+OkpacU229e2m6X6e6Cg+kykozNVthQsD6o16MCYHcagor3cNSD+p+hncb5/hSneO6yS6mU7PExuEQYGd/bIAWPfPQlGAuQz6SQqCueMMVP5GpdMS7oogwvVoXptNQUkmqh6XYSLdiw9/DAlOQ7FhagO7lVOTklbbbKV4tLqUzU0GS+kKVOykFxAhXUSVsM0Qd5yqkvbwlF/kg0qW5DwS9rrQ2+7pucoPK4hJsQlhGElGvfvdcMoXu2ISObNsYjzBBq4vUstIWEGiAcMTlWv4F4fwBGTNm822OOXiv9EngNZPr4LLwgnH11wxtHDUv8aIwkPX5wLHDPdw7mXemsTKNJcxXdHs03LnkmqG00hGoGx87sQKZ2GbKXrDSCVBDfyoSZzH8uOUXNhFyjIGF7rwoYA+0ZiavBVP866VPFSCh9QmgCoTlB3wuU3CJwHY7wWSDCPiF87C7cg+CNyEH5h2P8wfgq3jYu2Mp1QzJdvWM7NnMWlhhy4XKKVlKcbcz2KYrwa6jwmrtonzmnDV+dupATBx78zNhZKQyAzfvTbO8Xqfj6VMtufIiTFdiYLEmzA2xHpwtB7k9rpUQMZUmsHgvtfuhGK0P3TwxpCJ/gy1KCwPqIxFJHetHBBuj+zjDHlweudsDqvE139kxeoLSlCA69RqeaYwcJAAkfaXPfsJWKLEhT3j7YIqHjqZM0PnQ2P51yu+ikfZaaTSMNz3c4pigE8bdjtRUXIz9SgtJ4GvK9WcvHDxmD4u52z37yDMpFj8n2PvFAkOz15Xym7R7XYRCI9NRxM8cvnC5rgfS8vAXSOzt5SpRbiPNvv5y8Y09d9ArvQIqOcAoN1TvNzdbZd9/feAiO/f5ENNDjH/ygCy3hanBDMKGLwFYfFV/BTSS/dWW9ppL+NuJ3CaMP1yqYzIVPI/BAC+1GygeMreja5IjTyp3ITR4rigTvC+9TZwqt3UNslZ2cR3CDLJVth3WsaKBfurIlJY8pLe6m4AfieOY6kN9QbexhfoSyOnuVQmgukuJ6DM8ympnhlzc0nk7qL2Qf0GBWG207ETvVHmRBUW41Ptr/p8P/PzBfhD908ujBdR8MxN4UTRh2kCXoWTPvmrjEBvUi8quKDTw4OVWrsLTSL/TM6BNOFY7HioTrcKV3PQp/LHVxFpWBIWpdcOLGiWmBz5XbuGItwQKxZ2Iq7A09gKrm0XGPrV+JvsGWUwupqnb7g75yYgPSpoW7N7kvyq48noqlQzaogNiX8T0xXfzpkabPd6Fs9O0osib61NZQ4yTE4//S5Pik27hjpHqjmoWn2zy6gCpCrdSf3L4tDdpzA80+kuH7ZaO1RP1mCakOGkvnBQKR3D8qBKvT7AELlk7xJjuW4y+Bo65vSSSiTEaW/R0PrO1FboJaz+BWNFBHGuOghm+BZrHfKzRUE+tPsN6/V8fbjKjQGHAlEJ/2aHhKdNpEma/9xMI9YNDGLcluUfZF5yr6zDaYipZ66XlCZa/LyiYZSpfK/QjYO2MJrXhBR7AksOgULOJF3hiW5Wi4GCaXXGMrBa4ClW0YS3r0pPbXzm7vlMGvDF2pK/QnL862X8J36CnyaqaD6nWIH/YRzhNQrlOh8d705DRjKvAgFiFBDcyWHlCskCrX9doLwvj1t0h/gyTN1lODADE+JiCwv5ro3QqwkLwMlN9bVNgm9hCiC/2k3iHeMmCkYRKVH1x5nv3KiNW6OPOygT00mirS4GGge71iCmPeSe7BJ9NSp8XAGUtIOeNAPUkXrfdwkYsETgAZVDWF8o0hYLNkr7/ysRKvI5GmqjF/6XQa/nt1rf0kzeF37SNM7G30R6Y5mVOEqQapXm2M/icJbI08FfBUWb1RUvTXe39699DhjqWPxxZyeuL0uv+//ZhbRrlKNOia3eJuNRdAjSsgctRqO8BXC8UUk6RB0N5u3yrR7ep+Y8TEjR560Pa23ET2Oi0/jqkROZWgLrdelMvEjndOHO+WN137ZkjaVYACKsiaypUnZTmPOyLL+KltKqZFRHjUzYXvp+gyMlPAgluY7ZxK2IBVYvzz7n5dYIbRoQGBGtCIUWOxoDieUF9bbQ6gL/hE2VyYOuBsanUyeDQQcUskJxCFv4gvp2/OxJtSSQKVYVLfDlug4FMyWdmD9/mFe0yLl3MBmAwU2eWw2yXcgpy/vlgV+D0z7kYCOd9RSaAfDmMGOPZH5gJ9iIWWGH7/UTpi9KHwkgEpanoRDsR3AXYWUbaNlKzHDNxvXX8LrtCvbkFeBrehJ30L1RXaGdCpwiI92jeeDeCqmpcAevefqKGAQG3cTltvjVzUu3Z/wuVMobJMOIpaP2PRVopTvBkYCd3rxYUdrv+UfZJzTd1OhKfWYjW/E7BAw9N9/92qUirsf+jteaT9+EXL6QE+EL2AGTvf2EPfqJA/WY7zxYH6Hj+xF/LE4QtYTATeDXHT7iT4YEkhWTY4FRLlsyNOo5HuV1d5JCupacVIavDEX/moLsiz2V6gTiRvJd5NbXjHLmswjE96+sUkpdZ5A33EP3M5AujRHm6hZWT9UDsfIPeuvZ3gt1ZfWK5jQnAXWx0nCIMiCQi2pB81ryzkxM7JieyUQPL/XJDHYCY1OzNotyZsN8JNndchFxPz1FDnsEoRrr2uRTWUORCoOcRJad6KI5CCl3EovD8jpwW17VyNRIpIvZOVtaS+lstW/Qyf4A6CcXOzviin+sVm+eVl/+4V/9ddoMNS60Y0B/dyLZ7tEuWQmXJ0wBtn970f5w/GrXUpnW//Lr9yTRvobyy/AL31K8fv6rb3c3JadACmFvYxFSP9xf2OsqY0D1TFUfKfgR6T01ZbdnS9p4PAhLVYgMDjUMD7FU3SsBMFMmjAC/s1KznPlAk/M0JqfwLc1YQ50aSpTsVqx84othOiBKo62SS7cJyWrTE2G3gwc3YCP8P2pqmpSHxU7XDyLGj+giyRMVIkJfjZqDQ8ZskPeL1GdhuhwDRBT2FpIz0GRSot60/Av3vF9cEqQS/vBa53lA9uSvNXUiSo5zMkIgOXlX624NxyLqKFVyx5dWYVVaZ1s1uXuSpmodVuYIssfmkliyXzeP39Vh35Px08bh+zkpWiiUUkgCDBQK1l6d8CYBYWy+/z6PB+IQSJXIBk64ZNpKhU9LkkAM+VTMS8cjSmAqxE5/34FRcL+yWfJgkEyoXLZxeFqmZuso9OCEMbdFdsDOFw2aFqnos1nM7hc1yHhjDs0cfcN/TDBBhgRvO9aKqACf1xNfH8lv8gHJY6PZD05bDJ9RwWEleGVBB/cI+QmngaqH6EETXpRvl9MSpmADs7ALqfZuvkrbFhIbMz5CWSovgoUxvkS0QaR5vahe4YfUL36Brln+BqZTJpcsibI6LvzhnFtgJ9e8248JevsVMmVI2xfMu640eySteAvz1lJpViuGt4nPpfNSaDE8Q+SR48V8Z/cPKOHjauZBI3LKqgVmZVBvU/ZCdlP1EbYn+Q1bOV9R5P2wFjXf+1187K9CTIZtknXr3oZyDALFUGY/nQxlIQlEXgsyrRhGnxzgUGdOmndqUhK+TCo0b7Ty9iorXK6FjhVY8fhsYdXLOgFKCU6CV9RF5O8UpDssVNTx4/SWA5Z3+/yDcjIGgPrvo7oSrwWclarIbMGwaZBvaZ10lA2KhkZOH7uo07uRP2Pt2oAhS4Im1C8fJgoLEGdBptYxVCePGIwN7cuB4OHCJ1gS57dhRjbBEFYPzQiSN1QsXGvkh7+pKkwYdcrSfCT+0vibadkMgLVKgQHQDOH+I0T8tObEWp/TN1rcR0pxE0sOCrEjigQaEqGZwUya4nWDZHnJDhQR7gGKcwLYXrUhvjMVNHpkRivbIZF74ErOZInJjNEInXFCPDnLU9XFbJ8vh9sN2ubNKNqhed8YSQxkau7glRnDWBFwKPVJYqAer0zTpWr5Cn3gqX6xARFdnmlqriemEf2C7ya728j2sx2MNSN+6ZatW4Tye3hLlwPaOmHdivOzfcp3T0OINo0pm5zMcmFu3aak1/lHfg1mv0UD3pDjI5nmASP9mJbnV1yF4iynOOK0twsIETUIX3t2dzc8F/ySn6IyyhbN6DxQmiu3xUUwNPaKOQ8s3JHmIJcsefJTsrJi/5bWjli1nD4OZ5PggScfWPmNhWnKvxT/AVJ9qFIOmV2rajkqoLkXoRtCGXHcmiB43KSbwTpH4xA4ojxkG4jOteVfue30EVPtDBVr+VtJB+Cp/vf4fuJUmPFXdwJ9fOG98PYgHIyj6rMZ42vPre+r2yWRb0O/8VTZ2OwE1uRqx7PyxgVxjEubNo90bIpwnMp8K6yHRhBG7S0UJxCKO1EmK44FWbOXCJD927NYhnpgex7UkwOdVqZlrPTQ/mlht/cY59e2wdkblYJ06Jq/rA7W7zJdpZkpJjaset+WcSYI3vvoOL6VAChCzo7dG7upyh1RmJ7XEMVGSbIEw60vcUAG+3wAdG7TM9ns00FQiIck9mZvXqX9IsEUrrRMdHoZSiH0mhN5vrLrnFACU87AuNSs/9HBtuu1pDQuoQX8DYBe4lMapnd+z13+XdUBTf0BwwHuR/u5hkXndqjQXczY/fk0QMqh6mrsKJ+Cv6GQviFzKFqQ2RacIW8OPwaK3qJMPWEJlBhxGlUKX4g78gQln9n7EbP2BYIBGLDPJBdT4sIE8IbrsdGpovLlzddsZPsQCqkM+7XGe2tQaAhQoxkxPChHl0zfhGVo5/DW7bIRDAsa75pQkZOvHjIdczcPzxP0AMgEe+QdoJU74rQ63TD/s/qRTCySrLfzREBoijmN36HRWRnQ3UPQzPxodwuKqhHapCCI+Dl3hV0xaMt/unTW+B0iNt0GGzpKr4zCcGAVoS6M4/uyolojOnyfkswFDlV6s7mg8x/TWyegBRGFTdTnBmrOyTu2WPXKj/wG9Oda/Ga/+Mw2PhiiBJHZXV9CqmoHHCvI+ExAMaO9LvE9aQYvd1Jyp9qSKjohL6wtmZRzk4WjHDW3UrI4twl0bQECeYoKgfzHiumsnL0rBa66/Nh8EKM9ruVMuLN/FSjJot6E8FZEYFAYw6IA9h/Lfxs0NaWQESxFtrOE0gYcnGS3qRCsing/kSo1aspHcxLAfVjW6evlKH1Tw7nrCD4TXriiVU3cBAmE71V8/GMfXfpuYHKKyKsg+vrDj58PcGrnffM07hN5Se2ROHI9O1t6jXfcnK7XvAx3w1Ev+TqrL7WAV1oEhuhdzxm9ciiUfnmEYasw8AzV3WSVKTQI+8bkb1q+l2o3dSqbCp9myi6c9DJ+/oKUPJY9Kyav2bzT/LC5OA5QPsjQFj9qkO7iybx/TFmIzmLjME0wMTANBglghkgBZQMEAgEFAAQgbsNE0a8gW7Kcfwu6zLUBvEHAkY5jWJEUCrxJi/Q2VTwEFKCgTvndD+jEGxsPZnlV6qYmbQx8AgInEA==
---
# Source: cloud2edge/charts/hono/templates/hono-adapter-mqtt/hono-adapter-mqtt-vertx-secret.yaml
#
# Copyright (c) 2019, 2022 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
#
apiVersion: v1
kind: Secret
metadata:
  name: c2e-adapter-mqtt-vertx-conf
  namespace: cloud2edge
  labels:
    app.kubernetes.io/name: hono
    helm.sh/chart: hono-1.12.8
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: c2e
    app.kubernetes.io/version: 1.12.2
    app.kubernetes.io/component: adapter-mqtt-vertx
type: Opaque
stringData:
  logging-quarkus-prod.yml: |
    quarkus:
      log:
        category:
          "org.apache.kafka":
            level: ERROR
          "org.eclipse.hono":
            level: INFO
          "org.eclipse.hono.client.impl.HonoConnectionImpl":
            level: ERROR
    
  logging-quarkus-dev.yml: |
    quarkus:
      log:
        category:
          "io.netty.handler.logging.LoggingHandler":
            level: DEBUG
          "org.apache.kafka":
            level: INFO
          "org.eclipse.hono":
            level: DEBUG
          "org.infinispan":
            level: DEBUG
    
  logging-quarkus-trace.yml: |
    quarkus:
      log:
        category:
          "io.netty.handler.logging.LoggingHandler":
            level: DEBUG
          "org.apache.kafka":
            level: INFO
          "org.eclipse.hono":
            level: TRACE
          "org.infinispan":
            level: DEBUG
    
  application.yml: |
    hono:
      app:
        maxInstances: 1
      mqtt:
        bindAddress: 0.0.0.0
        insecurePortBindAddress: 0.0.0.0
        insecurePortEnabled: true
        keyPath: /etc/hono/key.pem
        certPath: /etc/hono/cert.pem
        tenantIdleTimeout: "1h"
      healthCheck:
        insecurePort: 8088
        insecurePortBindAddress: "0.0.0.0"
      messaging:
        name: Hono adapter-mqtt-vertx
        amqpHostname: hono-internal
        host: c2e-dispatch-router
        port: 5673
        keyPath: /etc/hono/key.pem
        certPath: /etc/hono/cert.pem
        trustStorePath: /etc/hono/trusted-certs.pem
        hostnameVerificationRequired: false
      command:
        name: Hono adapter-mqtt-vertx
        amqpHostname: hono-internal
        host: c2e-dispatch-router
        port: 5673
        keyPath: /etc/hono/key.pem
        certPath: /etc/hono/cert.pem
        trustStorePath: /etc/hono/trusted-certs.pem
        hostnameVerificationRequired: false
      tenant:
        name: Hono adapter-mqtt-vertx
        host: c2e-service-device-registry
        port: 5671
        credentialsPath: /etc/hono/adapter.credentials
        trustStorePath: "/etc/hono/trusted-certs.pem"
        hostnameVerificationRequired: false
      registration:
        name: Hono adapter-mqtt-vertx
        host: c2e-service-device-registry
        port: 5671
        credentialsPath: /etc/hono/adapter.credentials
        trustStorePath: "/etc/hono/trusted-certs.pem"
        hostnameVerificationRequired: false
      credentials:
        name: Hono adapter-mqtt-vertx
        host: c2e-service-device-registry
        port: 5671
        credentialsPath: /etc/hono/adapter.credentials
        trustStorePath: "/etc/hono/trusted-certs.pem"
        hostnameVerificationRequired: false
      commandRouter:
        name: Hono adapter-mqtt-vertx
        host: c2e-service-command-router
        port: 5671
        credentialsPath: /etc/hono/adapter.credentials
        trustStorePath: "/etc/hono/trusted-certs.pem"
        hostnameVerificationRequired: false    
    quarkus:
      jaeger:
        service-name: "c2e-adapter-mqtt-vertx"
      log:
        console:
          color: true
        min-level: TRACE
        level: INFO
        category:
          "io.quarkus.jaeger":
            level: DEBUG
          "io.quarkus.vertx.core.runtime":
            level: DEBUG
      vertx:
        prefer-native-transport: true
        resolver:
          cache-max-time-to-live: 0
data:
  key.pem: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JR0hBZ0VBTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEJHMHdhd0lCQVFRZ3pLS1d2UzluNmttNkd5MVkKbDdoc2x0cWJjMWxkbU1VakkwOVErMS9ZQUlTaFJBTkNBQVNTNFVaOHExVWF4MTJmTHRKWDdRZCtmWFBsNjF2YgpSOWtQaDMzMkZHb0FRTFJSU2gzMlRkZk5IK1ZrZjRWanVtamNndFFmckJZNE1PM042MXpveUd4dQotLS0tLUVORCBQUklWQVRFIEtFWS0tLS0tCg==
  cert.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNSekNDQWU2Z0F3SUJBZ0lVQjJ2eFdJOXdqMzJPSExhQUJWVitpdVZrZFNNd0NnWUlLb1pJemowRUF3SXcKVURFTE1Ba0dBMVVFQmhNQ1EwRXhEekFOQmdOVkJBY01CazkwZEdGM1lURVVNQklHQTFVRUNnd0xSV05zYVhCegpaU0JKYjFReERUQUxCZ05WQkFzTUJFaHZibTh4Q3pBSkJnTlZCQU1NQW1OaE1CNFhEVEl5TURFeU5qQTRNRFl4Ck1Gb1hEVEl6TURFeU5qQTRNRFl4TUZvd1dqRUxNQWtHQTFVRUJoTUNRMEV4RHpBTkJnTlZCQWNNQms5MGRHRjMKWVRFVU1CSUdBMVVFQ2d3TFJXTnNhWEJ6WlNCSmIxUXhEVEFMQmdOVkJBc01CRWh2Ym04eEZUQVRCZ05WQkFNTQpERzF4ZEhRdFlXUmhjSFJsY2pCWk1CTUdCeXFHU000OUFnRUdDQ3FHU000OUF3RUhBMElBQkpMaFJueXJWUnJIClhaOHUwbGZ0QjM1OWMrWHJXOXRIMlErSGZmWVVhZ0JBdEZGS0hmWk4xODBmNVdSL2hXTzZhTnlDMUIrc0ZqZ3cKN2MzclhPakliRzZqZ1pzd2daZ3dIUVlEVlIwT0JCWUVGQ281WWFKZVZvaXRCWFVCeHErNVNhMDdhU0JKTUFzRwpBMVVkRHdRRUF3SURxREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd1N3WURWUjBSCkJFUXdRb0lYYUc5dWJ5MWhaR0Z3ZEdWeUxXMXhkSFF0ZG1WeWRIaUNIR2h2Ym04dFlXUmhjSFJsY2kxdGNYUjAKTFhabGNuUjRMbWh2Ym0rQ0NXeHZZMkZzYUc5emREQUtCZ2dxaGtqT1BRUURBZ05IQURCRUFpQVZGeldqS3d2QgpSM2pUcHZNUFB1TVZPQUNFbmNaVXFZRjd3YzEvMExQT3dBSWdBc3IyeDRVQ0JmOXZQalpSQnJaSFViTzMzRHRCCmNaV00rZ1hRTFYwdHAwND0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJQjR6Q0NBWW1nQXdJQkFnSVVEdmZzZXZIcEY3T2JSZUFBbUdYWEhIc0FYRHd3Q2dZSUtvWkl6ajBFQXdJdwpVakVMTUFrR0ExVUVCaE1DUTBFeER6QU5CZ05WQkFjTUJrOTBkR0YzWVRFVU1CSUdBMVVFQ2d3TFJXTnNhWEJ6ClpTQkpiMVF4RFRBTEJnTlZCQXNNQkVodmJtOHhEVEFMQmdOVkJBTU1CSEp2YjNRd0hoY05Nakl3TVRJMk1EZ3cKTmpBM1doY05Nak13TVRJMk1EZ3dOakEzV2pCUU1Rc3dDUVlEVlFRR0V3SkRRVEVQTUEwR0ExVUVCd3dHVDNSMApZWGRoTVJRd0VnWURWUVFLREF0RlkyeHBjSE5sSUVsdlZERU5NQXNHQTFVRUN3d0VTRzl1YnpFTE1Ba0dBMVVFCkF3d0NZMkV3V1RBVEJnY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkNBQVJRQXJORk5GNnZZTkpTeWloTWtqWUIKM1BYZ0Z1RS95dmJDVWd1T216a3dyMDFySWxYK3IvRVJ4Nnc0aHc5UXF3ZnFQcloyejJSdjA2dGN5ckxSblMxZwpvejh3UFRBZEJnTlZIUTRFRmdRVWVUQ20wMHRNajkrZC9QZEUyVFM1MEdIcUs4MHdEd1lEVlIwVEFRSC9CQVV3CkF3RUIvekFMQmdOVkhROEVCQU1DQVFZd0NnWUlLb1pJemowRUF3SURTQUF3UlFJaEFKWVU2YXI0QkFCeFNpRzcKbEplMGdibW1BQW5LU2RFL2lUYnNLTWJsUjE5UkFpQTZoYU8rbHI4WUZNOWpoYXRDWjJqdk1NWHA4UFFUWWcrdgo5OTJ4a29rbWFRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  trusted-certs.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUI0ekNDQVltZ0F3SUJBZ0lVRHZmc2V2SHBGN09iUmVBQW1HWFhISHNBWER3d0NnWUlLb1pJemowRUF3SXcKVWpFTE1Ba0dBMVVFQmhNQ1EwRXhEekFOQmdOVkJBY01CazkwZEdGM1lURVVNQklHQTFVRUNnd0xSV05zYVhCegpaU0JKYjFReERUQUxCZ05WQkFzTUJFaHZibTh4RFRBTEJnTlZCQU1NQkhKdmIzUXdIaGNOTWpJd01USTJNRGd3Ck5qQTNXaGNOTWpNd01USTJNRGd3TmpBM1dqQlFNUXN3Q1FZRFZRUUdFd0pEUVRFUE1BMEdBMVVFQnd3R1QzUjAKWVhkaE1SUXdFZ1lEVlFRS0RBdEZZMnhwY0hObElFbHZWREVOTUFzR0ExVUVDd3dFU0c5dWJ6RUxNQWtHQTFVRQpBd3dDWTJFd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFSUUFyTkZORjZ2WU5KU3lpaE1rallCCjNQWGdGdUUveXZiQ1VndU9temt3cjAxcklsWCtyL0VSeDZ3NGh3OVFxd2ZxUHJaMnoyUnYwNnRjeXJMUm5TMWcKb3o4d1BUQWRCZ05WSFE0RUZnUVVlVENtMDB0TWo5K2QvUGRFMlRTNTBHSHFLODB3RHdZRFZSMFRBUUgvQkFVdwpBd0VCL3pBTEJnTlZIUThFQkFNQ0FRWXdDZ1lJS29aSXpqMEVBd0lEU0FBd1JRSWhBSllVNmFyNEJBQnhTaUc3CmxKZTBnYm1tQUFuS1NkRS9pVGJzS01ibFIxOVJBaUE2aGFPK2xyOFlGTTlqaGF0Q1oyanZNTVhwOFBRVFlnK3YKOTkyeGtva21hUT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNlRENDQWgrZ0F3SUJBZ0lVYmM4RmY0SDZJWTd1MzE5czlZM3BhdlFHN28wd0NnWUlLb1pJemowRUF3SXcKVWpFTE1Ba0dBMVVFQmhNQ1EwRXhEekFOQmdOVkJBY01CazkwZEdGM1lURVVNQklHQTFVRUNnd0xSV05zYVhCegpaU0JKYjFReERUQUxCZ05WQkFzTUJFaHZibTh4RFRBTEJnTlZCQU1NQkhKdmIzUXdIaGNOTWpJd01USTJNRGd3Ck5qQTNXaGNOTWpNd01USTJNRGd3TmpBM1dqQlNNUXN3Q1FZRFZRUUdFd0pEUVRFUE1BMEdBMVVFQnd3R1QzUjAKWVhkaE1SUXdFZ1lEVlFRS0RBdEZZMnhwY0hObElFbHZWREVOTUFzR0ExVUVDd3dFU0c5dWJ6RU5NQXNHQTFVRQpBd3dFY205dmREQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJDbWV3ZGlyMFMvSDE1eVpDTHV5Cnk4dk1MQU53QWJYVFVBcFk5d1N4ZnE5M25XTzFEdm9VWFJqOCtaS2hNVTFXc2wzQVFhZWxVNXBUMmswWXJhMEYKV0dtamdkSXdnYzh3SFFZRFZSME9CQllFRkhnZ2R4OXFYMnZ1OXVGaUF2WER2WHhHMnZ2Sk1JR1BCZ05WSFNNRQpnWWN3Z1lTQUZIZ2dkeDlxWDJ2dTl1RmlBdlhEdlh4RzJ2dkpvVmFrVkRCU01Rc3dDUVlEVlFRR0V3SkRRVEVQCk1BMEdBMVVFQnd3R1QzUjBZWGRoTVJRd0VnWURWUVFLREF0RlkyeHBjSE5sSUVsdlZERU5NQXNHQTFVRUN3d0UKU0c5dWJ6RU5NQXNHQTFVRUF3d0VjbTl2ZElJVWJjOEZmNEg2SVk3dTMxOXM5WTNwYXZRRzdvMHdEd1lEVlIwVApBUUgvQkFVd0F3RUIvekFMQmdOVkhROEVCQU1DQVFZd0NnWUlLb1pJemowRUF3SURSd0F3UkFJZ0s4V29HSVlyCmJEZmRsMU5yUnpxUVpvbE5JRnQ0Tm45cWZWUU1WUHFuck1nQ0lHaFJjM1MxTFpSbHk2MU9JN2RzZHhqRVZaUkgKTkpBTUlqemNaSVRJdkNIMgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlGRmpDQ0F2NmdBd0lCQWdJUkFKRXJDRXJQREJpblUvYldMaVduWDFvd0RRWUpLb1pJaHZjTkFRRUxCUUF3ClR6RUxNQWtHQTFVRUJoTUNWVk14S1RBbkJnTlZCQW9USUVsdWRHVnlibVYwSUZObFkzVnlhWFI1SUZKbGMyVmgKY21Ob0lFZHliM1Z3TVJVd0V3WURWUVFERXd4SlUxSkhJRkp2YjNRZ1dERXdIaGNOTWpBd09UQTBNREF3TURBdwpXaGNOTWpVd09URTFNVFl3TURBd1dqQXlNUXN3Q1FZRFZRUUdFd0pWVXpFV01CUUdBMVVFQ2hNTlRHVjBKM01nClJXNWpjbmx3ZERFTE1Ba0dBMVVFQXhNQ1VqTXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUsKQW9JQkFRQzdBaFVvelBhZ2xOTVBFdXlOVlpMRCtJTHhtYVo2UW9pblhTYXF0U3U1eFV5eHI0NXIrWFhJbzljUApSNVFVVlRWWGpKNm9vamtaOVlJOFFxbE9idlU3d3k3YmpjQ3dYUE5aT09mdHoybndXZ3NidnNDVUpDV0gramR4CnN4UG5IS3pobSsvYjVEdEZVa1dXcWNGVHpqVElVdTYxcnUyUDNtQnc0cVZVcTdadERwZWxRRFJySzlPOFp1dG0KTkh6NmE0dVBWeW1aK0RBWFhicHliL3VCeGEzU2hsZzlGOGZuQ2J2eEsvZUczTUhhY1YzVVJ1UE1yU1hCaUx4ZwpaM1Ztcy9FWTk2SmM1bFAvT29pMlI2WC9FeGpxbUFsM1A1MVQrYzhCNWZXbWNCY1VyMk9rLzVtems1M2NVNmNHCi9raUZIYUZwcmlWMXV4UE1VZ1AxN1ZHaGk5c1ZBZ01CQUFHamdnRUlNSUlCQkRBT0JnTlZIUThCQWY4RUJBTUMKQVlZd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3SUdDQ3NHQVFVRkJ3TUJNQklHQTFVZEV3RUIvd1FJTUFZQgpBZjhDQVFBd0hRWURWUjBPQkJZRUZCUXVzeGUzV0ZiTHJsQUpRT1lmcjUyTEZNTEdNQjhHQTFVZEl3UVlNQmFBCkZIbTBXZVo3dHVYa0FYT0FDSWpJR2xqMjZadHVNRElHQ0NzR0FRVUZCd0VCQkNZd0pEQWlCZ2dyQmdFRkJRY3cKQW9ZV2FIUjBjRG92TDNneExta3ViR1Z1WTNJdWIzSm5MekFuQmdOVkhSOEVJREFlTUJ5Z0dxQVloaFpvZEhSdwpPaTh2ZURFdVl5NXNaVzVqY2k1dmNtY3ZNQ0lHQTFVZElBUWJNQmt3Q0FZR1o0RU1BUUlCTUEwR0N5c0dBUVFCCmd0OFRBUUVCTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElDQVFDRnlrNUhQcVAzaFVTRnZOVm5lTEtZWTYxMVRSNlcKUFRObGNsUXRnYURxdyszNElMOWZ6TGR3QUxkdU8vWmVsTjdrSUorbTc0dXlBK2VpdFJZOGtjNjA3VGtDNTN3bAppa2ZtWlc0L1J2VFo4TTZVSys1VXpoSzhqQ2RMdU1HWUw2S3Z6WEdSU2dpM3lMZ2pld1F0Q1BrSVZ6NkQyUVF6CkNrY2hlQW1DSjhNcXlKdTV6bHp5Wk1qQXZubkFUNDV0UkF4ZWtyc3U5NHNRNGVnZFJDbmJXU0R0WTdraCtCSW0KbEpOWG9CMWxCTUVLSXE0UURVT1hvUmdmZnVEZ2hqZTFXckc5TUwrSGJpc3EveUZPR3dYRDlSaVg4RjZzdzZXNAphdkF1dkRzenVlNUwzc3o4NUsrRUM0WS93RlZETnZabzRUWVhhbzZaMGYrbFFLYzB0OERRWXprMU9YVnU4cnAyCnlKTUM2YWxMYkJmT0RBTFp2WUg3bjdkbzFBWmxzNEk5ZDFQNGpua0RyUW94QjNVcVE5aFZsM0xFS1E3M3hGMU8KeUs1R2hERFg4b1ZmR0tGNXUrZGVjSXNINFlhVHc3bVAzR0Z4SlNxdjMrMGxVRkpvaTVMYzVkYTE0OXA5MElkcwpoQ0V4cm9MMSs3bXJ5SWtYUGVGTTVUZ085cjBydlphQkZPdlYyejBncDM1WjArTDRXUGxidUVqTi9seFBGaW4rCkhsVWpyOGdSc0kzcWZKT1FGeS85cktJSlIwWS84T213dC84b1RXZ3kxbWRlSG1tams3ajFuWXN2QzlKU1E2WnYKTWxkbFRUS0IzemhUaFYxK1hXWXA2cmpkNUpXMXpiVldFa0xOeEU3R0pUaEVVRzNzemdCVkdQN3BTV1RVVHNxWApuTFJid0hPb3E3aEh3Zz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZhekNDQTFPZ0F3SUJBZ0lSQUlJUXo3RFNRT05aUkdQZ3UyT0Npd0F3RFFZSktvWklodmNOQVFFTEJRQXcKVHpFTE1Ba0dBMVVFQmhNQ1ZWTXhLVEFuQmdOVkJBb1RJRWx1ZEdWeWJtVjBJRk5sWTNWeWFYUjVJRkpsYzJWaApjbU5vSUVkeWIzVndNUlV3RXdZRFZRUURFd3hKVTFKSElGSnZiM1FnV0RFd0hoY05NVFV3TmpBME1URXdORE00CldoY05NelV3TmpBME1URXdORE00V2pCUE1Rc3dDUVlEVlFRR0V3SlZVekVwTUNjR0ExVUVDaE1nU1c1MFpYSnUKWlhRZ1UyVmpkWEpwZEhrZ1VtVnpaV0Z5WTJnZ1IzSnZkWEF4RlRBVEJnTlZCQU1UREVsVFVrY2dVbTl2ZENCWQpNVENDQWlJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dJUEFEQ0NBZ29DZ2dJQkFLM29KSFAwRkRmem01NHJWeWdjCmg3N2N0OTg0a0l4dVBPWlhvSGozZGNLaS92VnFidllBVHlqYjNtaUdiRVNUdHJGai9SUVNhNzhmMHVveG15RisKMFRNOHVrajEzWG5mczdqL0V2RWhta3ZCaW9aeGFVcG1abXlQZmp4d3Y2MHBJZ2J6NU1EbWdLN2lTNCszbVg2VQpBNS9UUjVkOG1VZ2pVK2c0cms4S2I0TXUwVWxYaklCMHR0b3YwRGlOZXdOd0lSdDE4akE4K28rdTNkcGpxK3NXClQ4S09FVXQrend2by83VjNMdlN5ZTByZ1RCSWxESENOQXltZzRWTWs3QlBaN2htL0VMTktqRCtKbzJGUjNxeUgKQjVUMFkzSHNMdUp2VzVpQjRZbGNOSGxzZHU4N2tHSjU1dHVrbWk4bXhkQVE0UTdlMlJDT0Z2dTM5NmozeCtVQwpCNWlQTmdpVjUrSTNsZzAyZFo3N0RuS3hIWnU4QS9sSkJkaUIzUVcwS3RaQjZhd0JkcFVLRDlqZjFiMFNIelV2CktCZHMwcGpCcUFsa2QyNUhON3JPckZsZWFKMS9jdGFKeFFaQktUNVpQdDBtOVNUSkVhZGFvMHhBSDBhaG1iV24KT2xGdWhqdWVmWEtuRWdWNFdlMCtVWGdWQ3dPUGpkQXZCYkkrZTBvY1MzTUZFdnpHNnVCUUUzeERrM1N6eW5UbgpqaDhCQ05BdzFGdHhOclFIdXNFd01GeEl0NEk3bUtaOVlJcWlveW1DekxxOWd3UWJvb01EUWFIV0JmRWJ3cmJ3CnFIeUdPMGFvU0NxSTNIYWFkcjhmYXFVOUdZL3JPUE5rM3NnckRRb28vL2ZiNGhWQzFDTFFKMTNoZWY0WTUzQ0kKclU3bTJZczZ4dDBuVVc3L3ZHVDFNME5QQWdNQkFBR2pRakJBTUE0R0ExVWREd0VCL3dRRUF3SUJCakFQQmdOVgpIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJSNXRGbm1lN2JsNUFGemdBaUl5QnBZOXVtYmJqQU5CZ2txCmhraUc5dzBCQVFzRkFBT0NBZ0VBVlI5WXFieXlxRkRRRExIWUdta2dKeWtJckdGMVhJcHUrSUxsYVMvVjlsWkwKdWJoekVGblRJWmQrNTB4eCs3TFNZSzA1cUF2cUZ5RldoZkZRRGxucnp1Qlo2YnJKRmUrR25ZK0VnUGJrNlpHUQozQmViWWh0RjhHYVYwbnh2d3VvNzd4L1B5OWF1Si9HcHNNaXUvWDErbXZvaUJPdi8yWC9xa1NzaXNSY09qL0tLCk5GdFkyUHdCeVZTNXVDYk1pb2d6aVV3dGhEeUMzKzZXVndXNkxMdjN4TGZIVGp1Q3ZqSElJbk56a3RIQ2dLUTUKT1JBekk0Sk1QSitHc2xXWUhiNHBob3dpbTU3aWF6dFhPb0p3VGR3Sng0bkxDZ2ROYk9oZGpzbnZ6cXZIdTdVcgpUa1hXU3RBbXpPVnl5Z2hxcFpYakZhSDNwTzNKTEYrbCsvK3NLQUl1dnRkN3UrTnhlNUFXMHdkZVJsTjhOd2RDCmpOUEVscHpWbWJVcTRKVWFnRWl1VERrSHpzeEhwRktWSzdxNCs2M1NNMU45NVIxTmJkV2hzY2RDYitaQUp6VmMKb3lpM0I0M25qVE9RNXlPZisxQ2NlV3hHMWJRVnM1WnVmcHNNbGpxNFVpMC8xbHZoK3dqQ2hQNGtxS09KMnF4cQo0Umdxc2FoRFlWdlRIOXc3alhieUxlaU5kZDhYTTJ3OVUvdDd5MEZmLzl5aTBHRTQ0WmE0ckYyTE45ZDExVFBBCm1SR3VuVUhCY25XRXZnSkJRbDluSkVpVTBac252Z2MvdWJoUGdYUlI0WHEzN1owajRyN2cxU2dFRXp3eEE1N2QKZW15UHhnY1l4bi9lUjQ0L0tKNEVCcytsVkRSM3ZleUptK2tYUTk5YjIxLytqaDVYb3MxQW5YNWlJdHJlR0NjPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  adapter.credentials: dXNlcm5hbWU9bXF0dC1hZGFwdGVyQEhPTk8KcGFzc3dvcmQ9bXF0dC1zZWNyZXQK
  truststore.jks: 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
---
# Source: cloud2edge/charts/hono/templates/hono-service-auth/hono-service-auth-secret.yaml
#
# Copyright (c) 2019, 2022 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
#
apiVersion: v1
kind: Secret
metadata:
  name: c2e-service-auth-conf
  namespace: cloud2edge
  labels:
    app.kubernetes.io/name: hono
    helm.sh/chart: hono-1.12.8
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: c2e
    app.kubernetes.io/version: 1.12.2
    app.kubernetes.io/component: service-auth
type: Opaque
stringData:
  logging-quarkus-prod.yml: |
    quarkus:
      log:
        category:
          "org.apache.kafka":
            level: ERROR
          "org.eclipse.hono":
            level: INFO
          "org.eclipse.hono.client.impl.HonoConnectionImpl":
            level: ERROR
    
  logging-quarkus-dev.yml: |
    quarkus:
      log:
        category:
          "io.netty.handler.logging.LoggingHandler":
            level: DEBUG
          "org.apache.kafka":
            level: INFO
          "org.eclipse.hono":
            level: DEBUG
          "org.infinispan":
            level: DEBUG
    
  logging-quarkus-trace.yml: |
    quarkus:
      log:
        category:
          "io.netty.handler.logging.LoggingHandler":
            level: DEBUG
          "org.apache.kafka":
            level: INFO
          "org.eclipse.hono":
            level: TRACE
          "org.infinispan":
            level: DEBUG
    
  application.yml: |
    hono:
      app:
        maxInstances: 1
      auth:
        amqp:
          bindAddress: "0.0.0.0"
          keyPath: "/etc/hono/key.pem"
          certPath: "/etc/hono/cert.pem"
          trustStorePath: "/etc/hono/trusted-certs.pem"
          insecurePortBindAddress: "0.0.0.0"
          insecurePortEnabled: true
        svc:
          permissionsPath: /var/run/hono/auth/permissions.json
          signing:
            tokenExpiration: 3600
          supportedSaslMechanisms: PLAIN
      healthCheck:
        insecurePort: 8088
        insecurePortBindAddress: "0.0.0.0"    
    quarkus:
      jaeger:
        service-name: "c2e-service-auth"
      log:
        console:
          color: true
        min-level: TRACE
        level: INFO
        category:
          "io.quarkus.jaeger":
            level: DEBUG
          "io.quarkus.vertx.core.runtime":
            level: DEBUG
      vertx:
        prefer-native-transport: true
        resolver:
          cache-max-time-to-live: 0
data:
  key.pem: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JR0hBZ0VBTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEJHMHdhd0lCQVFRZ3FCV280eDlLUzBvU1hwazEKQ2pGUFF1UkQ3SFpkUFVaQTFMUW1yTSt0T1RDaFJBTkNBQVNNdE5hZE9tSEFKYlN6UmZQQk9OSGttT2NQVU9tRgpSWkhhNkdzWjJTazlNK1BCT1QvaVdydDBjR05NN25lVStNUFBnSjhQMWcybVlZc0Z6TUJuanZ2YgotLS0tLUVORCBQUklWQVRFIEtFWS0tLS0tCg==
  cert.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNPekNDQWVHZ0F3SUJBZ0lVQjJ2eFdJOXdqMzJPSExhQUJWVitpdVZrZFIwd0NnWUlLb1pJemowRUF3SXcKVURFTE1Ba0dBMVVFQmhNQ1EwRXhEekFOQmdOVkJBY01CazkwZEdGM1lURVVNQklHQTFVRUNnd0xSV05zYVhCegpaU0JKYjFReERUQUxCZ05WQkFzTUJFaHZibTh4Q3pBSkJnTlZCQU1NQW1OaE1CNFhEVEl5TURFeU5qQTRNRFl3Ck9Wb1hEVEl6TURFeU5qQTRNRFl3T1Zvd1dURUxNQWtHQTFVRUJoTUNRMEV4RHpBTkJnTlZCQWNNQms5MGRHRjMKWVRFVU1CSUdBMVVFQ2d3TFJXTnNhWEJ6WlNCSmIxUXhEVEFMQmdOVkJBc01CRWh2Ym04eEZEQVNCZ05WQkFNTQpDMkYxZEdndGMyVnlkbVZ5TUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0RRZ0FFakxUV25UcGh3Q1cwCnMwWHp3VGpSNUpqbkQxRHBoVVdSMnVockdka3BQVFBqd1RrLzRscTdkSEJqVE81M2xQakR6NENmRDlZTnBtR0wKQmN6QVo0NzcyNk9CanpDQmpEQWRCZ05WSFE0RUZnUVVoR0FiZTlzRS9KY3VKanB4b1J5L2prQ0RDVWt3Q3dZRApWUjBQQkFRREFnT29NQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBL0JnTlZIUkVFCk9EQTJnaEZvYjI1dkxYTmxjblpwWTJVdFlYVjBhSUlXYUc5dWJ5MXpaWEoyYVdObExXRjFkR2d1YUc5dWI0SUoKYkc5allXeG9iM04wTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDSUVCaGVWaXN1Ky9pSlI2NUlDSlpZTUhUTEQ3RwptTDJIeHBsWmRHdFphaXgzQWlFQTJyR1QwQUZPN0ZOK2xtczc3OGR4MGdTNHM4YUlybG1aZmdrcmZXZ2xpRkk9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUI0ekNDQVltZ0F3SUJBZ0lVRHZmc2V2SHBGN09iUmVBQW1HWFhISHNBWER3d0NnWUlLb1pJemowRUF3SXcKVWpFTE1Ba0dBMVVFQmhNQ1EwRXhEekFOQmdOVkJBY01CazkwZEdGM1lURVVNQklHQTFVRUNnd0xSV05zYVhCegpaU0JKYjFReERUQUxCZ05WQkFzTUJFaHZibTh4RFRBTEJnTlZCQU1NQkhKdmIzUXdIaGNOTWpJd01USTJNRGd3Ck5qQTNXaGNOTWpNd01USTJNRGd3TmpBM1dqQlFNUXN3Q1FZRFZRUUdFd0pEUVRFUE1BMEdBMVVFQnd3R1QzUjAKWVhkaE1SUXdFZ1lEVlFRS0RBdEZZMnhwY0hObElFbHZWREVOTUFzR0ExVUVDd3dFU0c5dWJ6RUxNQWtHQTFVRQpBd3dDWTJFd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFSUUFyTkZORjZ2WU5KU3lpaE1rallCCjNQWGdGdUUveXZiQ1VndU9temt3cjAxcklsWCtyL0VSeDZ3NGh3OVFxd2ZxUHJaMnoyUnYwNnRjeXJMUm5TMWcKb3o4d1BUQWRCZ05WSFE0RUZnUVVlVENtMDB0TWo5K2QvUGRFMlRTNTBHSHFLODB3RHdZRFZSMFRBUUgvQkFVdwpBd0VCL3pBTEJnTlZIUThFQkFNQ0FRWXdDZ1lJS29aSXpqMEVBd0lEU0FBd1JRSWhBSllVNmFyNEJBQnhTaUc3CmxKZTBnYm1tQUFuS1NkRS9pVGJzS01ibFIxOVJBaUE2aGFPK2xyOFlGTTlqaGF0Q1oyanZNTVhwOFBRVFlnK3YKOTkyeGtva21hUT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  trusted-certs.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUI0ekNDQVltZ0F3SUJBZ0lVRHZmc2V2SHBGN09iUmVBQW1HWFhISHNBWER3d0NnWUlLb1pJemowRUF3SXcKVWpFTE1Ba0dBMVVFQmhNQ1EwRXhEekFOQmdOVkJBY01CazkwZEdGM1lURVVNQklHQTFVRUNnd0xSV05zYVhCegpaU0JKYjFReERUQUxCZ05WQkFzTUJFaHZibTh4RFRBTEJnTlZCQU1NQkhKdmIzUXdIaGNOTWpJd01USTJNRGd3Ck5qQTNXaGNOTWpNd01USTJNRGd3TmpBM1dqQlFNUXN3Q1FZRFZRUUdFd0pEUVRFUE1BMEdBMVVFQnd3R1QzUjAKWVhkaE1SUXdFZ1lEVlFRS0RBdEZZMnhwY0hObElFbHZWREVOTUFzR0ExVUVDd3dFU0c5dWJ6RUxNQWtHQTFVRQpBd3dDWTJFd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFSUUFyTkZORjZ2WU5KU3lpaE1rallCCjNQWGdGdUUveXZiQ1VndU9temt3cjAxcklsWCtyL0VSeDZ3NGh3OVFxd2ZxUHJaMnoyUnYwNnRjeXJMUm5TMWcKb3o4d1BUQWRCZ05WSFE0RUZnUVVlVENtMDB0TWo5K2QvUGRFMlRTNTBHSHFLODB3RHdZRFZSMFRBUUgvQkFVdwpBd0VCL3pBTEJnTlZIUThFQkFNQ0FRWXdDZ1lJS29aSXpqMEVBd0lEU0FBd1JRSWhBSllVNmFyNEJBQnhTaUc3CmxKZTBnYm1tQUFuS1NkRS9pVGJzS01ibFIxOVJBaUE2aGFPK2xyOFlGTTlqaGF0Q1oyanZNTVhwOFBRVFlnK3YKOTkyeGtva21hUT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNlRENDQWgrZ0F3SUJBZ0lVYmM4RmY0SDZJWTd1MzE5czlZM3BhdlFHN28wd0NnWUlLb1pJemowRUF3SXcKVWpFTE1Ba0dBMVVFQmhNQ1EwRXhEekFOQmdOVkJBY01CazkwZEdGM1lURVVNQklHQTFVRUNnd0xSV05zYVhCegpaU0JKYjFReERUQUxCZ05WQkFzTUJFaHZibTh4RFRBTEJnTlZCQU1NQkhKdmIzUXdIaGNOTWpJd01USTJNRGd3Ck5qQTNXaGNOTWpNd01USTJNRGd3TmpBM1dqQlNNUXN3Q1FZRFZRUUdFd0pEUVRFUE1BMEdBMVVFQnd3R1QzUjAKWVhkaE1SUXdFZ1lEVlFRS0RBdEZZMnhwY0hObElFbHZWREVOTUFzR0ExVUVDd3dFU0c5dWJ6RU5NQXNHQTFVRQpBd3dFY205dmREQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJDbWV3ZGlyMFMvSDE1eVpDTHV5Cnk4dk1MQU53QWJYVFVBcFk5d1N4ZnE5M25XTzFEdm9VWFJqOCtaS2hNVTFXc2wzQVFhZWxVNXBUMmswWXJhMEYKV0dtamdkSXdnYzh3SFFZRFZSME9CQllFRkhnZ2R4OXFYMnZ1OXVGaUF2WER2WHhHMnZ2Sk1JR1BCZ05WSFNNRQpnWWN3Z1lTQUZIZ2dkeDlxWDJ2dTl1RmlBdlhEdlh4RzJ2dkpvVmFrVkRCU01Rc3dDUVlEVlFRR0V3SkRRVEVQCk1BMEdBMVVFQnd3R1QzUjBZWGRoTVJRd0VnWURWUVFLREF0RlkyeHBjSE5sSUVsdlZERU5NQXNHQTFVRUN3d0UKU0c5dWJ6RU5NQXNHQTFVRUF3d0VjbTl2ZElJVWJjOEZmNEg2SVk3dTMxOXM5WTNwYXZRRzdvMHdEd1lEVlIwVApBUUgvQkFVd0F3RUIvekFMQmdOVkhROEVCQU1DQVFZd0NnWUlLb1pJemowRUF3SURSd0F3UkFJZ0s4V29HSVlyCmJEZmRsMU5yUnpxUVpvbE5JRnQ0Tm45cWZWUU1WUHFuck1nQ0lHaFJjM1MxTFpSbHk2MU9JN2RzZHhqRVZaUkgKTkpBTUlqemNaSVRJdkNIMgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlGRmpDQ0F2NmdBd0lCQWdJUkFKRXJDRXJQREJpblUvYldMaVduWDFvd0RRWUpLb1pJaHZjTkFRRUxCUUF3ClR6RUxNQWtHQTFVRUJoTUNWVk14S1RBbkJnTlZCQW9USUVsdWRHVnlibVYwSUZObFkzVnlhWFI1SUZKbGMyVmgKY21Ob0lFZHliM1Z3TVJVd0V3WURWUVFERXd4SlUxSkhJRkp2YjNRZ1dERXdIaGNOTWpBd09UQTBNREF3TURBdwpXaGNOTWpVd09URTFNVFl3TURBd1dqQXlNUXN3Q1FZRFZRUUdFd0pWVXpFV01CUUdBMVVFQ2hNTlRHVjBKM01nClJXNWpjbmx3ZERFTE1Ba0dBMVVFQXhNQ1VqTXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUsKQW9JQkFRQzdBaFVvelBhZ2xOTVBFdXlOVlpMRCtJTHhtYVo2UW9pblhTYXF0U3U1eFV5eHI0NXIrWFhJbzljUApSNVFVVlRWWGpKNm9vamtaOVlJOFFxbE9idlU3d3k3YmpjQ3dYUE5aT09mdHoybndXZ3NidnNDVUpDV0gramR4CnN4UG5IS3pobSsvYjVEdEZVa1dXcWNGVHpqVElVdTYxcnUyUDNtQnc0cVZVcTdadERwZWxRRFJySzlPOFp1dG0KTkh6NmE0dVBWeW1aK0RBWFhicHliL3VCeGEzU2hsZzlGOGZuQ2J2eEsvZUczTUhhY1YzVVJ1UE1yU1hCaUx4ZwpaM1Ztcy9FWTk2SmM1bFAvT29pMlI2WC9FeGpxbUFsM1A1MVQrYzhCNWZXbWNCY1VyMk9rLzVtems1M2NVNmNHCi9raUZIYUZwcmlWMXV4UE1VZ1AxN1ZHaGk5c1ZBZ01CQUFHamdnRUlNSUlCQkRBT0JnTlZIUThCQWY4RUJBTUMKQVlZd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3SUdDQ3NHQVFVRkJ3TUJNQklHQTFVZEV3RUIvd1FJTUFZQgpBZjhDQVFBd0hRWURWUjBPQkJZRUZCUXVzeGUzV0ZiTHJsQUpRT1lmcjUyTEZNTEdNQjhHQTFVZEl3UVlNQmFBCkZIbTBXZVo3dHVYa0FYT0FDSWpJR2xqMjZadHVNRElHQ0NzR0FRVUZCd0VCQkNZd0pEQWlCZ2dyQmdFRkJRY3cKQW9ZV2FIUjBjRG92TDNneExta3ViR1Z1WTNJdWIzSm5MekFuQmdOVkhSOEVJREFlTUJ5Z0dxQVloaFpvZEhSdwpPaTh2ZURFdVl5NXNaVzVqY2k1dmNtY3ZNQ0lHQTFVZElBUWJNQmt3Q0FZR1o0RU1BUUlCTUEwR0N5c0dBUVFCCmd0OFRBUUVCTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElDQVFDRnlrNUhQcVAzaFVTRnZOVm5lTEtZWTYxMVRSNlcKUFRObGNsUXRnYURxdyszNElMOWZ6TGR3QUxkdU8vWmVsTjdrSUorbTc0dXlBK2VpdFJZOGtjNjA3VGtDNTN3bAppa2ZtWlc0L1J2VFo4TTZVSys1VXpoSzhqQ2RMdU1HWUw2S3Z6WEdSU2dpM3lMZ2pld1F0Q1BrSVZ6NkQyUVF6CkNrY2hlQW1DSjhNcXlKdTV6bHp5Wk1qQXZubkFUNDV0UkF4ZWtyc3U5NHNRNGVnZFJDbmJXU0R0WTdraCtCSW0KbEpOWG9CMWxCTUVLSXE0UURVT1hvUmdmZnVEZ2hqZTFXckc5TUwrSGJpc3EveUZPR3dYRDlSaVg4RjZzdzZXNAphdkF1dkRzenVlNUwzc3o4NUsrRUM0WS93RlZETnZabzRUWVhhbzZaMGYrbFFLYzB0OERRWXprMU9YVnU4cnAyCnlKTUM2YWxMYkJmT0RBTFp2WUg3bjdkbzFBWmxzNEk5ZDFQNGpua0RyUW94QjNVcVE5aFZsM0xFS1E3M3hGMU8KeUs1R2hERFg4b1ZmR0tGNXUrZGVjSXNINFlhVHc3bVAzR0Z4SlNxdjMrMGxVRkpvaTVMYzVkYTE0OXA5MElkcwpoQ0V4cm9MMSs3bXJ5SWtYUGVGTTVUZ085cjBydlphQkZPdlYyejBncDM1WjArTDRXUGxidUVqTi9seFBGaW4rCkhsVWpyOGdSc0kzcWZKT1FGeS85cktJSlIwWS84T213dC84b1RXZ3kxbWRlSG1tams3ajFuWXN2QzlKU1E2WnYKTWxkbFRUS0IzemhUaFYxK1hXWXA2cmpkNUpXMXpiVldFa0xOeEU3R0pUaEVVRzNzemdCVkdQN3BTV1RVVHNxWApuTFJid0hPb3E3aEh3Zz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZhekNDQTFPZ0F3SUJBZ0lSQUlJUXo3RFNRT05aUkdQZ3UyT0Npd0F3RFFZSktvWklodmNOQVFFTEJRQXcKVHpFTE1Ba0dBMVVFQmhNQ1ZWTXhLVEFuQmdOVkJBb1RJRWx1ZEdWeWJtVjBJRk5sWTNWeWFYUjVJRkpsYzJWaApjbU5vSUVkeWIzVndNUlV3RXdZRFZRUURFd3hKVTFKSElGSnZiM1FnV0RFd0hoY05NVFV3TmpBME1URXdORE00CldoY05NelV3TmpBME1URXdORE00V2pCUE1Rc3dDUVlEVlFRR0V3SlZVekVwTUNjR0ExVUVDaE1nU1c1MFpYSnUKWlhRZ1UyVmpkWEpwZEhrZ1VtVnpaV0Z5WTJnZ1IzSnZkWEF4RlRBVEJnTlZCQU1UREVsVFVrY2dVbTl2ZENCWQpNVENDQWlJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dJUEFEQ0NBZ29DZ2dJQkFLM29KSFAwRkRmem01NHJWeWdjCmg3N2N0OTg0a0l4dVBPWlhvSGozZGNLaS92VnFidllBVHlqYjNtaUdiRVNUdHJGai9SUVNhNzhmMHVveG15RisKMFRNOHVrajEzWG5mczdqL0V2RWhta3ZCaW9aeGFVcG1abXlQZmp4d3Y2MHBJZ2J6NU1EbWdLN2lTNCszbVg2VQpBNS9UUjVkOG1VZ2pVK2c0cms4S2I0TXUwVWxYaklCMHR0b3YwRGlOZXdOd0lSdDE4akE4K28rdTNkcGpxK3NXClQ4S09FVXQrend2by83VjNMdlN5ZTByZ1RCSWxESENOQXltZzRWTWs3QlBaN2htL0VMTktqRCtKbzJGUjNxeUgKQjVUMFkzSHNMdUp2VzVpQjRZbGNOSGxzZHU4N2tHSjU1dHVrbWk4bXhkQVE0UTdlMlJDT0Z2dTM5NmozeCtVQwpCNWlQTmdpVjUrSTNsZzAyZFo3N0RuS3hIWnU4QS9sSkJkaUIzUVcwS3RaQjZhd0JkcFVLRDlqZjFiMFNIelV2CktCZHMwcGpCcUFsa2QyNUhON3JPckZsZWFKMS9jdGFKeFFaQktUNVpQdDBtOVNUSkVhZGFvMHhBSDBhaG1iV24KT2xGdWhqdWVmWEtuRWdWNFdlMCtVWGdWQ3dPUGpkQXZCYkkrZTBvY1MzTUZFdnpHNnVCUUUzeERrM1N6eW5UbgpqaDhCQ05BdzFGdHhOclFIdXNFd01GeEl0NEk3bUtaOVlJcWlveW1DekxxOWd3UWJvb01EUWFIV0JmRWJ3cmJ3CnFIeUdPMGFvU0NxSTNIYWFkcjhmYXFVOUdZL3JPUE5rM3NnckRRb28vL2ZiNGhWQzFDTFFKMTNoZWY0WTUzQ0kKclU3bTJZczZ4dDBuVVc3L3ZHVDFNME5QQWdNQkFBR2pRakJBTUE0R0ExVWREd0VCL3dRRUF3SUJCakFQQmdOVgpIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJSNXRGbm1lN2JsNUFGemdBaUl5QnBZOXVtYmJqQU5CZ2txCmhraUc5dzBCQVFzRkFBT0NBZ0VBVlI5WXFieXlxRkRRRExIWUdta2dKeWtJckdGMVhJcHUrSUxsYVMvVjlsWkwKdWJoekVGblRJWmQrNTB4eCs3TFNZSzA1cUF2cUZ5RldoZkZRRGxucnp1Qlo2YnJKRmUrR25ZK0VnUGJrNlpHUQozQmViWWh0RjhHYVYwbnh2d3VvNzd4L1B5OWF1Si9HcHNNaXUvWDErbXZvaUJPdi8yWC9xa1NzaXNSY09qL0tLCk5GdFkyUHdCeVZTNXVDYk1pb2d6aVV3dGhEeUMzKzZXVndXNkxMdjN4TGZIVGp1Q3ZqSElJbk56a3RIQ2dLUTUKT1JBekk0Sk1QSitHc2xXWUhiNHBob3dpbTU3aWF6dFhPb0p3VGR3Sng0bkxDZ2ROYk9oZGpzbnZ6cXZIdTdVcgpUa1hXU3RBbXpPVnl5Z2hxcFpYakZhSDNwTzNKTEYrbCsvK3NLQUl1dnRkN3UrTnhlNUFXMHdkZVJsTjhOd2RDCmpOUEVscHpWbWJVcTRKVWFnRWl1VERrSHpzeEhwRktWSzdxNCs2M1NNMU45NVIxTmJkV2hzY2RDYitaQUp6VmMKb3lpM0I0M25qVE9RNXlPZisxQ2NlV3hHMWJRVnM1WnVmcHNNbGpxNFVpMC8xbHZoK3dqQ2hQNGtxS09KMnF4cQo0Umdxc2FoRFlWdlRIOXc3alhieUxlaU5kZDhYTTJ3OVUvdDd5MEZmLzl5aTBHRTQ0WmE0ckYyTE45ZDExVFBBCm1SR3VuVUhCY25XRXZnSkJRbDluSkVpVTBac252Z2MvdWJoUGdYUlI0WHEzN1owajRyN2cxU2dFRXp3eEE1N2QKZW15UHhnY1l4bi9lUjQ0L0tKNEVCcytsVkRSM3ZleUptK2tYUTk5YjIxLytqaDVYb3MxQW5YNWlJdHJlR0NjPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  permissions.json: ewogICJyb2xlcyI6IHsKICAgICJwcm90b2NvbC1hZGFwdGVyIjogWwogICAgICB7CiAgICAgICAgInJlc291cmNlIjogInRlbGVtZXRyeS8qIiwKICAgICAgICAiYWN0aXZpdGllcyI6IFsgIldSSVRFIiBdCiAgICAgIH0sCiAgICAgIHsKICAgICAgICAicmVzb3VyY2UiOiAiZXZlbnQvKiIsCiAgICAgICAgImFjdGl2aXRpZXMiOiBbICJXUklURSIgXQogICAgICB9LAogICAgICB7CiAgICAgICAgInJlc291cmNlIjogInJlZ2lzdHJhdGlvbi8qIiwKICAgICAgICAiYWN0aXZpdGllcyI6IFsgIlJFQUQiLCAiV1JJVEUiIF0KICAgICAgfSwKICAgICAgewogICAgICAgICJvcGVyYXRpb24iOiAicmVnaXN0cmF0aW9uLyo6YXNzZXJ0IiwKICAgICAgICAiYWN0aXZpdGllcyI6IFsgIkVYRUNVVEUiIF0KICAgICAgfSwKICAgICAgewogICAgICAgICJvcGVyYXRpb24iOiAicmVnaXN0cmF0aW9uLyo6Z2V0IiwKICAgICAgICAiYWN0aXZpdGllcyI6IFsgIkVYRUNVVEUiIF0KICAgICAgfSwKICAgICAgewogICAgICAgICJyZXNvdXJjZSI6ICJjcmVkZW50aWFscy8qIiwKICAgICAgICAiYWN0aXZpdGllcyI6IFsgIlJFQUQiLCAiV1JJVEUiIF0KICAgICAgfSwKICAgICAgewogICAgICAgICJvcGVyYXRpb24iOiAiY3JlZGVudGlhbHMvKjpnZXQiLAogICAgICAgICJhY3Rpdml0aWVzIjogWyAiRVhFQ1VURSIgXQogICAgICB9LAogICAgICB7CiAgICAgICAgInJlc291cmNlIjogInRlbmFudCIsCiAgICAgICAgImFjdGl2aXRpZXMiOiBbICJSRUFEIiwgIldSSVRFIiBdCiAgICAgIH0sCiAgICAgIHsKICAgICAgICAib3BlcmF0aW9uIjogInRlbmFudC8qOioiLAogICAgICAgICJhY3Rpdml0aWVzIjogWyAiRVhFQ1VURSIgXQogICAgICB9LAogICAgICB7CiAgICAgICAgInJlc291cmNlIjogImNtZF9yb3V0ZXIvKiIsCiAgICAgICAgImFjdGl2aXRpZXMiOiBbICJSRUFEIiwgIldSSVRFIiBdCiAgICAgIH0sCiAgICAgIHsKICAgICAgICAib3BlcmF0aW9uIjogImNtZF9yb3V0ZXIvKjoqIiwKICAgICAgICAiYWN0aXZpdGllcyI6IFsgIkVYRUNVVEUiIF0KICAgICAgfSwKICAgICAgewogICAgICAgICJyZXNvdXJjZSI6ICJkZXZpY2VfY29uLyoiLAogICAgICAgICJhY3Rpdml0aWVzIjogWyAiUkVBRCIsICJXUklURSIgXQogICAgICB9LAogICAgICB7CiAgICAgICAgIm9wZXJhdGlvbiI6ICJkZXZpY2VfY29uLyo6KiIsCiAgICAgICAgImFjdGl2aXRpZXMiOiBbICJFWEVDVVRFIiBdCiAgICAgIH0KICAgIF0sCiAgICAiY29tbWFuZC1yb3V0ZXIiOiBbCiAgICAgIHsKICAgICAgICAicmVzb3VyY2UiOiAidGVuYW50IiwKICAgICAgICAiYWN0aXZpdGllcyI6IFsgIlJFQUQiLCAiV1JJVEUiIF0KICAgICAgfSwKICAgICAgewogICAgICAgICJvcGVyYXRpb24iOiAidGVuYW50Lyo6KiIsCiAgICAgICAgImFjdGl2aXRpZXMiOiBbICJFWEVDVVRFIiBdCiAgICAgIH0sCiAgICAgIHsKICAgICAgICAicmVzb3VyY2UiOiAicmVnaXN0cmF0aW9uLyoiLAogICAgICAgICJhY3Rpdml0aWVzIjogWyAiUkVBRCIsICJXUklURSIgXQogICAgICB9LAogICAgICB7CiAgICAgICAgIm9wZXJhdGlvbiI6ICJyZWdpc3RyYXRpb24vKjoqIiwKICAgICAgICAiYWN0aXZpdGllcyI6IFsgIkVYRUNVVEUiIF0KICAgICAgfQogICAgXSwKICAgICJkZXZpY2UtbWFuYWdlciI6IFsKICAgICAgewogICAgICAgICJyZXNvdXJjZSI6ICJyZWdpc3RyYXRpb24vKiIsCiAgICAgICAgImFjdGl2aXRpZXMiOiBbICJSRUFEIiwgIldSSVRFIiBdCiAgICAgIH0sCiAgICAgIHsKICAgICAgICAib3BlcmF0aW9uIjogInJlZ2lzdHJhdGlvbi8qOioiLAogICAgICAgICJhY3Rpdml0aWVzIjogWyAiRVhFQ1VURSIgXQogICAgICB9CiAgICBdLAogICAgImFwcGxpY2F0aW9uIjogWwogICAgICB7CiAgICAgICAgInJlc291cmNlIjogInRlbGVtZXRyeS8qIiwKICAgICAgICAiYWN0aXZpdGllcyI6IFsgIlJFQUQiIF0KICAgICAgfSwKICAgICAgewogICAgICAgICJyZXNvdXJjZSI6ICJldmVudC8qIiwKICAgICAgICAiYWN0aXZpdGllcyI6IFsgIlJFQUQiIF0KICAgICAgfSwKICAgICAgewogICAgICAgICJyZXNvdXJjZSI6ICJjb250cm9sLyoiLAogICAgICAgICJhY3Rpdml0aWVzIjogWyAiUkVBRCIsICJXUklURSIgXQogICAgICB9LAogICAgICB7CiAgICAgICAgInJlc291cmNlIjogImNvbW1hbmQvKiIsCiAgICAgICAgImFjdGl2aXRpZXMiOiBbICJXUklURSIgXQogICAgICB9LAogICAgICB7CiAgICAgICAgInJlc291cmNlIjogImNvbW1hbmRfcmVzcG9uc2UvKiIsCiAgICAgICAgImFjdGl2aXRpZXMiOiBbICJSRUFEIiBdCiAgICAgIH0KICAgIF0KICB9LAogICJ1c2VycyI6IHsKICAgICJjb2FwLWFkYXB0ZXJASE9OTyI6IHsKICAgICAgIm1lY2hhbmlzbSI6ICJQTEFJTiIsCiAgICAgICJwYXNzd29yZCI6ICJjb2FwLXNlY3JldCIsCiAgICAgICJhdXRob3JpdGllcyI6IFsgImhvbm8tY29tcG9uZW50IiwgInByb3RvY29sLWFkYXB0ZXIiIF0KICAgIH0sCiAgICAiaHR0cC1hZGFwdGVyQEhPTk8iOiB7CiAgICAgICJtZWNoYW5pc20iOiAiUExBSU4iLAogICAgICAicGFzc3dvcmQiOiAiaHR0cC1zZWNyZXQiLAogICAgICAiYXV0aG9yaXRpZXMiOiBbICJob25vLWNvbXBvbmVudCIsICJwcm90b2NvbC1hZGFwdGVyIiBdCiAgICB9LAogICAgImxvcmEtYWRhcHRlckBIT05PIjogewogICAgICAibWVjaGFuaXNtIjogIlBMQUlOIiwKICAgICAgInBhc3N3b3JkIjogImxvcmEtc2VjcmV0IiwKICAgICAgImF1dGhvcml0aWVzIjogWyAiaG9uby1jb21wb25lbnQiLCAicHJvdG9jb2wtYWRhcHRlciIgXQogICAgfSwKICAgICJtcXR0LWFkYXB0ZXJASE9OTyI6IHsKICAgICAgIm1lY2hhbmlzbSI6ICJQTEFJTiIsCiAgICAgICJwYXNzd29yZCI6ICJtcXR0LXNlY3JldCIsCiAgICAgICJhdXRob3JpdGllcyI6IFsgImhvbm8tY29tcG9uZW50IiwgInByb3RvY29sLWFkYXB0ZXIiIF0KICAgIH0sCiAgICAiYW1xcC1hZGFwdGVyQEhPTk8iOiB7CiAgICAgICJtZWNoYW5pc20iOiAiUExBSU4iLAogICAgICAicGFzc3dvcmQiOiAiYW1xcC1zZWNyZXQiLAogICAgICAiYXV0aG9yaXRpZXMiOiBbICJob25vLWNvbXBvbmVudCIsICJwcm90b2NvbC1hZGFwdGVyIiBdCiAgICB9LAogICAgImt1cmEtYWRhcHRlckBIT05PIjogewogICAgICAibWVjaGFuaXNtIjogIlBMQUlOIiwKICAgICAgInBhc3N3b3JkIjogImt1cmEtc2VjcmV0IiwKICAgICAgImF1dGhvcml0aWVzIjogWyAiaG9uby1jb21wb25lbnQiLCAicHJvdG9jb2wtYWRhcHRlciIgXQogICAgfSwKICAgICJjb21tYW5kLXJvdXRlckBIT05PIjogewogICAgICAibWVjaGFuaXNtIjogIlBMQUlOIiwKICAgICAgInBhc3N3b3JkIjogImNtZC1yb3V0ZXItc2VjcmV0IiwKICAgICAgImF1dGhvcml0aWVzIjogWyAiaG9uby1jb21wb25lbnQiLCAiY29tbWFuZC1yb3V0ZXIiIF0KICAgIH0sCiAgICAiaG9uby1jbGllbnRASE9OTyI6IHsKICAgICAgIm1lY2hhbmlzbSI6ICJQTEFJTiIsCiAgICAgICJwYXNzd29yZCI6ICJzZWNyZXQiLAogICAgICAiYXV0aG9yaXRpZXMiOiBbICJwcm90b2NvbC1hZGFwdGVyIiwgImRldmljZS1tYW5hZ2VyIiBdCiAgICB9LAogICAgImRldmljZS1yZWdpc3RyeSI6IHsKICAgICAgIm1lY2hhbmlzbSI6ICJFWFRFUk5BTCIsCiAgICAgICJhdXRob3JpdGllcyI6IFtdCiAgICB9LAogICAgImNvbnN1bWVyQEhPTk8iOiB7CiAgICAgICJtZWNoYW5pc20iOiAiUExBSU4iLAogICAgICAicGFzc3dvcmQiOiAidmVyeXNlY3JldCIsCiAgICAgICJhdXRob3JpdGllcyI6IFsgImFwcGxpY2F0aW9uIiBdCiAgICB9CiAgfQp9Cg==
---
# Source: cloud2edge/charts/hono/templates/hono-service-command-router/hono-service-command-router-secret.yaml
#
# Copyright (c) 2021, 2022 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
#
apiVersion: v1
kind: Secret
metadata:
  name: c2e-service-command-router-conf
  namespace: cloud2edge
  labels:
    app.kubernetes.io/name: hono
    helm.sh/chart: hono-1.12.8
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: c2e
    app.kubernetes.io/version: 1.12.2
    app.kubernetes.io/component: service-command-router
type: Opaque
stringData:
  dns-cache-config.properties: |
    networkaddress.cache.negative.ttl=0
  logging-quarkus-prod.yml: |
    quarkus:
      log:
        category:
          "org.apache.kafka":
            level: ERROR
          "org.eclipse.hono":
            level: INFO
          "org.eclipse.hono.client.impl.HonoConnectionImpl":
            level: ERROR
    
  logging-quarkus-dev.yml: |
    quarkus:
      log:
        category:
          "io.netty.handler.logging.LoggingHandler":
            level: DEBUG
          "org.apache.kafka":
            level: INFO
          "org.eclipse.hono":
            level: DEBUG
          "org.infinispan":
            level: DEBUG
    
  logging-quarkus-trace.yml: |
    quarkus:
      log:
        category:
          "io.netty.handler.logging.LoggingHandler":
            level: DEBUG
          "org.apache.kafka":
            level: INFO
          "org.eclipse.hono":
            level: TRACE
          "org.infinispan":
            level: DEBUG
    
  application.yml: |
    hono:
      app:
        # The embedded cache is created for each service instance being deployed, so
        # we need to limit the number to one instance in order to ensure consistent cache content
        maxInstances: 1
      auth:
        host: "c2e-service-auth"
        port: 5671
        trustStorePath: "/etc/hono/trusted-certs.pem"
        hostnameVerificationRequired: false
        name: "Hono service-command-router"
        validation:
          certPath: "/etc/hono/auth-server-cert.pem"
      commandRouter:
        amqp:
          bindAddress: "0.0.0.0"
          keyPath: "/etc/hono/key.pem"
          certPath: "/etc/hono/cert.pem"
        cache:
      registration:
        name: Hono service-command-router
        host: c2e-service-device-registry
        port: 5671
        credentialsPath: /etc/hono/adapter.credentials
        trustStorePath: "/etc/hono/trusted-certs.pem"
        hostnameVerificationRequired: false
      tenant:
        name: Hono service-command-router
        host: c2e-service-device-registry
        port: 5671
        credentialsPath: /etc/hono/adapter.credentials
        trustStorePath: "/etc/hono/trusted-certs.pem"
        hostnameVerificationRequired: false
      command:
        name: "Hono service-command-router"
        amqpHostname: hono-internal
        host: c2e-dispatch-router
        port: 5673
        keyPath: /etc/hono/key.pem
        certPath: /etc/hono/cert.pem
        trustStorePath: /etc/hono/trusted-certs.pem
        hostnameVerificationRequired: false
      healthCheck:
        insecurePort: 8088
        insecurePortBindAddress: "0.0.0.0"    
    quarkus:
      jaeger:
        service-name: "c2e-service-command-router"
      log:
        console:
          color: true
        min-level: TRACE
        level: INFO
        category:
          "io.quarkus.jaeger":
            level: DEBUG
          "io.quarkus.vertx.core.runtime":
            level: DEBUG
      vertx:
        prefer-native-transport: true
        resolver:
          cache-max-time-to-live: 0
  cache-config.xml: |
    <?xml version="1.0" encoding="UTF-8"?>
    <!-- 
        Copyright (c) 2021, 2022 Contributors to the Eclipse Foundation
       
        See the NOTICE file(s) distributed with this work for additional
        information regarding copyright ownership.
       
        This program and the accompanying materials are made available under the
        terms of the Eclipse Public License 2.0 which is available at
        http://www.eclipse.org/legal/epl-2.0
       
        SPDX-License-Identifier: EPL-2.0
     -->
    <infinispan
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
            xsi:schemaLocation="urn:infinispan:config:13.0 https://infinispan.org/schemas/infinispan-config-13.0.xsd"
            xmlns="urn:infinispan:config:13.0">
    
      <cache-container default-cache="command-router">
        <local-cache name="command-router" simple-cache="true">
          <encoding media-type="application/x-protostream" />
          <memory max-count="200" storage="OFF_HEAP" when-full="REMOVE"></memory>
        </local-cache>
      </cache-container>
    </infinispan>
    
data:
  key.pem: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JR0hBZ0VBTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEJHMHdhd0lCQVFRZ25pSUdoV0lHa1lNaURuUTQKb1dzWUFIWndwaFZ2aUNsS3lEQkVvZlVhaHZHaFJBTkNBQVJwK2dVWEtPUktkTVJKa3hOVFlJU2FVazZKdG5YWApqVlYyVTk4N3hqYmdUa2NPTkdDRjdSM2ZMejBUVWJmWU5ETTNPd1MySEV0TjE5djNESlM5U3ZpcgotLS0tLUVORCBQUklWQVRFIEtFWS0tLS0tCg==
  cert.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNVVENDQWZpZ0F3SUJBZ0lVQjJ2eFdJOXdqMzJPSExhQUJWVitpdVZrZFNBd0NnWUlLb1pJemowRUF3SXcKVURFTE1Ba0dBMVVFQmhNQ1EwRXhEekFOQmdOVkJBY01CazkwZEdGM1lURVVNQklHQTFVRUNnd0xSV05zYVhCegpaU0JKYjFReERUQUxCZ05WQkFzTUJFaHZibTh4Q3pBSkJnTlZCQU1NQW1OaE1CNFhEVEl5TURFeU5qQTRNRFl4Ck1Gb1hEVEl6TURFeU5qQTRNRFl4TUZvd1hERUxNQWtHQTFVRUJoTUNRMEV4RHpBTkJnTlZCQWNNQms5MGRHRjMKWVRFVU1CSUdBMVVFQ2d3TFJXTnNhWEJ6WlNCSmIxUXhEVEFMQmdOVkJBc01CRWh2Ym04eEZ6QVZCZ05WQkFNTQpEbU52YlcxaGJtUXRjbTkxZEdWeU1Ga3dFd1lIS29aSXpqMENBUVlJS29aSXpqMERBUWNEUWdBRWFmb0ZGeWprClNuVEVTWk1UVTJDRW1sSk9pYloxMTQxVmRsUGZPOFkyNEU1SERqUmdoZTBkM3k4OUUxRzMyRFF6TnpzRXRoeEwKVGRmYjl3eVV2VXI0cTZPQm96Q0JvREFkQmdOVkhRNEVGZ1FVcmtlbFNLWlFGUEZNeGZiSVJldTMyVE5MVy9vdwpDd1lEVlIwUEJBUURBZ09vTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGQlFjREFqQlRCZ05WCkhSRUVUREJLZ2h0b2IyNXZMWE5sY25acFkyVXRZMjl0YldGdVpDMXliM1YwWlhLQ0lHaHZibTh0YzJWeWRtbGoKWlMxamIyMXRZVzVrTFhKdmRYUmxjaTVvYjI1dmdnbHNiMk5oYkdodmMzUXdDZ1lJS29aSXpqMEVBd0lEUndBdwpSQUlnSWc4VzJoVGdObGV3QTViUENxRWR1eVkvcjlpYXc5c1VRM1RsNFRuQmgva0NJQ0hGanVXQnlRcG1RcHUxCi9KenptWW1Vb3BrYXFDNVVqOU04UjhGNkdiRmMKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJQjR6Q0NBWW1nQXdJQkFnSVVEdmZzZXZIcEY3T2JSZUFBbUdYWEhIc0FYRHd3Q2dZSUtvWkl6ajBFQXdJdwpVakVMTUFrR0ExVUVCaE1DUTBFeER6QU5CZ05WQkFjTUJrOTBkR0YzWVRFVU1CSUdBMVVFQ2d3TFJXTnNhWEJ6ClpTQkpiMVF4RFRBTEJnTlZCQXNNQkVodmJtOHhEVEFMQmdOVkJBTU1CSEp2YjNRd0hoY05Nakl3TVRJMk1EZ3cKTmpBM1doY05Nak13TVRJMk1EZ3dOakEzV2pCUU1Rc3dDUVlEVlFRR0V3SkRRVEVQTUEwR0ExVUVCd3dHVDNSMApZWGRoTVJRd0VnWURWUVFLREF0RlkyeHBjSE5sSUVsdlZERU5NQXNHQTFVRUN3d0VTRzl1YnpFTE1Ba0dBMVVFCkF3d0NZMkV3V1RBVEJnY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkNBQVJRQXJORk5GNnZZTkpTeWloTWtqWUIKM1BYZ0Z1RS95dmJDVWd1T216a3dyMDFySWxYK3IvRVJ4Nnc0aHc5UXF3ZnFQcloyejJSdjA2dGN5ckxSblMxZwpvejh3UFRBZEJnTlZIUTRFRmdRVWVUQ20wMHRNajkrZC9QZEUyVFM1MEdIcUs4MHdEd1lEVlIwVEFRSC9CQVV3CkF3RUIvekFMQmdOVkhROEVCQU1DQVFZd0NnWUlLb1pJemowRUF3SURTQUF3UlFJaEFKWVU2YXI0QkFCeFNpRzcKbEplMGdibW1BQW5LU2RFL2lUYnNLTWJsUjE5UkFpQTZoYU8rbHI4WUZNOWpoYXRDWjJqdk1NWHA4UFFUWWcrdgo5OTJ4a29rbWFRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  trusted-certs.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUI0ekNDQVltZ0F3SUJBZ0lVRHZmc2V2SHBGN09iUmVBQW1HWFhISHNBWER3d0NnWUlLb1pJemowRUF3SXcKVWpFTE1Ba0dBMVVFQmhNQ1EwRXhEekFOQmdOVkJBY01CazkwZEdGM1lURVVNQklHQTFVRUNnd0xSV05zYVhCegpaU0JKYjFReERUQUxCZ05WQkFzTUJFaHZibTh4RFRBTEJnTlZCQU1NQkhKdmIzUXdIaGNOTWpJd01USTJNRGd3Ck5qQTNXaGNOTWpNd01USTJNRGd3TmpBM1dqQlFNUXN3Q1FZRFZRUUdFd0pEUVRFUE1BMEdBMVVFQnd3R1QzUjAKWVhkaE1SUXdFZ1lEVlFRS0RBdEZZMnhwY0hObElFbHZWREVOTUFzR0ExVUVDd3dFU0c5dWJ6RUxNQWtHQTFVRQpBd3dDWTJFd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFSUUFyTkZORjZ2WU5KU3lpaE1rallCCjNQWGdGdUUveXZiQ1VndU9temt3cjAxcklsWCtyL0VSeDZ3NGh3OVFxd2ZxUHJaMnoyUnYwNnRjeXJMUm5TMWcKb3o4d1BUQWRCZ05WSFE0RUZnUVVlVENtMDB0TWo5K2QvUGRFMlRTNTBHSHFLODB3RHdZRFZSMFRBUUgvQkFVdwpBd0VCL3pBTEJnTlZIUThFQkFNQ0FRWXdDZ1lJS29aSXpqMEVBd0lEU0FBd1JRSWhBSllVNmFyNEJBQnhTaUc3CmxKZTBnYm1tQUFuS1NkRS9pVGJzS01ibFIxOVJBaUE2aGFPK2xyOFlGTTlqaGF0Q1oyanZNTVhwOFBRVFlnK3YKOTkyeGtva21hUT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNlRENDQWgrZ0F3SUJBZ0lVYmM4RmY0SDZJWTd1MzE5czlZM3BhdlFHN28wd0NnWUlLb1pJemowRUF3SXcKVWpFTE1Ba0dBMVVFQmhNQ1EwRXhEekFOQmdOVkJBY01CazkwZEdGM1lURVVNQklHQTFVRUNnd0xSV05zYVhCegpaU0JKYjFReERUQUxCZ05WQkFzTUJFaHZibTh4RFRBTEJnTlZCQU1NQkhKdmIzUXdIaGNOTWpJd01USTJNRGd3Ck5qQTNXaGNOTWpNd01USTJNRGd3TmpBM1dqQlNNUXN3Q1FZRFZRUUdFd0pEUVRFUE1BMEdBMVVFQnd3R1QzUjAKWVhkaE1SUXdFZ1lEVlFRS0RBdEZZMnhwY0hObElFbHZWREVOTUFzR0ExVUVDd3dFU0c5dWJ6RU5NQXNHQTFVRQpBd3dFY205dmREQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJDbWV3ZGlyMFMvSDE1eVpDTHV5Cnk4dk1MQU53QWJYVFVBcFk5d1N4ZnE5M25XTzFEdm9VWFJqOCtaS2hNVTFXc2wzQVFhZWxVNXBUMmswWXJhMEYKV0dtamdkSXdnYzh3SFFZRFZSME9CQllFRkhnZ2R4OXFYMnZ1OXVGaUF2WER2WHhHMnZ2Sk1JR1BCZ05WSFNNRQpnWWN3Z1lTQUZIZ2dkeDlxWDJ2dTl1RmlBdlhEdlh4RzJ2dkpvVmFrVkRCU01Rc3dDUVlEVlFRR0V3SkRRVEVQCk1BMEdBMVVFQnd3R1QzUjBZWGRoTVJRd0VnWURWUVFLREF0RlkyeHBjSE5sSUVsdlZERU5NQXNHQTFVRUN3d0UKU0c5dWJ6RU5NQXNHQTFVRUF3d0VjbTl2ZElJVWJjOEZmNEg2SVk3dTMxOXM5WTNwYXZRRzdvMHdEd1lEVlIwVApBUUgvQkFVd0F3RUIvekFMQmdOVkhROEVCQU1DQVFZd0NnWUlLb1pJemowRUF3SURSd0F3UkFJZ0s4V29HSVlyCmJEZmRsMU5yUnpxUVpvbE5JRnQ0Tm45cWZWUU1WUHFuck1nQ0lHaFJjM1MxTFpSbHk2MU9JN2RzZHhqRVZaUkgKTkpBTUlqemNaSVRJdkNIMgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlGRmpDQ0F2NmdBd0lCQWdJUkFKRXJDRXJQREJpblUvYldMaVduWDFvd0RRWUpLb1pJaHZjTkFRRUxCUUF3ClR6RUxNQWtHQTFVRUJoTUNWVk14S1RBbkJnTlZCQW9USUVsdWRHVnlibVYwSUZObFkzVnlhWFI1SUZKbGMyVmgKY21Ob0lFZHliM1Z3TVJVd0V3WURWUVFERXd4SlUxSkhJRkp2YjNRZ1dERXdIaGNOTWpBd09UQTBNREF3TURBdwpXaGNOTWpVd09URTFNVFl3TURBd1dqQXlNUXN3Q1FZRFZRUUdFd0pWVXpFV01CUUdBMVVFQ2hNTlRHVjBKM01nClJXNWpjbmx3ZERFTE1Ba0dBMVVFQXhNQ1VqTXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUsKQW9JQkFRQzdBaFVvelBhZ2xOTVBFdXlOVlpMRCtJTHhtYVo2UW9pblhTYXF0U3U1eFV5eHI0NXIrWFhJbzljUApSNVFVVlRWWGpKNm9vamtaOVlJOFFxbE9idlU3d3k3YmpjQ3dYUE5aT09mdHoybndXZ3NidnNDVUpDV0gramR4CnN4UG5IS3pobSsvYjVEdEZVa1dXcWNGVHpqVElVdTYxcnUyUDNtQnc0cVZVcTdadERwZWxRRFJySzlPOFp1dG0KTkh6NmE0dVBWeW1aK0RBWFhicHliL3VCeGEzU2hsZzlGOGZuQ2J2eEsvZUczTUhhY1YzVVJ1UE1yU1hCaUx4ZwpaM1Ztcy9FWTk2SmM1bFAvT29pMlI2WC9FeGpxbUFsM1A1MVQrYzhCNWZXbWNCY1VyMk9rLzVtems1M2NVNmNHCi9raUZIYUZwcmlWMXV4UE1VZ1AxN1ZHaGk5c1ZBZ01CQUFHamdnRUlNSUlCQkRBT0JnTlZIUThCQWY4RUJBTUMKQVlZd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3SUdDQ3NHQVFVRkJ3TUJNQklHQTFVZEV3RUIvd1FJTUFZQgpBZjhDQVFBd0hRWURWUjBPQkJZRUZCUXVzeGUzV0ZiTHJsQUpRT1lmcjUyTEZNTEdNQjhHQTFVZEl3UVlNQmFBCkZIbTBXZVo3dHVYa0FYT0FDSWpJR2xqMjZadHVNRElHQ0NzR0FRVUZCd0VCQkNZd0pEQWlCZ2dyQmdFRkJRY3cKQW9ZV2FIUjBjRG92TDNneExta3ViR1Z1WTNJdWIzSm5MekFuQmdOVkhSOEVJREFlTUJ5Z0dxQVloaFpvZEhSdwpPaTh2ZURFdVl5NXNaVzVqY2k1dmNtY3ZNQ0lHQTFVZElBUWJNQmt3Q0FZR1o0RU1BUUlCTUEwR0N5c0dBUVFCCmd0OFRBUUVCTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElDQVFDRnlrNUhQcVAzaFVTRnZOVm5lTEtZWTYxMVRSNlcKUFRObGNsUXRnYURxdyszNElMOWZ6TGR3QUxkdU8vWmVsTjdrSUorbTc0dXlBK2VpdFJZOGtjNjA3VGtDNTN3bAppa2ZtWlc0L1J2VFo4TTZVSys1VXpoSzhqQ2RMdU1HWUw2S3Z6WEdSU2dpM3lMZ2pld1F0Q1BrSVZ6NkQyUVF6CkNrY2hlQW1DSjhNcXlKdTV6bHp5Wk1qQXZubkFUNDV0UkF4ZWtyc3U5NHNRNGVnZFJDbmJXU0R0WTdraCtCSW0KbEpOWG9CMWxCTUVLSXE0UURVT1hvUmdmZnVEZ2hqZTFXckc5TUwrSGJpc3EveUZPR3dYRDlSaVg4RjZzdzZXNAphdkF1dkRzenVlNUwzc3o4NUsrRUM0WS93RlZETnZabzRUWVhhbzZaMGYrbFFLYzB0OERRWXprMU9YVnU4cnAyCnlKTUM2YWxMYkJmT0RBTFp2WUg3bjdkbzFBWmxzNEk5ZDFQNGpua0RyUW94QjNVcVE5aFZsM0xFS1E3M3hGMU8KeUs1R2hERFg4b1ZmR0tGNXUrZGVjSXNINFlhVHc3bVAzR0Z4SlNxdjMrMGxVRkpvaTVMYzVkYTE0OXA5MElkcwpoQ0V4cm9MMSs3bXJ5SWtYUGVGTTVUZ085cjBydlphQkZPdlYyejBncDM1WjArTDRXUGxidUVqTi9seFBGaW4rCkhsVWpyOGdSc0kzcWZKT1FGeS85cktJSlIwWS84T213dC84b1RXZ3kxbWRlSG1tams3ajFuWXN2QzlKU1E2WnYKTWxkbFRUS0IzemhUaFYxK1hXWXA2cmpkNUpXMXpiVldFa0xOeEU3R0pUaEVVRzNzemdCVkdQN3BTV1RVVHNxWApuTFJid0hPb3E3aEh3Zz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZhekNDQTFPZ0F3SUJBZ0lSQUlJUXo3RFNRT05aUkdQZ3UyT0Npd0F3RFFZSktvWklodmNOQVFFTEJRQXcKVHpFTE1Ba0dBMVVFQmhNQ1ZWTXhLVEFuQmdOVkJBb1RJRWx1ZEdWeWJtVjBJRk5sWTNWeWFYUjVJRkpsYzJWaApjbU5vSUVkeWIzVndNUlV3RXdZRFZRUURFd3hKVTFKSElGSnZiM1FnV0RFd0hoY05NVFV3TmpBME1URXdORE00CldoY05NelV3TmpBME1URXdORE00V2pCUE1Rc3dDUVlEVlFRR0V3SlZVekVwTUNjR0ExVUVDaE1nU1c1MFpYSnUKWlhRZ1UyVmpkWEpwZEhrZ1VtVnpaV0Z5WTJnZ1IzSnZkWEF4RlRBVEJnTlZCQU1UREVsVFVrY2dVbTl2ZENCWQpNVENDQWlJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dJUEFEQ0NBZ29DZ2dJQkFLM29KSFAwRkRmem01NHJWeWdjCmg3N2N0OTg0a0l4dVBPWlhvSGozZGNLaS92VnFidllBVHlqYjNtaUdiRVNUdHJGai9SUVNhNzhmMHVveG15RisKMFRNOHVrajEzWG5mczdqL0V2RWhta3ZCaW9aeGFVcG1abXlQZmp4d3Y2MHBJZ2J6NU1EbWdLN2lTNCszbVg2VQpBNS9UUjVkOG1VZ2pVK2c0cms4S2I0TXUwVWxYaklCMHR0b3YwRGlOZXdOd0lSdDE4akE4K28rdTNkcGpxK3NXClQ4S09FVXQrend2by83VjNMdlN5ZTByZ1RCSWxESENOQXltZzRWTWs3QlBaN2htL0VMTktqRCtKbzJGUjNxeUgKQjVUMFkzSHNMdUp2VzVpQjRZbGNOSGxzZHU4N2tHSjU1dHVrbWk4bXhkQVE0UTdlMlJDT0Z2dTM5NmozeCtVQwpCNWlQTmdpVjUrSTNsZzAyZFo3N0RuS3hIWnU4QS9sSkJkaUIzUVcwS3RaQjZhd0JkcFVLRDlqZjFiMFNIelV2CktCZHMwcGpCcUFsa2QyNUhON3JPckZsZWFKMS9jdGFKeFFaQktUNVpQdDBtOVNUSkVhZGFvMHhBSDBhaG1iV24KT2xGdWhqdWVmWEtuRWdWNFdlMCtVWGdWQ3dPUGpkQXZCYkkrZTBvY1MzTUZFdnpHNnVCUUUzeERrM1N6eW5UbgpqaDhCQ05BdzFGdHhOclFIdXNFd01GeEl0NEk3bUtaOVlJcWlveW1DekxxOWd3UWJvb01EUWFIV0JmRWJ3cmJ3CnFIeUdPMGFvU0NxSTNIYWFkcjhmYXFVOUdZL3JPUE5rM3NnckRRb28vL2ZiNGhWQzFDTFFKMTNoZWY0WTUzQ0kKclU3bTJZczZ4dDBuVVc3L3ZHVDFNME5QQWdNQkFBR2pRakJBTUE0R0ExVWREd0VCL3dRRUF3SUJCakFQQmdOVgpIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJSNXRGbm1lN2JsNUFGemdBaUl5QnBZOXVtYmJqQU5CZ2txCmhraUc5dzBCQVFzRkFBT0NBZ0VBVlI5WXFieXlxRkRRRExIWUdta2dKeWtJckdGMVhJcHUrSUxsYVMvVjlsWkwKdWJoekVGblRJWmQrNTB4eCs3TFNZSzA1cUF2cUZ5RldoZkZRRGxucnp1Qlo2YnJKRmUrR25ZK0VnUGJrNlpHUQozQmViWWh0RjhHYVYwbnh2d3VvNzd4L1B5OWF1Si9HcHNNaXUvWDErbXZvaUJPdi8yWC9xa1NzaXNSY09qL0tLCk5GdFkyUHdCeVZTNXVDYk1pb2d6aVV3dGhEeUMzKzZXVndXNkxMdjN4TGZIVGp1Q3ZqSElJbk56a3RIQ2dLUTUKT1JBekk0Sk1QSitHc2xXWUhiNHBob3dpbTU3aWF6dFhPb0p3VGR3Sng0bkxDZ2ROYk9oZGpzbnZ6cXZIdTdVcgpUa1hXU3RBbXpPVnl5Z2hxcFpYakZhSDNwTzNKTEYrbCsvK3NLQUl1dnRkN3UrTnhlNUFXMHdkZVJsTjhOd2RDCmpOUEVscHpWbWJVcTRKVWFnRWl1VERrSHpzeEhwRktWSzdxNCs2M1NNMU45NVIxTmJkV2hzY2RDYitaQUp6VmMKb3lpM0I0M25qVE9RNXlPZisxQ2NlV3hHMWJRVnM1WnVmcHNNbGpxNFVpMC8xbHZoK3dqQ2hQNGtxS09KMnF4cQo0Umdxc2FoRFlWdlRIOXc3alhieUxlaU5kZDhYTTJ3OVUvdDd5MEZmLzl5aTBHRTQ0WmE0ckYyTE45ZDExVFBBCm1SR3VuVUhCY25XRXZnSkJRbDluSkVpVTBac252Z2MvdWJoUGdYUlI0WHEzN1owajRyN2cxU2dFRXp3eEE1N2QKZW15UHhnY1l4bi9lUjQ0L0tKNEVCcytsVkRSM3ZleUptK2tYUTk5YjIxLytqaDVYb3MxQW5YNWlJdHJlR0NjPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  auth-server-cert.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNPekNDQWVHZ0F3SUJBZ0lVQjJ2eFdJOXdqMzJPSExhQUJWVitpdVZrZFIwd0NnWUlLb1pJemowRUF3SXcKVURFTE1Ba0dBMVVFQmhNQ1EwRXhEekFOQmdOVkJBY01CazkwZEdGM1lURVVNQklHQTFVRUNnd0xSV05zYVhCegpaU0JKYjFReERUQUxCZ05WQkFzTUJFaHZibTh4Q3pBSkJnTlZCQU1NQW1OaE1CNFhEVEl5TURFeU5qQTRNRFl3Ck9Wb1hEVEl6TURFeU5qQTRNRFl3T1Zvd1dURUxNQWtHQTFVRUJoTUNRMEV4RHpBTkJnTlZCQWNNQms5MGRHRjMKWVRFVU1CSUdBMVVFQ2d3TFJXTnNhWEJ6WlNCSmIxUXhEVEFMQmdOVkJBc01CRWh2Ym04eEZEQVNCZ05WQkFNTQpDMkYxZEdndGMyVnlkbVZ5TUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0RRZ0FFakxUV25UcGh3Q1cwCnMwWHp3VGpSNUpqbkQxRHBoVVdSMnVockdka3BQVFBqd1RrLzRscTdkSEJqVE81M2xQakR6NENmRDlZTnBtR0wKQmN6QVo0NzcyNk9CanpDQmpEQWRCZ05WSFE0RUZnUVVoR0FiZTlzRS9KY3VKanB4b1J5L2prQ0RDVWt3Q3dZRApWUjBQQkFRREFnT29NQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBL0JnTlZIUkVFCk9EQTJnaEZvYjI1dkxYTmxjblpwWTJVdFlYVjBhSUlXYUc5dWJ5MXpaWEoyYVdObExXRjFkR2d1YUc5dWI0SUoKYkc5allXeG9iM04wTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDSUVCaGVWaXN1Ky9pSlI2NUlDSlpZTUhUTEQ3RwptTDJIeHBsWmRHdFphaXgzQWlFQTJyR1QwQUZPN0ZOK2xtczc3OGR4MGdTNHM4YUlybG1aZmdrcmZXZ2xpRkk9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUI0ekNDQVltZ0F3SUJBZ0lVRHZmc2V2SHBGN09iUmVBQW1HWFhISHNBWER3d0NnWUlLb1pJemowRUF3SXcKVWpFTE1Ba0dBMVVFQmhNQ1EwRXhEekFOQmdOVkJBY01CazkwZEdGM1lURVVNQklHQTFVRUNnd0xSV05zYVhCegpaU0JKYjFReERUQUxCZ05WQkFzTUJFaHZibTh4RFRBTEJnTlZCQU1NQkhKdmIzUXdIaGNOTWpJd01USTJNRGd3Ck5qQTNXaGNOTWpNd01USTJNRGd3TmpBM1dqQlFNUXN3Q1FZRFZRUUdFd0pEUVRFUE1BMEdBMVVFQnd3R1QzUjAKWVhkaE1SUXdFZ1lEVlFRS0RBdEZZMnhwY0hObElFbHZWREVOTUFzR0ExVUVDd3dFU0c5dWJ6RUxNQWtHQTFVRQpBd3dDWTJFd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFSUUFyTkZORjZ2WU5KU3lpaE1rallCCjNQWGdGdUUveXZiQ1VndU9temt3cjAxcklsWCtyL0VSeDZ3NGh3OVFxd2ZxUHJaMnoyUnYwNnRjeXJMUm5TMWcKb3o4d1BUQWRCZ05WSFE0RUZnUVVlVENtMDB0TWo5K2QvUGRFMlRTNTBHSHFLODB3RHdZRFZSMFRBUUgvQkFVdwpBd0VCL3pBTEJnTlZIUThFQkFNQ0FRWXdDZ1lJS29aSXpqMEVBd0lEU0FBd1JRSWhBSllVNmFyNEJBQnhTaUc3CmxKZTBnYm1tQUFuS1NkRS9pVGJzS01ibFIxOVJBaUE2aGFPK2xyOFlGTTlqaGF0Q1oyanZNTVhwOFBRVFlnK3YKOTkyeGtva21hUT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  adapter.credentials: dXNlcm5hbWU9Y29tbWFuZC1yb3V0ZXJASE9OTwpwYXNzd29yZD1jbWQtcm91dGVyLXNlY3JldAo=
  truststore.jks: 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
---
# Source: cloud2edge/charts/hono/templates/hono-service-device-registry-mongodb/hono-service-device-registry-secret.yaml
#
# Copyright (c) 2020, 2022 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
#
apiVersion: v1
kind: Secret
metadata:
  name: c2e-service-device-registry-conf
  namespace: cloud2edge
  labels:
    app.kubernetes.io/name: hono
    helm.sh/chart: hono-1.12.8
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: c2e
    app.kubernetes.io/version: 1.12.2
    app.kubernetes.io/component: service-device-registry
type: Opaque
stringData:
  logging-quarkus-prod.yml: |
    quarkus:
      log:
        category:
          "org.apache.kafka":
            level: ERROR
          "org.eclipse.hono":
            level: INFO
          "org.eclipse.hono.client.impl.HonoConnectionImpl":
            level: ERROR
    
  logging-quarkus-dev.yml: |
    quarkus:
      log:
        category:
          "io.netty.handler.logging.LoggingHandler":
            level: DEBUG
          "org.apache.kafka":
            level: INFO
          "org.eclipse.hono":
            level: DEBUG
          "org.infinispan":
            level: DEBUG
    
  logging-quarkus-trace.yml: |
    quarkus:
      log:
        category:
          "io.netty.handler.logging.LoggingHandler":
            level: DEBUG
          "org.apache.kafka":
            level: INFO
          "org.eclipse.hono":
            level: TRACE
          "org.infinispan":
            level: DEBUG
    
  application.yml: |
    hono:
      app:
        maxInstances: 1
      auth:
        host: "c2e-service-auth"
        port: 5671
        trustStorePath: "/etc/hono/trusted-certs.pem"
        hostnameVerificationRequired: false
        name: "Hono service-device-registry"
        supportedSaslMechanisms: "PLAIN"
        validation:
          certPath: "/etc/hono/auth-server-cert.pem"
        connectTimeout: 2000
      registry:
        amqp:
          bindAddress: "0.0.0.0"
          keyPath: "/etc/hono/key.pem"
          certPath: "/etc/hono/cert.pem"
        http:
          authenticationRequired: false
          bindAddress: "0.0.0.0"
          keyPath: "/etc/hono/key.pem"
          certPath: "/etc/hono/cert.pem"
          insecurePortEnabled: true
          insecurePortBindAddress: "0.0.0.0"
          deviceIdPattern: "^[a-zA-Z0-9-_\\.\\:]+$"
      mongodb:
        dbName: hono
        host: ditto-mongodb
        port: 27017
      messaging:
        name: Hono service-device-registry
        amqpHostname: hono-internal
        host: c2e-dispatch-router
        port: 5673
        keyPath: /etc/hono/key.pem
        certPath: /etc/hono/cert.pem
        trustStorePath: /etc/hono/trusted-certs.pem
        hostnameVerificationRequired: false
      healthCheck:
        insecurePort: 8088
        insecurePortBindAddress: "0.0.0.0"    
    quarkus:
      jaeger:
        service-name: "c2e-service-device-registry"
      log:
        console:
          color: true
        min-level: TRACE
        level: INFO
        category:
          "io.quarkus.jaeger":
            level: DEBUG
          "io.quarkus.vertx.core.runtime":
            level: DEBUG
      vertx:
        prefer-native-transport: true
        resolver:
          cache-max-time-to-live: 0
data:
  key.pem: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JR0hBZ0VBTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEJHMHdhd0lCQVFRZ3djVkovRnUzVnNHWURQS0MKbFhNVkNMMEtFSmxsVDgyQ0NxRVlPa2NEb0dxaFJBTkNBQVJxY2tjYzdaZFBRQnJEc3JEeUMwV2IyZXBoTWI4QwpSTW1RTi9RR0RxcmtpaVJ6ZktveU9vdktQNGtQOG5zVWRzQkN2VnBReWREbjFYVDkzR3pnL0dnOAotLS0tLUVORCBQUklWQVRFIEtFWS0tLS0tCg==
  cert.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNWVENDQWZ1Z0F3SUJBZ0lVQjJ2eFdJOXdqMzJPSExhQUJWVitpdVZrZFI0d0NnWUlLb1pJemowRUF3SXcKVURFTE1Ba0dBMVVFQmhNQ1EwRXhEekFOQmdOVkJBY01CazkwZEdGM1lURVVNQklHQTFVRUNnd0xSV05zYVhCegpaU0JKYjFReERUQUxCZ05WQkFzTUJFaHZibTh4Q3pBSkJnTlZCQU1NQW1OaE1CNFhEVEl5TURFeU5qQTRNRFl3Ck9Wb1hEVEl6TURFeU5qQTRNRFl3T1Zvd1hURUxNQWtHQTFVRUJoTUNRMEV4RHpBTkJnTlZCQWNNQms5MGRHRjMKWVRFVU1CSUdBMVVFQ2d3TFJXTnNhWEJ6WlNCSmIxUXhEVEFMQmdOVkJBc01CRWh2Ym04eEdEQVdCZ05WQkFNTQpEMlJsZG1salpTMXlaV2RwYzNSeWVUQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJHcHlSeHp0CmwwOUFHc095c1BJTFJadlo2bUV4dndKRXlaQTM5QVlPcXVTS0pITjhxakk2aThvL2lRL3lleFIyd0VLOVdsREoKME9mVmRQM2NiT0Q4YUR5amdhVXdnYUl3SFFZRFZSME9CQllFRkJRdlpKZE8ycmU3ZThpV0krTWgrWFM3RFp1RwpNQXNHQTFVZER3UUVBd0lEcURBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdWUVlEClZSMFJCRTR3VElJY2FHOXVieTF6WlhKMmFXTmxMV1JsZG1salpTMXlaV2RwYzNSeWVZSWhhRzl1YnkxelpYSjIKYVdObExXUmxkbWxqWlMxeVpXZHBjM1J5ZVM1b2IyNXZnZ2xzYjJOaGJHaHZjM1F3Q2dZSUtvWkl6ajBFQXdJRApTQUF3UlFJaEFPYThDdzJmeWgvYlFLdEc5U3dTZUtQdlE3RSsxV0VSSE44YlM0WThsVHpoQWlBTDZ3VVg2Uk5FCmxBQUVEL25sMG5kTFYzRDdxWGp3RFE4SElYU1RDYmo1T0E9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlCNHpDQ0FZbWdBd0lCQWdJVUR2ZnNldkhwRjdPYlJlQUFtR1hYSEhzQVhEd3dDZ1lJS29aSXpqMEVBd0l3ClVqRUxNQWtHQTFVRUJoTUNRMEV4RHpBTkJnTlZCQWNNQms5MGRHRjNZVEVVTUJJR0ExVUVDZ3dMUldOc2FYQnoKWlNCSmIxUXhEVEFMQmdOVkJBc01CRWh2Ym04eERUQUxCZ05WQkFNTUJISnZiM1F3SGhjTk1qSXdNVEkyTURndwpOakEzV2hjTk1qTXdNVEkyTURnd05qQTNXakJRTVFzd0NRWURWUVFHRXdKRFFURVBNQTBHQTFVRUJ3d0dUM1IwCllYZGhNUlF3RWdZRFZRUUtEQXRGWTJ4cGNITmxJRWx2VkRFTk1Bc0dBMVVFQ3d3RVNHOXViekVMTUFrR0ExVUUKQXd3Q1kyRXdXVEFUQmdjcWhrak9QUUlCQmdncWhrak9QUU1CQndOQ0FBUlFBck5GTkY2dllOSlN5aWhNa2pZQgozUFhnRnVFL3l2YkNVZ3VPbXprd3IwMXJJbFgrci9FUng2dzRodzlRcXdmcVByWjJ6MlJ2MDZ0Y3lyTFJuUzFnCm96OHdQVEFkQmdOVkhRNEVGZ1FVZVRDbTAwdE1qOStkL1BkRTJUUzUwR0hxSzgwd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QUxCZ05WSFE4RUJBTUNBUVl3Q2dZSUtvWkl6ajBFQXdJRFNBQXdSUUloQUpZVTZhcjRCQUJ4U2lHNwpsSmUwZ2JtbUFBbktTZEUvaVRic0tNYmxSMTlSQWlBNmhhTytscjhZRk05amhhdENaMmp2TU1YcDhQUVRZZyt2Cjk5Mnhrb2ttYVE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  trusted-certs.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUI0ekNDQVltZ0F3SUJBZ0lVRHZmc2V2SHBGN09iUmVBQW1HWFhISHNBWER3d0NnWUlLb1pJemowRUF3SXcKVWpFTE1Ba0dBMVVFQmhNQ1EwRXhEekFOQmdOVkJBY01CazkwZEdGM1lURVVNQklHQTFVRUNnd0xSV05zYVhCegpaU0JKYjFReERUQUxCZ05WQkFzTUJFaHZibTh4RFRBTEJnTlZCQU1NQkhKdmIzUXdIaGNOTWpJd01USTJNRGd3Ck5qQTNXaGNOTWpNd01USTJNRGd3TmpBM1dqQlFNUXN3Q1FZRFZRUUdFd0pEUVRFUE1BMEdBMVVFQnd3R1QzUjAKWVhkaE1SUXdFZ1lEVlFRS0RBdEZZMnhwY0hObElFbHZWREVOTUFzR0ExVUVDd3dFU0c5dWJ6RUxNQWtHQTFVRQpBd3dDWTJFd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFSUUFyTkZORjZ2WU5KU3lpaE1rallCCjNQWGdGdUUveXZiQ1VndU9temt3cjAxcklsWCtyL0VSeDZ3NGh3OVFxd2ZxUHJaMnoyUnYwNnRjeXJMUm5TMWcKb3o4d1BUQWRCZ05WSFE0RUZnUVVlVENtMDB0TWo5K2QvUGRFMlRTNTBHSHFLODB3RHdZRFZSMFRBUUgvQkFVdwpBd0VCL3pBTEJnTlZIUThFQkFNQ0FRWXdDZ1lJS29aSXpqMEVBd0lEU0FBd1JRSWhBSllVNmFyNEJBQnhTaUc3CmxKZTBnYm1tQUFuS1NkRS9pVGJzS01ibFIxOVJBaUE2aGFPK2xyOFlGTTlqaGF0Q1oyanZNTVhwOFBRVFlnK3YKOTkyeGtva21hUT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNlRENDQWgrZ0F3SUJBZ0lVYmM4RmY0SDZJWTd1MzE5czlZM3BhdlFHN28wd0NnWUlLb1pJemowRUF3SXcKVWpFTE1Ba0dBMVVFQmhNQ1EwRXhEekFOQmdOVkJBY01CazkwZEdGM1lURVVNQklHQTFVRUNnd0xSV05zYVhCegpaU0JKYjFReERUQUxCZ05WQkFzTUJFaHZibTh4RFRBTEJnTlZCQU1NQkhKdmIzUXdIaGNOTWpJd01USTJNRGd3Ck5qQTNXaGNOTWpNd01USTJNRGd3TmpBM1dqQlNNUXN3Q1FZRFZRUUdFd0pEUVRFUE1BMEdBMVVFQnd3R1QzUjAKWVhkaE1SUXdFZ1lEVlFRS0RBdEZZMnhwY0hObElFbHZWREVOTUFzR0ExVUVDd3dFU0c5dWJ6RU5NQXNHQTFVRQpBd3dFY205dmREQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJDbWV3ZGlyMFMvSDE1eVpDTHV5Cnk4dk1MQU53QWJYVFVBcFk5d1N4ZnE5M25XTzFEdm9VWFJqOCtaS2hNVTFXc2wzQVFhZWxVNXBUMmswWXJhMEYKV0dtamdkSXdnYzh3SFFZRFZSME9CQllFRkhnZ2R4OXFYMnZ1OXVGaUF2WER2WHhHMnZ2Sk1JR1BCZ05WSFNNRQpnWWN3Z1lTQUZIZ2dkeDlxWDJ2dTl1RmlBdlhEdlh4RzJ2dkpvVmFrVkRCU01Rc3dDUVlEVlFRR0V3SkRRVEVQCk1BMEdBMVVFQnd3R1QzUjBZWGRoTVJRd0VnWURWUVFLREF0RlkyeHBjSE5sSUVsdlZERU5NQXNHQTFVRUN3d0UKU0c5dWJ6RU5NQXNHQTFVRUF3d0VjbTl2ZElJVWJjOEZmNEg2SVk3dTMxOXM5WTNwYXZRRzdvMHdEd1lEVlIwVApBUUgvQkFVd0F3RUIvekFMQmdOVkhROEVCQU1DQVFZd0NnWUlLb1pJemowRUF3SURSd0F3UkFJZ0s4V29HSVlyCmJEZmRsMU5yUnpxUVpvbE5JRnQ0Tm45cWZWUU1WUHFuck1nQ0lHaFJjM1MxTFpSbHk2MU9JN2RzZHhqRVZaUkgKTkpBTUlqemNaSVRJdkNIMgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlGRmpDQ0F2NmdBd0lCQWdJUkFKRXJDRXJQREJpblUvYldMaVduWDFvd0RRWUpLb1pJaHZjTkFRRUxCUUF3ClR6RUxNQWtHQTFVRUJoTUNWVk14S1RBbkJnTlZCQW9USUVsdWRHVnlibVYwSUZObFkzVnlhWFI1SUZKbGMyVmgKY21Ob0lFZHliM1Z3TVJVd0V3WURWUVFERXd4SlUxSkhJRkp2YjNRZ1dERXdIaGNOTWpBd09UQTBNREF3TURBdwpXaGNOTWpVd09URTFNVFl3TURBd1dqQXlNUXN3Q1FZRFZRUUdFd0pWVXpFV01CUUdBMVVFQ2hNTlRHVjBKM01nClJXNWpjbmx3ZERFTE1Ba0dBMVVFQXhNQ1VqTXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUsKQW9JQkFRQzdBaFVvelBhZ2xOTVBFdXlOVlpMRCtJTHhtYVo2UW9pblhTYXF0U3U1eFV5eHI0NXIrWFhJbzljUApSNVFVVlRWWGpKNm9vamtaOVlJOFFxbE9idlU3d3k3YmpjQ3dYUE5aT09mdHoybndXZ3NidnNDVUpDV0gramR4CnN4UG5IS3pobSsvYjVEdEZVa1dXcWNGVHpqVElVdTYxcnUyUDNtQnc0cVZVcTdadERwZWxRRFJySzlPOFp1dG0KTkh6NmE0dVBWeW1aK0RBWFhicHliL3VCeGEzU2hsZzlGOGZuQ2J2eEsvZUczTUhhY1YzVVJ1UE1yU1hCaUx4ZwpaM1Ztcy9FWTk2SmM1bFAvT29pMlI2WC9FeGpxbUFsM1A1MVQrYzhCNWZXbWNCY1VyMk9rLzVtems1M2NVNmNHCi9raUZIYUZwcmlWMXV4UE1VZ1AxN1ZHaGk5c1ZBZ01CQUFHamdnRUlNSUlCQkRBT0JnTlZIUThCQWY4RUJBTUMKQVlZd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3SUdDQ3NHQVFVRkJ3TUJNQklHQTFVZEV3RUIvd1FJTUFZQgpBZjhDQVFBd0hRWURWUjBPQkJZRUZCUXVzeGUzV0ZiTHJsQUpRT1lmcjUyTEZNTEdNQjhHQTFVZEl3UVlNQmFBCkZIbTBXZVo3dHVYa0FYT0FDSWpJR2xqMjZadHVNRElHQ0NzR0FRVUZCd0VCQkNZd0pEQWlCZ2dyQmdFRkJRY3cKQW9ZV2FIUjBjRG92TDNneExta3ViR1Z1WTNJdWIzSm5MekFuQmdOVkhSOEVJREFlTUJ5Z0dxQVloaFpvZEhSdwpPaTh2ZURFdVl5NXNaVzVqY2k1dmNtY3ZNQ0lHQTFVZElBUWJNQmt3Q0FZR1o0RU1BUUlCTUEwR0N5c0dBUVFCCmd0OFRBUUVCTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElDQVFDRnlrNUhQcVAzaFVTRnZOVm5lTEtZWTYxMVRSNlcKUFRObGNsUXRnYURxdyszNElMOWZ6TGR3QUxkdU8vWmVsTjdrSUorbTc0dXlBK2VpdFJZOGtjNjA3VGtDNTN3bAppa2ZtWlc0L1J2VFo4TTZVSys1VXpoSzhqQ2RMdU1HWUw2S3Z6WEdSU2dpM3lMZ2pld1F0Q1BrSVZ6NkQyUVF6CkNrY2hlQW1DSjhNcXlKdTV6bHp5Wk1qQXZubkFUNDV0UkF4ZWtyc3U5NHNRNGVnZFJDbmJXU0R0WTdraCtCSW0KbEpOWG9CMWxCTUVLSXE0UURVT1hvUmdmZnVEZ2hqZTFXckc5TUwrSGJpc3EveUZPR3dYRDlSaVg4RjZzdzZXNAphdkF1dkRzenVlNUwzc3o4NUsrRUM0WS93RlZETnZabzRUWVhhbzZaMGYrbFFLYzB0OERRWXprMU9YVnU4cnAyCnlKTUM2YWxMYkJmT0RBTFp2WUg3bjdkbzFBWmxzNEk5ZDFQNGpua0RyUW94QjNVcVE5aFZsM0xFS1E3M3hGMU8KeUs1R2hERFg4b1ZmR0tGNXUrZGVjSXNINFlhVHc3bVAzR0Z4SlNxdjMrMGxVRkpvaTVMYzVkYTE0OXA5MElkcwpoQ0V4cm9MMSs3bXJ5SWtYUGVGTTVUZ085cjBydlphQkZPdlYyejBncDM1WjArTDRXUGxidUVqTi9seFBGaW4rCkhsVWpyOGdSc0kzcWZKT1FGeS85cktJSlIwWS84T213dC84b1RXZ3kxbWRlSG1tams3ajFuWXN2QzlKU1E2WnYKTWxkbFRUS0IzemhUaFYxK1hXWXA2cmpkNUpXMXpiVldFa0xOeEU3R0pUaEVVRzNzemdCVkdQN3BTV1RVVHNxWApuTFJid0hPb3E3aEh3Zz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZhekNDQTFPZ0F3SUJBZ0lSQUlJUXo3RFNRT05aUkdQZ3UyT0Npd0F3RFFZSktvWklodmNOQVFFTEJRQXcKVHpFTE1Ba0dBMVVFQmhNQ1ZWTXhLVEFuQmdOVkJBb1RJRWx1ZEdWeWJtVjBJRk5sWTNWeWFYUjVJRkpsYzJWaApjbU5vSUVkeWIzVndNUlV3RXdZRFZRUURFd3hKVTFKSElGSnZiM1FnV0RFd0hoY05NVFV3TmpBME1URXdORE00CldoY05NelV3TmpBME1URXdORE00V2pCUE1Rc3dDUVlEVlFRR0V3SlZVekVwTUNjR0ExVUVDaE1nU1c1MFpYSnUKWlhRZ1UyVmpkWEpwZEhrZ1VtVnpaV0Z5WTJnZ1IzSnZkWEF4RlRBVEJnTlZCQU1UREVsVFVrY2dVbTl2ZENCWQpNVENDQWlJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dJUEFEQ0NBZ29DZ2dJQkFLM29KSFAwRkRmem01NHJWeWdjCmg3N2N0OTg0a0l4dVBPWlhvSGozZGNLaS92VnFidllBVHlqYjNtaUdiRVNUdHJGai9SUVNhNzhmMHVveG15RisKMFRNOHVrajEzWG5mczdqL0V2RWhta3ZCaW9aeGFVcG1abXlQZmp4d3Y2MHBJZ2J6NU1EbWdLN2lTNCszbVg2VQpBNS9UUjVkOG1VZ2pVK2c0cms4S2I0TXUwVWxYaklCMHR0b3YwRGlOZXdOd0lSdDE4akE4K28rdTNkcGpxK3NXClQ4S09FVXQrend2by83VjNMdlN5ZTByZ1RCSWxESENOQXltZzRWTWs3QlBaN2htL0VMTktqRCtKbzJGUjNxeUgKQjVUMFkzSHNMdUp2VzVpQjRZbGNOSGxzZHU4N2tHSjU1dHVrbWk4bXhkQVE0UTdlMlJDT0Z2dTM5NmozeCtVQwpCNWlQTmdpVjUrSTNsZzAyZFo3N0RuS3hIWnU4QS9sSkJkaUIzUVcwS3RaQjZhd0JkcFVLRDlqZjFiMFNIelV2CktCZHMwcGpCcUFsa2QyNUhON3JPckZsZWFKMS9jdGFKeFFaQktUNVpQdDBtOVNUSkVhZGFvMHhBSDBhaG1iV24KT2xGdWhqdWVmWEtuRWdWNFdlMCtVWGdWQ3dPUGpkQXZCYkkrZTBvY1MzTUZFdnpHNnVCUUUzeERrM1N6eW5UbgpqaDhCQ05BdzFGdHhOclFIdXNFd01GeEl0NEk3bUtaOVlJcWlveW1DekxxOWd3UWJvb01EUWFIV0JmRWJ3cmJ3CnFIeUdPMGFvU0NxSTNIYWFkcjhmYXFVOUdZL3JPUE5rM3NnckRRb28vL2ZiNGhWQzFDTFFKMTNoZWY0WTUzQ0kKclU3bTJZczZ4dDBuVVc3L3ZHVDFNME5QQWdNQkFBR2pRakJBTUE0R0ExVWREd0VCL3dRRUF3SUJCakFQQmdOVgpIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJSNXRGbm1lN2JsNUFGemdBaUl5QnBZOXVtYmJqQU5CZ2txCmhraUc5dzBCQVFzRkFBT0NBZ0VBVlI5WXFieXlxRkRRRExIWUdta2dKeWtJckdGMVhJcHUrSUxsYVMvVjlsWkwKdWJoekVGblRJWmQrNTB4eCs3TFNZSzA1cUF2cUZ5RldoZkZRRGxucnp1Qlo2YnJKRmUrR25ZK0VnUGJrNlpHUQozQmViWWh0RjhHYVYwbnh2d3VvNzd4L1B5OWF1Si9HcHNNaXUvWDErbXZvaUJPdi8yWC9xa1NzaXNSY09qL0tLCk5GdFkyUHdCeVZTNXVDYk1pb2d6aVV3dGhEeUMzKzZXVndXNkxMdjN4TGZIVGp1Q3ZqSElJbk56a3RIQ2dLUTUKT1JBekk0Sk1QSitHc2xXWUhiNHBob3dpbTU3aWF6dFhPb0p3VGR3Sng0bkxDZ2ROYk9oZGpzbnZ6cXZIdTdVcgpUa1hXU3RBbXpPVnl5Z2hxcFpYakZhSDNwTzNKTEYrbCsvK3NLQUl1dnRkN3UrTnhlNUFXMHdkZVJsTjhOd2RDCmpOUEVscHpWbWJVcTRKVWFnRWl1VERrSHpzeEhwRktWSzdxNCs2M1NNMU45NVIxTmJkV2hzY2RDYitaQUp6VmMKb3lpM0I0M25qVE9RNXlPZisxQ2NlV3hHMWJRVnM1WnVmcHNNbGpxNFVpMC8xbHZoK3dqQ2hQNGtxS09KMnF4cQo0Umdxc2FoRFlWdlRIOXc3alhieUxlaU5kZDhYTTJ3OVUvdDd5MEZmLzl5aTBHRTQ0WmE0ckYyTE45ZDExVFBBCm1SR3VuVUhCY25XRXZnSkJRbDluSkVpVTBac252Z2MvdWJoUGdYUlI0WHEzN1owajRyN2cxU2dFRXp3eEE1N2QKZW15UHhnY1l4bi9lUjQ0L0tKNEVCcytsVkRSM3ZleUptK2tYUTk5YjIxLytqaDVYb3MxQW5YNWlJdHJlR0NjPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  auth-server-cert.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNPekNDQWVHZ0F3SUJBZ0lVQjJ2eFdJOXdqMzJPSExhQUJWVitpdVZrZFIwd0NnWUlLb1pJemowRUF3SXcKVURFTE1Ba0dBMVVFQmhNQ1EwRXhEekFOQmdOVkJBY01CazkwZEdGM1lURVVNQklHQTFVRUNnd0xSV05zYVhCegpaU0JKYjFReERUQUxCZ05WQkFzTUJFaHZibTh4Q3pBSkJnTlZCQU1NQW1OaE1CNFhEVEl5TURFeU5qQTRNRFl3Ck9Wb1hEVEl6TURFeU5qQTRNRFl3T1Zvd1dURUxNQWtHQTFVRUJoTUNRMEV4RHpBTkJnTlZCQWNNQms5MGRHRjMKWVRFVU1CSUdBMVVFQ2d3TFJXTnNhWEJ6WlNCSmIxUXhEVEFMQmdOVkJBc01CRWh2Ym04eEZEQVNCZ05WQkFNTQpDMkYxZEdndGMyVnlkbVZ5TUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0RRZ0FFakxUV25UcGh3Q1cwCnMwWHp3VGpSNUpqbkQxRHBoVVdSMnVockdka3BQVFBqd1RrLzRscTdkSEJqVE81M2xQakR6NENmRDlZTnBtR0wKQmN6QVo0NzcyNk9CanpDQmpEQWRCZ05WSFE0RUZnUVVoR0FiZTlzRS9KY3VKanB4b1J5L2prQ0RDVWt3Q3dZRApWUjBQQkFRREFnT29NQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBL0JnTlZIUkVFCk9EQTJnaEZvYjI1dkxYTmxjblpwWTJVdFlYVjBhSUlXYUc5dWJ5MXpaWEoyYVdObExXRjFkR2d1YUc5dWI0SUoKYkc5allXeG9iM04wTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDSUVCaGVWaXN1Ky9pSlI2NUlDSlpZTUhUTEQ3RwptTDJIeHBsWmRHdFphaXgzQWlFQTJyR1QwQUZPN0ZOK2xtczc3OGR4MGdTNHM4YUlybG1aZmdrcmZXZ2xpRkk9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUI0ekNDQVltZ0F3SUJBZ0lVRHZmc2V2SHBGN09iUmVBQW1HWFhISHNBWER3d0NnWUlLb1pJemowRUF3SXcKVWpFTE1Ba0dBMVVFQmhNQ1EwRXhEekFOQmdOVkJBY01CazkwZEdGM1lURVVNQklHQTFVRUNnd0xSV05zYVhCegpaU0JKYjFReERUQUxCZ05WQkFzTUJFaHZibTh4RFRBTEJnTlZCQU1NQkhKdmIzUXdIaGNOTWpJd01USTJNRGd3Ck5qQTNXaGNOTWpNd01USTJNRGd3TmpBM1dqQlFNUXN3Q1FZRFZRUUdFd0pEUVRFUE1BMEdBMVVFQnd3R1QzUjAKWVhkaE1SUXdFZ1lEVlFRS0RBdEZZMnhwY0hObElFbHZWREVOTUFzR0ExVUVDd3dFU0c5dWJ6RUxNQWtHQTFVRQpBd3dDWTJFd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFSUUFyTkZORjZ2WU5KU3lpaE1rallCCjNQWGdGdUUveXZiQ1VndU9temt3cjAxcklsWCtyL0VSeDZ3NGh3OVFxd2ZxUHJaMnoyUnYwNnRjeXJMUm5TMWcKb3o4d1BUQWRCZ05WSFE0RUZnUVVlVENtMDB0TWo5K2QvUGRFMlRTNTBHSHFLODB3RHdZRFZSMFRBUUgvQkFVdwpBd0VCL3pBTEJnTlZIUThFQkFNQ0FRWXdDZ1lJS29aSXpqMEVBd0lEU0FBd1JRSWhBSllVNmFyNEJBQnhTaUc3CmxKZTBnYm1tQUFuS1NkRS9pVGJzS01ibFIxOVJBaUE2aGFPK2xyOFlGTTlqaGF0Q1oyanZNTVhwOFBRVFlnK3YKOTkyeGtva21hUT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  truststore.jks: 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
---
# Source: cloud2edge/templates/permissions-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: "permissions"
  namespace: cloud2edge
  labels:
    app.kubernetes.io/name: cloud2edge
    helm.sh/chart: cloud2edge-0.2.4
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: c2e
    app.kubernetes.io/version: 0.2.4
type: Opaque
stringData:
  permissions.json: |
    {
      "roles": {
        "protocol-adapter": [
          {
            "resource": "telemetry/*",
            "activities": [ "WRITE" ]
          },
          {
            "resource": "event/*",
            "activities": [ "WRITE" ]
          },
          {
            "resource": "registration/*",
            "activities": [ "READ", "WRITE" ]
          },
          {
            "operation": "registration/*:assert",
            "activities": [ "EXECUTE" ]
          },
          {
            "operation": "registration/*:get",
            "activities": [ "EXECUTE" ]
          },
          {
            "resource": "credentials/*",
            "activities": [ "READ", "WRITE" ]
          },
          {
            "operation": "credentials/*:get",
            "activities": [ "EXECUTE" ]
          },
          {
            "resource": "tenant",
            "activities": [ "READ", "WRITE" ]
          },
          {
            "operation": "tenant/*:*",
            "activities": [ "EXECUTE" ]
          },
          {
            "resource": "cmd_router/*",
            "activities": [ "READ", "WRITE" ]
          },
          {
            "operation": "cmd_router/*:*",
            "activities": [ "EXECUTE" ]
          },
          {
            "resource": "device_con/*",
            "activities": [ "READ", "WRITE" ]
          },
          {
            "operation": "device_con/*:*",
            "activities": [ "EXECUTE" ]
          }
        ],
        "command-router": [
          {
            "resource": "tenant",
            "activities": [ "READ", "WRITE" ]
          },
          {
            "operation": "tenant/*:*",
            "activities": [ "EXECUTE" ]
          },
          {
            "resource": "registration/*",
            "activities": [ "READ", "WRITE" ]
          },
          {
            "operation": "registration/*:*",
            "activities": [ "EXECUTE" ]
          }
        ],
        "device-manager": [
          {
            "resource": "registration/*",
            "activities": [ "READ", "WRITE" ]
          },
          {
            "operation": "registration/*:*",
            "activities": [ "EXECUTE" ]
          }
        ],
        "application_all_tenants": [
          {
            "resource": "telemetry/*",
            "activities": [ "READ" ]
          },
          {
            "resource": "event/*",
            "activities": [ "READ" ]
          },
          {
            "resource": "command/*",
            "activities": [ "WRITE" ]
          },
          {
            "resource": "command_response/*",
            "activities": [ "READ" ]
          }
        ],
        "application_c2e": [
          {
            "resource": "telemetry/org.eclipse.packages.c2e",
            "activities": [ "READ" ]
          },
          {
            "resource": "event/org.eclipse.packages.c2e",
            "activities": [ "READ" ]
          },
          {
            "resource": "command/org.eclipse.packages.c2e",
            "activities": [ "WRITE" ]
          },
          {
            "resource": "command_response/org.eclipse.packages.c2e/*",
            "activities": [ "READ" ]
          }
        ]
      },
      "users": {
        "coap-adapter@HONO": {
          "mechanism": "PLAIN",
          "password": "coap-secret",
          "authorities": [ "hono-component", "protocol-adapter" ]
        },
        "http-adapter@HONO": {
          "mechanism": "PLAIN",
          "password": "http-secret",
          "authorities": [ "hono-component", "protocol-adapter" ]
        },
        "lora-adapter@HONO": {
          "mechanism": "PLAIN",
          "password": "lora-secret",
          "authorities": [ "hono-component", "protocol-adapter" ]
        },
        "mqtt-adapter@HONO": {
          "mechanism": "PLAIN",
          "password": "mqtt-secret",
          "authorities": [ "hono-component", "protocol-adapter" ]
        },
        "amqp-adapter@HONO": {
          "mechanism": "PLAIN",
          "password": "amqp-secret",
          "authorities": [ "hono-component", "protocol-adapter" ]
        },
        "kura-adapter@HONO": {
          "mechanism": "PLAIN",
          "password": "kura-secret",
          "authorities": [ "hono-component", "protocol-adapter" ]
        },
        "command-router@HONO": {
          "mechanism": "PLAIN",
          "password": "cmd-router-secret",
          "authorities": [ "hono-component", "command-router" ]
        },
        "hono-client@HONO": {
          "mechanism": "PLAIN",
          "password": "secret",
          "authorities": [ "protocol-adapter", "device-manager" ]
        },
        "device-registry": {
          "mechanism": "EXTERNAL",
          "authorities": []
        },
        "consumer@HONO": {
          "mechanism": "PLAIN",
          "password": "verysecret",
          "authorities": [ "application_all_tenants" ]
        },
        "ditto-c2e": {
          "mechanism": "PLAIN",
          "password": "verysecret",
          "authorities": [ "application_c2e" ]
        }
      }
    }
---
# Source: cloud2edge/templates/post-install-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: "c2e-post-install-data"
  namespace: cloud2edge
  labels:
    app.kubernetes.io/name: cloud2edge
    helm.sh/chart: cloud2edge-0.2.4
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: c2e
    app.kubernetes.io/version: 0.2.4
type: Opaque
stringData:
  demo-device-thing.json: |
    {
        "_policy": {
            "entries": {
                "DEFAULT": {
                    "subjects": {
                        "nginx:ditto": {
                            "type": "Ditto user authenticated via nginx"
                        }
                    },
                    "resources": {
                        "thing:/": {
                            "grant": ["READ", "WRITE"],
                            "revoke": []
                        },
                        "policy:/": {
                            "grant": ["READ", "WRITE"],
                            "revoke": []
                        },
                        "message:/": {
                            "grant": ["READ", "WRITE"],
                            "revoke": []
                        }
                    }
                },
                "HONO": {
                    "subjects": {
                        "pre-authenticated:hono-connection": {
                            "type": "Connection to Eclipse Hono"
                        }
                    },
                    "resources": {
                        "thing:/": {
                            "grant": ["READ", "WRITE"],
                            "revoke": []
                        },
                        "message:/": {
                            "grant": ["READ", "WRITE"],
                            "revoke": []
                        }
                    }
                }
            }
        },
        "attributes": {
            "location": "Germany"
        },
        "features": {
            "temperature": {
                "properties": {
                    "value": null
                }
            },
            "humidity": {
                "properties": {
                    "value": null
                }
            }
        }
    }
    
  hono-amqp-connection.json: |
    {
      "targetActorSelection": "/system/sharding/connection",
      "headers": {
        "aggregate": false
      },
      "piggybackCommand": {
        "type": "connectivity.commands:createConnection",
        "connection": {
          "id": "eclipse-hono-via-amqp-10",
          "connectionType": "amqp-10",
          "connectionStatus": "open",
          "uri": "amqp://ditto-c2e:verysecret@c2e-dispatch-router-ext:15672",
          "failoverEnabled": true,
          "sources": [
            {
              "addresses": [
                "telemetry/org.eclipse.packages.c2e",
                "event/org.eclipse.packages.c2e"
              ],
              "authorizationContext": [
                "pre-authenticated:hono-connection"
              ],
              "enforcement": {
                "input": "{{ header:device_id }}",
                "filters": [
                  "{{ entity:id }}"
                ]
              },
              "headerMapping": {
                "hono-device-id": "{{ header:device_id }}",
                "content-type": "{{ header:content-type }}"
              },
              "replyTarget": {
                "enabled": true,
                "address": "{{ header:reply-to }}",
                "headerMapping": {
                  "to": "command/org.eclipse.packages.c2e/{{ header:hono-device-id }}",
                  "subject": "{{ header:subject | fn:default(topic:action-subject) | fn:default(topic:criterion) }}-response",
                  "correlation-id": "{{ header:correlation-id }}",
                  "content-type": "{{ header:content-type | fn:default('application/vnd.eclipse.ditto+json') }}"
                },
                "expectedResponseTypes": [
                  "response",
                  "error"
                ]
              },
              "acknowledgementRequests": {
                "includes": [],
                "filter": "fn:filter(header:qos,'eq','1')"
              }
            },
            {
              "addresses": [
                "command_response/org.eclipse.packages.c2e/replies"
              ],
              "authorizationContext": [
                "pre-authenticated:hono-connection"
              ],
              "headerMapping": {
                "content-type": "{{ header:content-type }}",
                "correlation-id": "{{ header:correlation-id }}",
                "status": "{{ header:status }}"
              },
              "replyTarget": {
                "enabled": false,
                "expectedResponseTypes": [
                  "response",
                  "error"
                ]
              }
            }
          ],
          "targets": [
            {
              "address": "command/org.eclipse.packages.c2e",
              "authorizationContext": [
                "pre-authenticated:hono-connection"
              ],
              "topics": [
                "_/_/things/live/commands",
                "_/_/things/live/messages"
              ],
              "headerMapping": {
                "to": "command/org.eclipse.packages.c2e/{{ thing:id }}",
                "subject": "{{ header:subject | fn:default(topic:action-subject) }}",
                "content-type": "{{ header:content-type | fn:default('application/vnd.eclipse.ditto+json') }}",
                "correlation-id": "{{ header:correlation-id }}",
                "reply-to": "{{ fn:default('command_response/org.eclipse.packages.c2e/replies') | fn:filter(header:response-required,'ne','false') }}"
              }
            },
            {
              "address": "command/org.eclipse.packages.c2e",
              "authorizationContext": [
                "pre-authenticated:hono-connection"
              ],
              "topics": [
                "_/_/things/twin/events",
                "_/_/things/live/events"
              ],
              "headerMapping": {
                "to": "command/org.eclipse.packages.c2e/{{ thing:id }}",
                "subject": "{{ header:subject | fn:default(topic:action-subject) }}",
                "content-type": "{{ header:content-type | fn:default('application/vnd.eclipse.ditto+json') }}",
                "correlation-id": "{{ header:correlation-id }}"
              }
            }
          ]
        }
      }
    }
    
  demo-device-credentials.json: |
    [
      {
        "type": "hashed-password",
        "auth-id": "demo-device",
        "enabled": true,
        "secrets": [
          {
            "comment": "pwd: demo-secret",
            "pwd-plain": "demo-secret"
          }
        ]
      },
      {
        "type": "psk",
        "auth-id": "demo-device",
        "enabled": true,
        "secrets": [
          {
            "comment": "pwd: demo-secret",
            "key": "ZGVtby1zZWNyZXQ="
          }
        ]
      }
    ]
---
# Source: cloud2edge/charts/ditto/templates/nginx-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: c2e-nginx-config-ditto-down-svg
  labels:
    app.kubernetes.io/name: ditto-nginx-config
    helm.sh/chart: ditto-2.4.0
    app.kubernetes.io/instance: c2e
    app.kubernetes.io/version: "2.4.0"
    app.kubernetes.io/managed-by: Helm
data:
  ditto-down.svg: |-
    <?xml version="1.0" encoding="UTF-8" standalone="no"?>
    <!-- Created with Inkscape (http://www.inkscape.org/) -->
    
    <svg
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:cc="http://creativecommons.org/ns#"
            xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
            xmlns="http://www.w3.org/2000/svg"
            xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
            xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
            width="64px"
            height="64px"
            viewBox="0 0 64 64"
            version="1.1"
            id="SVGRoot"
            inkscape:version="0.92.1 r15371"
            sodipodi:docname="ditto-sandbox-down.svg">
      <sodipodi:namedview
         id="base"
         pagecolor="#ffffff"
         bordercolor="#666666"
         borderopacity="1.0"
         inkscape:pageopacity="0.0"
         inkscape:pageshadow="2"
         inkscape:zoom="4"
         inkscape:cx="36.5"
         inkscape:cy="32"
         inkscape:document-units="px"
         inkscape:current-layer="layer1"
         showgrid="false"
         inkscape:window-width="1600"
         inkscape:window-height="1137"
         inkscape:window-x="3832"
         inkscape:window-y="-8"
         inkscape:window-maximized="1"
         inkscape:grid-bbox="true" />
      <defs
         id="defs4485" />
      <metadata
         id="metadata4488">
        <rdf:RDF>
          <cc:Work
             rdf:about="">
            <dc:format>image/svg+xml</dc:format>
            <dc:type
               rdf:resource="http://purl.org/dc/dcmitype/StillImage" />
            <dc:title></dc:title>
          </cc:Work>
        </rdf:RDF>
      </metadata>
      <g
         id="layer1"
         inkscape:groupmode="layer"
         inkscape:label="Layer 1">
        <circle
           style="opacity:1;fill:#3a8c9a;fill-opacity:1;stroke:none;stroke-width:5.99148989;stroke-linecap:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;paint-order:stroke fill markers"
           id="path5283"
           cx="32.187649"
           cy="32"
           r="31.999998" />
        <g
           id="g6928-2-3"
           transform="matrix(0.4753937,0,0,0.4753937,-13.450147,-13.637795)"
           style="fill:#ffffff;fill-opacity:1"
           inkscape:export-xdpi="96"
           inkscape:export-ydpi="96">
          <g
             id="g6926-1-4"
             style="fill:#ffffff;fill-opacity:1">
            <path
               id="path6924-2-3"
               d="m 103.1,128.9 c 0,3.9 -3.2,7.1 -7.1,7.1 -4,0 -7.1,-3.1 -7.1,-7.1 0,-4 3.1,-7.1 7.1,-7.1 3.9,0 7.1,3.2 7.1,7.1 z M 90.9,80.9 V 56 h 10.2 v 24.9 l -2.7,30.7 h -4.9 z"
               inkscape:connector-curvature="0"
               style="fill:#ffffff;fill-opacity:1" />
          </g>
        </g>
      </g>
    </svg>
---
# Source: cloud2edge/charts/ditto/templates/nginx-config.yaml
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: c2e-nginx-config-ditto-up-svg
  labels:
    app.kubernetes.io/name: ditto-nginx-config
    helm.sh/chart: ditto-2.4.0
    app.kubernetes.io/instance: c2e
    app.kubernetes.io/version: "2.4.0"
    app.kubernetes.io/managed-by: Helm
data:
  ditto-up.svg: |-
    <?xml version="1.0" encoding="UTF-8" standalone="no"?>
    <!-- Created with Inkscape (http://www.inkscape.org/) -->
    
    <svg
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:cc="http://creativecommons.org/ns#"
            xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
            xmlns="http://www.w3.org/2000/svg"
            xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
            xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
            width="64px"
            height="64px"
            viewBox="0 0 64 64"
            version="1.1"
            id="SVGRoot"
            inkscape:version="0.92.1 r15371"
            sodipodi:docname="ditto-sandbox-up.svg">
      <sodipodi:namedview
         id="base"
         pagecolor="#ffffff"
         bordercolor="#666666"
         borderopacity="1.0"
         inkscape:pageopacity="0.0"
         inkscape:pageshadow="2"
         inkscape:zoom="4"
         inkscape:cx="36.5"
         inkscape:cy="32"
         inkscape:document-units="px"
         inkscape:current-layer="layer1"
         showgrid="false"
         inkscape:window-width="1600"
         inkscape:window-height="1137"
         inkscape:window-x="3832"
         inkscape:window-y="-8"
         inkscape:window-maximized="1"
         inkscape:grid-bbox="true" />
      <defs
         id="defs4485" />
      <metadata
         id="metadata4488">
        <rdf:RDF>
          <cc:Work
             rdf:about="">
            <dc:format>image/svg+xml</dc:format>
            <dc:type
               rdf:resource="http://purl.org/dc/dcmitype/StillImage" />
            <dc:title></dc:title>
          </cc:Work>
        </rdf:RDF>
      </metadata>
      <g
         id="layer1"
         inkscape:groupmode="layer"
         inkscape:label="Layer 1">
        <circle
           style="opacity:1;fill:#3a8c9a;fill-opacity:1;stroke:none;stroke-width:5.99148989;stroke-linecap:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;paint-order:stroke fill markers"
           id="path5283"
           cx="32.25"
           cy="32.25"
           r="31.999998" />
        <polygon
           points="129.2,69.2 84,114.3 62.8,93.2 57.2,98.8 84,125.7 134.8,74.8 "
           id="polygon2339-8-2-8-5-2"
           style="fill:#ffffff;fill-opacity:1;stroke:#008ecf;stroke-opacity:1"
           transform="matrix(0.39751555,0,0,0.39751555,-5.911566,-6.488167)" />
      </g>
    </svg>
---
# Source: cloud2edge/charts/ditto/templates/nginx-config.yaml
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: c2e-nginx-config-index-html
  labels:
    app.kubernetes.io/name: ditto-nginx-config
    helm.sh/chart: ditto-2.4.0
    app.kubernetes.io/instance: c2e
    app.kubernetes.io/version: "2.4.0"
    app.kubernetes.io/managed-by: Helm
data:
  index.html: |-
    <!doctype html>
    <!--
      ~ Copyright (c) 2019 Contributors to the Eclipse Foundation
      ~
      ~ See the NOTICE file(s) distributed with this work for additional
      ~ information regarding copyright ownership.
      ~
      ~ This program and the accompanying materials are made available under the
      ~ terms of the Eclipse Public License 2.0 which is available at
      ~ http://www.eclipse.org/legal/epl-2.0
      ~
      ~ SPDX-License-Identifier: EPL-2.0
      -->
    <html>
    <head>
      <title>Welcome to Eclipse Ditto</title>
    
      <script src="//cdnjs.cloudflare.com/ajax/libs/jquery/2.1.4/jquery.min.js"></script>
    
      <style>
        body {
          text-align: center;
          padding: 150px;
        }
    
        h1 {
          font-size: 50px;
        }
    
        body {
          font: 20px Helvetica, sans-serif;
          color: #333;
        }
    
        article {
          display: block;
          text-align: left;
          width: 750px;
          margin: 0 auto;
        }
    
        a {
          color: #dc8100;
          text-decoration: none;
        }
    
        a:hover {
          color: #333;
          text-decoration: none;
        }
    
        .stats {
          line-height: 3em;
        }
    
        .stats-count {
          font: normal 2em Abel;
          color: #3a8c9a;
          font-weight: bold;
          text-align: center;
          margin: 5px;
          clear: left;
          float: left;
          width: 5em;
          background-color: lightgray;
        }
    
        .stats-count-text {
          padding-left: 1em;
          vertical-align: middle;
        }
    
        .health {
          background-size: contain;
          height: 30px;
          width: 30px;
          float: left;
        }
    
        .health-up {
          background-image: url(ditto-up.svg);
        }
    
        .health-down {
          background-image: url(ditto-down.svg);
        }
    
        .health-list li {
          clear: both;
          line-height: 30px;
          padding-bottom: 5px;
        }
    
        .health-key {
          float: left;
          width: 9em;
        }
    
        .health-status {
          line-height: 30px;
          padding-left: 1em;
        }
      </style>
    </head>
    <body>
    
    <article>
      <h1>You have started Eclipse Ditto</h1>
      <div>
        <p>Thank you for trying out Eclipse Ditto!</p>
        <p>For more information about how to start, please consult the
          <a href="https://www.eclipse.org/ditto/intro-hello-world.html">Ditto documentation intro</a> and/or the
          <a href="https://www.eclipse.org/ditto/http-api-doc.html">Ditto HTTP API documentation</a>.
        </p>
        <p>In order to get started quickly and if you started the local swagger-ui, you can now have a look at the OpenAPI documentation for
        <ul>
          <li><a href="/apidoc/2">API version 2</a></li>
        </ul>
        <p>Try out the HTTP APIs by using username "ditto" and password "ditto" when asked for by your browser.</p>
        <p>&mdash; the Ditto team</p>
      </div>
      <h2 style="clear: both">Health</h2>
      <div id="health-content">
      </div>
      <h2>Statistics</h2>
      <div>
        <div class="stats">
          <span id="total-things-count" class="stats-count"></span><span
          class="stats-count-text"> persisted <em>Things</em></span>
        </div>
        <div class="stats">
          <span id="hot-things-count" class="stats-count"></span><span class="stats-count-text"> currently "hot" <em>Things</em> (accessed within the last 2 hours)</span>
        </div>
      </div>
    </article>
    
    <script>
      function update_count(selector, count) {
        $(selector).animate({
                              counter: count
                            }, {
                              duration: 3000,
                              easing: 'swing',
                              step: function (now) {
                                $(this).text(Math.ceil(now));
                              }
                            });
      }
    
      $.getJSON("/stats/search", function (data) {
        let allThingsCount = data.allThingsCount;
        update_count('#total-things-count', allThingsCount);
      }).fail(function () {
        update_count('#total-things-count', 0);
      });
      $.getJSON("/stats/things", function (data) {
        let hotThings = data.hotThings;
        update_count('#hot-things-count', hotThings);
      }).fail(function () {
        update_count('#hot-things-count', 0);
      });
    
      function calcHealthStatusClass(status) {
        let healthStatusClass;
        if (status === "UP") {
          healthStatusClass = "health-up";
        } else if (status === "DOWN") {
          healthStatusClass = "health-down";
        } else {
          healthStatusClass = "health-down";
        }
        return healthStatusClass;
      }
    
      $.getJSON("/status/health", function (data) {
        const keysToIgnore = ['status', 'thing-cache-aware', 'dc-default', 'policy-cache-aware', 'blocked-namespaces-aware'];
        let overallStatus = data.status;
        $(`<p>
                <span class="health-key"></span>
                <span class="health ${calcHealthStatusClass(overallStatus)}"></span>
                <span class="health-status">${overallStatus}</span>
            </p>`).appendTo("#health-content");
    
        let items = [];
        $.each(data.children, function (idx, child) {
          if (keysToIgnore.includes(child.label)) {
            // ignore
          } else {
            items.push(`<li>
                        <span class="health-key">${child.label}:</span>
                        <span class="health ${calcHealthStatusClass(child.status)}"></span>
                        <span class="health-status">${child.status}</span>
                    </li>`);
          }
        });
    
        $("<ul/>", {
          "class": "health-list",
          html: items.join("")
        }).appendTo("#health-content");
      }).fail(function () {
        $(`<p>
                <span class="health-key"></span>
                <span class="health health-down"></span>
                <span class="health-status">COULD NOT BE DETERMINED</span>
            </p>`).appendTo("#health-content");
      })
    </script>
    
    </body>
    </html>
---
# Source: cloud2edge/charts/ditto/templates/nginx-config.yaml
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: c2e-nginx-config-nginx-cors-conf
  labels:
    app.kubernetes.io/name: ditto-nginx-config
    helm.sh/chart: ditto-2.4.0
    app.kubernetes.io/instance: c2e
    app.kubernetes.io/version: "2.4.0"
    app.kubernetes.io/managed-by: Helm
data:
  nginx-cors.conf: |-
    # Copyright (c) 2019 Contributors to the Eclipse Foundation
    #
    # See the NOTICE file(s) distributed with this work for additional
    # information regarding copyright ownership.
    #
    # This program and the accompanying materials are made available under the
    # terms of the Eclipse Public License 2.0 which is available at
    # http://www.eclipse.org/legal/epl-2.0
    #
    # SPDX-License-Identifier: EPL-2.0
    
    #
    # CORS header support
    #
    # As of Nginx 1.7.5, add_header supports an "always" parameter which
    # allows CORS to work if the backend returns 4xx or 5xx status code.
    #
    # For more information on CORS, please see: http://enable-cors.org/
    # From this Gist: https://gist.github.com/Stanback/7145487
    # And this: https://gist.github.com/pauloricardomg/7084524
    #
    
    set $cors '1';
    
    # OPTIONS indicates a CORS pre-flight request
    if ($request_method = 'OPTIONS') {
      set $cors "${cors}o";
    }
    
    if ($cors = '1') {
      add_header 'Access-Control-Allow-Origin' '$http_origin' always;
      add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, PATCH, DELETE, OPTIONS' always;
      add_header 'Access-Control-Allow-Credentials' 'true' always;
      add_header 'Access-Control-Allow-Headers' '$http_access_control_request_headers' always;
      add_header 'Access-Control-Expose-Headers' '*' always;
    }
    
    # OPTIONS (pre-flight) request from allowed CORS domain. return response directly
    if ($cors = '1o') {
      # Tell client that this pre-flight info is valid for 20 days
      add_header 'Access-Control-Max-Age' 1728000;
      add_header 'Access-Control-Allow-Origin' '$http_origin' always;
      add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, PATCH, DELETE, OPTIONS' always;
      add_header 'Access-Control-Allow-Credentials' 'true' always;
      add_header 'Access-Control-Allow-Headers' '$http_access_control_request_headers' always;
      add_header 'Access-Control-Expose-Headers' '*' always;
      add_header 'Content-Type' 'text/plain charset=UTF-8';
      add_header 'Content-Length' 0;
      return 200;
    }
---
# Source: cloud2edge/charts/ditto/templates/nginx-config.yaml
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: c2e-nginx-config-nginx-htpasswd
  labels:
    app.kubernetes.io/name: ditto-nginx-config
    helm.sh/chart: ditto-2.4.0
    app.kubernetes.io/instance: c2e
    app.kubernetes.io/version: "2.4.0"
    app.kubernetes.io/managed-by: Helm
data:
  nginx.htpasswd: |-
    # this file contains sample users and their hashed password
    ditto:A6BgmB8IEtPTs
---
# Source: cloud2edge/charts/ditto/templates/nginx-configmap.yaml
# Copyright (c) 2019 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0---
apiVersion: v1
kind: ConfigMap
metadata:
  name: c2e-nginx-conf
  labels:
    app.kubernetes.io/name: ditto-nginx-conf
    helm.sh/chart: ditto-2.4.0
    app.kubernetes.io/instance: c2e
    app.kubernetes.io/version: "2.4.0"
    app.kubernetes.io/managed-by: Helm
data:
  nginx.conf: |-
    worker_processes 1;
    pid /run/nginx/nginx.pid;
    
    events {worker_connections 1024;}
    
    http {
      charset utf-8;
      default_type application/json;
      include mime.types;
    
      # timeouts are configured slightly higher than ditto-eclipse-ditto-gateway read-timeout of 60 seconds
      proxy_connect_timeout 70; # seconds, default: 60
      proxy_send_timeout 70; # seconds, default: 60
      proxy_read_timeout 70; # seconds, default: 60
      send_timeout 70; # seconds, default: 60
    
      client_header_buffer_size 8k; # allow longer URIs + headers (default: 1k)
      large_client_header_buffers 4 16k;
    
      merge_slashes off; # allow multiple slashes for CRS Authentication
    
      upstream c2e-ditto-gateway {
        server c2e-ditto-gateway:8080;
      }
    
      server {
        listen 8080;
        server_name localhost;
    
        location / {
          index index.html;
        }
    
        # api
        location /api {
          include nginx-cors.conf;

          
          auth_basic                    "Authentication required";
          auth_basic_user_file          nginx.htpasswd;
          proxy_set_header              X-Forwarded-User           $remote_user;
          proxy_set_header              x-ditto-pre-authenticated "nginx:${remote_user}";
        
          proxy_pass                    http://c2e-ditto-gateway;
          proxy_http_version            1.1;
          proxy_set_header              Host                      $http_host;
          proxy_set_header              X-Real-IP                 $remote_addr;
          proxy_set_header              X-Forwarded-For           $proxy_add_x_forwarded_for;
    
          proxy_set_header Connection  '';
          chunked_transfer_encoding    off;
          proxy_buffering              off;
          proxy_cache                  off;
        }
    
        # ws
        location /ws {

          
          auth_basic                    "Authentication required";
          auth_basic_user_file          nginx.htpasswd;
          proxy_set_header              X-Forwarded-User           $remote_user;
          proxy_set_header              x-ditto-pre-authenticated "nginx:${remote_user}";
          
          proxy_pass                    http://c2e-ditto-gateway;
          proxy_http_version            1.1;
          proxy_set_header              Host                      $http_host;
          proxy_set_header              X-Real-IP                 $remote_addr;
          proxy_set_header              X-Forwarded-For           $proxy_add_x_forwarded_for;
    
          proxy_set_header              Upgrade                   $http_upgrade;
          proxy_set_header              Connection                "upgrade";
          proxy_read_timeout            1d;
          proxy_send_timeout            1d;
        }
    
        # health
        location /health {
          include nginx-cors.conf;
    
          proxy_pass                    http://c2e-ditto-gateway/health;
          proxy_http_version            1.1;
          proxy_set_header              Host                      $http_host;
          proxy_set_header              X-Real-IP                 $remote_addr;
          proxy_set_header              X-Forwarded-For           $proxy_add_x_forwarded_for;
          proxy_set_header              X-Forwarded-User          $remote_user;
        }
    
        # status
        location /status {
          include nginx-cors.conf;
    
          proxy_pass                    http://c2e-ditto-gateway/overall/status;
          proxy_http_version            1.1;
          proxy_set_header              Host                      $http_host;
          proxy_set_header              X-Real-IP                 $remote_addr;
          proxy_set_header              X-Forwarded-For           $proxy_add_x_forwarded_for;
          proxy_set_header              X-Forwarded-User          $remote_user;
        }

        # stats
        location /stats {
          include nginx-cors.conf;

          proxy_pass                    http://c2e-ditto-gateway/stats;
          proxy_http_version            1.1;
          proxy_set_header              Host                      $http_host;
          proxy_set_header              X-Real-IP                 $remote_addr;
          proxy_set_header              X-Forwarded-For           $proxy_add_x_forwarded_for;
          proxy_set_header              X-Forwarded-User          $remote_user;
        }
    
        # devops
        location /devops {
          include nginx-cors.conf;

          proxy_pass                    http://c2e-ditto-gateway/devops;
          proxy_http_version            1.1;
          proxy_set_header              Host                      $http_host;
          proxy_set_header              X-Real-IP                 $remote_addr;
          proxy_set_header              X-Forwarded-For           $proxy_add_x_forwarded_for;
          proxy_set_header              X-Forwarded-User          $remote_user;
        }

        # swagger
        # access API doc on: /apidoc/2
        location /apidoc/ {
          rewrite ^/apidoc/([0-9])$ $scheme://$http_host/apidoc/?url=/apidoc/openapi/ditto-openapi-$1.yaml redirect;
          proxy_pass                    http://c2e-ditto-swaggerui:8080/;
          proxy_http_version            1.1;
          proxy_set_header              Host                      $http_host;
        }
      }
    }
---
# Source: cloud2edge/charts/ditto/templates/swaggerui-config.yaml
# Copyright (c) 2019 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0---
apiVersion: v1
kind: ConfigMap
metadata:
  name: c2e-ditto-swaggerui
  labels:
    app.kubernetes.io/name: ditto-swaggerui
    helm.sh/chart: ditto-2.4.0
    app.kubernetes.io/instance: c2e
    app.kubernetes.io/version: "2.4.0"
    app.kubernetes.io/managed-by: Helm
data:
  {}
---
# Source: cloud2edge/charts/hono/templates/hono-service-device-registry-base/hono-service-device-registry-post-install-configmap.yaml
#
# Copyright (c) 2020 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
#
apiVersion: v1
kind: ConfigMap
metadata:
  name: c2e-post-install-device-registry-conf
  namespace: cloud2edge
  labels:
    app.kubernetes.io/name: hono
    helm.sh/chart: hono-1.12.8
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: c2e
    app.kubernetes.io/version: 1.12.2
    app.kubernetes.io/component: service-device-registry
data:
  add_example_data_device_registry.sh: |
    #!/bin/sh
    #*******************************************************************************
    # Copyright (c) 2020 Contributors to the Eclipse Foundation
    #
    # See the NOTICE file(s) distributed with this work for additional
    # information regarding copyright ownership.
    #
    # This program and the accompanying materials are made available under the
    # terms of the Eclipse Public License 2.0 which is available at
    # http://www.eclipse.org/legal/epl-2.0
    #
    # SPDX-License-Identifier: EPL-2.0
    #*******************************************************************************
    HTTP_BASE_URL="http://c2e-service-device-registry:8080/v1"
    
    check_status() {
      EXIT_STATUS=$1
      HTTP_RESPONSE=$2
    
      if [ $EXIT_STATUS -ne 0 ]
      then
        echo "Curl command failed [exit-code: $EXIT_STATUS]"
        exit 1
      elif [ $HTTP_RESPONSE -ne "201" ] && [ $HTTP_RESPONSE -ne "204" ] && [ $HTTP_RESPONSE -ne "409" ]
      then
        echo "Http request failed [http-response: $HTTP_RESPONSE]"
        exit 1
      fi
    }
    
    echo "Device Registry Http endpoint base url: [$HTTP_BASE_URL]"
    
    add_tenant(){
      TENANT_ID=$1
      HTTP_REQUEST_BODY=$2
    
      echo "Adding tenant [$TENANT_ID]"
      HTTP_RESPONSE=$(curl -o /dev/null -sw "%{http_code}" \
                        -X POST "$HTTP_BASE_URL/tenants/$TENANT_ID" \
                        --header 'Content-Type: application/json' \
                        --data-raw "$HTTP_REQUEST_BODY")
    
      check_status $? $HTTP_RESPONSE
    }
    
    register_device(){
      TENANT_ID=$1
      DEVICE_ID=$2
      HTTP_REQUEST_BODY=$3
    
      echo "Registering device [$TENANT_ID:$DEVICE_ID]"
      HTTP_RESPONSE=$(curl -o /dev/null -sw "%{http_code}" \
                      -X POST "$HTTP_BASE_URL/devices/$TENANT_ID/$DEVICE_ID" \
                      --header 'Content-Type: application/json' \
                      --data-raw "$HTTP_REQUEST_BODY")
    
      check_status $? $HTTP_RESPONSE
    }
    
    
    add_credentials(){
      TENANT_ID=$1
      DEVICE_ID=$2
      HTTP_REQUEST_BODY=$3
    
      echo "Adding credentials [$TENANT_ID:$DEVICE_ID]"
      HTTP_RESPONSE=$(curl -o /dev/null -sw "%{http_code}" \
                    -X PUT "$HTTP_BASE_URL/credentials/$1/$2" \
                    --header 'Content-Type: application/json' \
                    --data-raw "$3")
    
      check_status $? $HTTP_RESPONSE
    }
    
    . ./example-tenants.sh
    . ./example-devices.sh
    . ./example-credentials.sh
    
  example-tenants.sh: |
    
    #!/bin/sh
    #*******************************************************************************
    # Copyright (c) 2020, 2021 Contributors to the Eclipse Foundation
    #
    # See the NOTICE file(s) distributed with this work for additional
    # information regarding copyright ownership.
    #
    # This program and the accompanying materials are made available under the
    # terms of the Eclipse Public License 2.0 which is available at
    # http://www.eclipse.org/legal/epl-2.0
    #
    # SPDX-License-Identifier: EPL-2.0
    #*******************************************************************************
    
    DEFAULT_TENANT_TRUSTED_CA=`cat default_tenant-trusted-ca.json`
    
    add_tenant 'DEFAULT_TENANT' \
              "{
                  \"enabled\": true,
                  \"trusted-ca\": [
    $DEFAULT_TENANT_TRUSTED_CA
                  ]
                }"
    
    add_tenant 'HTTP_TENANT' \
              '{
                  "enabled": true,
                  "adapters": [
                    {
                      "type": "hono-http",
                      "enabled": true,
                      "device-authentication-required": true
                    },
                    {
                      "type": "hono-mqtt",
                      "enabled": false,
                      "device-authentication-required": true
                    },
                    {
                      "type": "hono-kura",
                      "enabled": false,
                      "device-authentication-required": true
                    },
                    {
                      "type": "hono-coap",
                      "enabled": false,
                      "device-authentication-required": true
                    }
                  ]
                }'
    
  example-devices.sh: |
    
    #!/bin/sh
    #*******************************************************************************
    # Copyright (c) 2020 Contributors to the Eclipse Foundation
    #
    # See the NOTICE file(s) distributed with this work for additional
    # information regarding copyright ownership.
    #
    # This program and the accompanying materials are made available under the
    # terms of the Eclipse Public License 2.0 which is available at
    # http://www.eclipse.org/legal/epl-2.0
    #
    # SPDX-License-Identifier: EPL-2.0
    #*******************************************************************************
    
    register_device 'DEFAULT_TENANT' '4711' \
                    '{
                        "enabled": true,
                        "defaults": {
                            "content-type": "application/vnd.bumlux",
                            "importance": "high"
                        }
                    }'
    
    register_device 'DEFAULT_TENANT' '4712' \
                    '{
                        "enabled": true,
                        "via": [
                            "gw-1"
                        ]
                    }'
    
    register_device 'DEFAULT_TENANT' 'gw-1' \
                    '{
                        "enabled": true
                    }'
    
  example-credentials.sh: |
    
    #!/bin/sh
    #*******************************************************************************
    # Copyright (c) 2020 Contributors to the Eclipse Foundation
    #
    # See the NOTICE file(s) distributed with this work for additional
    # information regarding copyright ownership.
    #
    # This program and the accompanying materials are made available under the
    # terms of the Eclipse Public License 2.0 which is available at
    # http://www.eclipse.org/legal/epl-2.0
    #
    # SPDX-License-Identifier: EPL-2.0
    #*******************************************************************************
    
    add_credentials 'DEFAULT_TENANT' '4711' \
                    '[
                      {
                          "type": "hashed-password",
                          "auth-id": "sensor1",
                          "enabled": true,
                          "secrets": [
                              {
                                  "not-before": "2017-05-01T14:00:00+01:00",
                                  "not-after": "2037-06-01T14:00:00+01:00",
                                  "hash-function": "bcrypt",
                                  "comment": "pwd: hono-secret",
                                  "pwd-hash": "$2a$10$N7UMjhZ2hYx.yuvW9WVXZ.4y33mr6MvnpAsZ8wgLHnkamH2tZ1jD."
                              }
                          ]
                      },
                      {
                          "type": "psk",
                          "auth-id": "sensor1",
                          "enabled": true,
                          "secrets": [
                              {
                                  "not-before": "2018-01-01T00:00:00+01:00",
                                  "not-after": "2037-06-01T14:00:00+01:00",
                                  "comment": "key: hono-secret",
                                  "key": "aG9uby1zZWNyZXQ="
                              }
                          ]
                      },
                      {
                          "type": "x509-cert",
                          "auth-id": "CN=Device 4711,OU=Hono,O=Eclipse IoT,L=Ottawa,C=CA",
                          "enabled": true,
                          "secrets": [
                              {
                                  "comment": "The secrets array must contain an object, which can be empty."
                              }
                          ]
                      }]'
    
    add_credentials 'DEFAULT_TENANT' 'gw-1' \
                    '[
                          {
                              "type": "hashed-password",
                              "auth-id": "gw",
                              "enabled": true,
                              "secrets": [
                                  {
                                      "not-before": "2018-01-01T00:00:00+01:00",
                                      "not-after": "2037-06-01T14:00:00+01:00",
                                      "hash-function": "bcrypt",
                                      "comment": "pwd: gw-secret",
                                      "pwd-hash": "$2a$10$GMcN0iV9gJV7L1sH6J82Xebc1C7CGJ..Rbs./vcTuTuxPEgS9DOa6"
                                  }
                              ]
                          },
                          {
                              "type": "psk",
                              "auth-id": "gw",
                              "enabled": true,
                              "secrets": [
                                  {
                                      "not-before": "2018-01-01T00:00:00+01:00",
                                      "not-after": "2037-06-01T14:00:00+01:00",
                                      "comment": "key: gw-secret",
                                      "key": "Z3ctc2VjcmV0"
                                  }
                              ]
                          }
                  ]'
    
  default_tenant-trusted-ca.json: |
    
    {
      "subject-dn": "CN=DEFAULT_TENANT_CA,OU=Hono,O=Eclipse IoT,L=Ottawa,C=CA",
      "public-key": "MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExUZOyVfK9t3IbgtLlpjz+MRxtD2c5Uooxfe0pOiPovM1CA6+ELgUV62uECD08D5HL5FDRzEBY2yW3kA4s91e0Q==",
      "algorithm": "EC",
      "not-before": "2022-01-26T09:06:09+01:00",
      "not-after": "2023-01-26T09:06:09+01:00"
    }
---
# Source: cloud2edge/charts/ditto/templates/role.yaml
# Copyright (c) 2019 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: c2e-ditto
  labels:
    app.kubernetes.io/name: ditto
    helm.sh/chart: ditto-2.4.0
    app.kubernetes.io/instance: c2e
    app.kubernetes.io/version: "2.4.0"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "watch", "list"]
---
# Source: cloud2edge/charts/hono/templates/hono-service-command-router/hono-service-command-router-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: c2e-service-command-router
  namespace: cloud2edge
  labels:
    app.kubernetes.io/name: hono
    helm.sh/chart: hono-1.12.8
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: c2e
    app.kubernetes.io/version: 1.12.2
rules:
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["list", "watch"]
---
# Source: cloud2edge/charts/ditto/templates/rolebinding.yaml
# Copyright (c) 2019 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: c2e-ditto
  labels:
    app.kubernetes.io/name: ditto
    helm.sh/chart: ditto-2.4.0
    app.kubernetes.io/instance: c2e
    app.kubernetes.io/version: "2.4.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  kind: Role
  name: c2e-ditto
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: c2e-ditto
---
# Source: cloud2edge/charts/hono/templates/hono-service-command-router/hono-service-command-router-rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: c2e-service-command-router
  namespace: cloud2edge
  labels:
    app.kubernetes.io/name: hono
    helm.sh/chart: hono-1.12.8
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: c2e
    app.kubernetes.io/version: 1.12.2
roleRef:
  kind: Role
  name: "c2e-service-command-router"
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    name: "c2e-service-command-router"
    namespace: cloud2edge
---
# Source: cloud2edge/charts/ditto/charts/mongodb/templates/svc-standalone.yaml
apiVersion: v1
kind: Service
metadata:
  name: ditto-mongodb
  namespace: cloud2edge
  labels:
    app: mongodb
    chart: mongodb-7.14.8
    release: "c2e"
    heritage: "Helm"
spec:
  type: ClusterIP
  ports:
    - name: mongodb
      port: 27017
      targetPort: mongodb
  selector:
    app: mongodb
    release: "c2e"
---
# Source: cloud2edge/charts/ditto/templates/gateway-service.yaml
# Copyright (c) 2019 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0---
apiVersion: v1
kind: Service
metadata:
  name: c2e-ditto-gateway
  labels:
    app.kubernetes.io/name: ditto-gateway
    helm.sh/chart: ditto-2.4.0
    app.kubernetes.io/instance: c2e
    app.kubernetes.io/version: "2.4.0"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: ditto-gateway
    app.kubernetes.io/instance: c2e
---
# Source: cloud2edge/charts/ditto/templates/nginx-service.yaml
# Copyright (c) 2019 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0---
apiVersion: v1
kind: Service
metadata:
  name: c2e-ditto-nginx
  labels:
    app.kubernetes.io/name: ditto-nginx
    helm.sh/chart: ditto-2.4.0
    app.kubernetes.io/instance: c2e
    app.kubernetes.io/version: "2.4.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: NodePort
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: ditto-nginx
    app.kubernetes.io/instance: c2e
---
# Source: cloud2edge/charts/ditto/templates/swaggerui-service.yaml
# Copyright (c) 2019 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0---
apiVersion: v1
kind: Service
metadata:
  name: c2e-ditto-swaggerui
  labels:
    app.kubernetes.io/name: ditto-swaggerui
    helm.sh/chart: ditto-2.4.0
    app.kubernetes.io/instance: c2e
    app.kubernetes.io/version: "2.4.0"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: ditto-swaggerui
    app.kubernetes.io/instance: c2e
---
# Source: cloud2edge/charts/hono/templates/artemis/artemis-svc.yaml
#
# Copyright (c) 2019, 2022 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
#
apiVersion: v1
kind: Service
metadata:
  name: c2e-artemis
  namespace: cloud2edge
  labels:
    app.kubernetes.io/name: hono
    helm.sh/chart: hono-1.12.8
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: c2e
    app.kubernetes.io/version: 1.12.2
    app.kubernetes.io/component: amqp-messaging-network-broker
spec:
  ports:
  - name: amqps
    port: 5671
    protocol: TCP
    targetPort: amqps
  selector:
    app.kubernetes.io/name: hono
    app.kubernetes.io/instance: c2e
    app.kubernetes.io/component: amqp-messaging-network-broker
---
# Source: cloud2edge/charts/hono/templates/dispatch-router/dispatch-router-ext-svc.yaml
#
# Copyright (c) 2019, 2022 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
#
apiVersion: v1
kind: Service
metadata:
  name: c2e-dispatch-router-ext
  namespace: cloud2edge
  labels:
    app.kubernetes.io/name: hono
    helm.sh/chart: hono-1.12.8
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: c2e
    app.kubernetes.io/version: 1.12.2
    app.kubernetes.io/component: amqp-messaging-network-router
spec:
  ports:
  - name: amqps
    port: 15671
    protocol: TCP
    targetPort: amqps
    
    nodePort: 30671
  - name: amqp
    port: 15672
    protocol: TCP
    targetPort: amqp
    
    nodePort: 30672
  selector:
    app.kubernetes.io/name: hono
    app.kubernetes.io/instance: c2e
    app.kubernetes.io/component: amqp-messaging-network-router
  type: NodePort
---
# Source: cloud2edge/charts/hono/templates/dispatch-router/dispatch-router-svc.yaml
#
# Copyright (c) 2019, 2022 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
#
apiVersion: v1
kind: Service
metadata:
  name: c2e-dispatch-router
  namespace: cloud2edge
  labels:
    app.kubernetes.io/name: hono
    helm.sh/chart: hono-1.12.8
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: c2e
    app.kubernetes.io/version: 1.12.2
    app.kubernetes.io/component: amqp-messaging-network-router
spec:
  ports:
  - port: 5673
    protocol: TCP
    targetPort: internal
  selector:
    app.kubernetes.io/name: hono
    app.kubernetes.io/instance: c2e
    app.kubernetes.io/component: amqp-messaging-network-router
---
# Source: cloud2edge/charts/hono/templates/hono-adapter-amqp/hono-adapter-amqp-vertx-svc.yaml
#
# Copyright (c) 2019 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
#
apiVersion: v1
kind: Service
metadata:
  name: c2e-adapter-amqp-vertx
  namespace: cloud2edge
  labels:
    app.kubernetes.io/name: hono
    helm.sh/chart: hono-1.12.8
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: c2e
    app.kubernetes.io/version: 1.12.2
    app.kubernetes.io/component: adapter-amqp-vertx
spec:
  ports:
  - name: amqp
    port: 5672
    protocol: TCP
    targetPort: amqp
    
    nodePort: 32672
  - name: amqps
    port: 5671
    protocol: TCP
    targetPort: amqps
    
    nodePort: 32671
  selector:
    app.kubernetes.io/name: hono
    app.kubernetes.io/instance: c2e
    app.kubernetes.io/component: adapter-amqp-vertx
  type: NodePort
---
# Source: cloud2edge/charts/hono/templates/hono-adapter-http/hono-adapter-http-vertx-svc.yaml
#
# Copyright (c) 2019, 2020 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
#
apiVersion: v1
kind: Service
metadata:
  name: c2e-adapter-http-vertx
  namespace: cloud2edge
  labels:
    app.kubernetes.io/name: hono
    helm.sh/chart: hono-1.12.8
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: c2e
    app.kubernetes.io/version: 1.12.2
    app.kubernetes.io/component: adapter-http-vertx
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: http
    
    nodePort: 30080
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
    
    nodePort: 30443
  selector:
    app.kubernetes.io/name: hono
    app.kubernetes.io/instance: c2e
    app.kubernetes.io/component: adapter-http-vertx
  type: NodePort
---
# Source: cloud2edge/charts/hono/templates/hono-adapter-mqtt/hono-adapter-mqtt-vertx-svc.yaml
#
# Copyright (c) 2019, 2020 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
#
apiVersion: v1
kind: Service
metadata:
  name: c2e-adapter-mqtt-vertx
  namespace: cloud2edge
  labels:
    app.kubernetes.io/name: hono
    helm.sh/chart: hono-1.12.8
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: c2e
    app.kubernetes.io/version: 1.12.2
    app.kubernetes.io/component: adapter-mqtt-vertx
spec:
  ports:
  - name: mqtt
    port: 1883
    protocol: TCP
    targetPort: mqtt
    
    nodePort: 31883
  - name: secure-mqtt
    port: 8883
    protocol: TCP
    targetPort: secure-mqtt
    
    nodePort: 30883
  selector:
    app.kubernetes.io/name: hono
    app.kubernetes.io/instance: c2e
    app.kubernetes.io/component: adapter-mqtt-vertx
  type: NodePort
---
# Source: cloud2edge/charts/hono/templates/hono-service-auth/hono-service-auth-svc.yaml
#
# Copyright (c) 2019 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
#
apiVersion: v1
kind: Service
metadata:
  name: c2e-service-auth
  namespace: cloud2edge
  labels:
    app.kubernetes.io/name: hono
    helm.sh/chart: hono-1.12.8
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: c2e
    app.kubernetes.io/version: 1.12.2
    app.kubernetes.io/component: service-auth
spec:
  ports:
  - name: amqps
    port: 5671
    protocol: TCP
    targetPort: amqps
  selector:
    app.kubernetes.io/name: hono
    app.kubernetes.io/instance: c2e
    app.kubernetes.io/component: service-auth
---
# Source: cloud2edge/charts/hono/templates/hono-service-command-router/hono-service-command-router-svc.yaml
#
# Copyright (c) 2021 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
#
apiVersion: v1
kind: Service
metadata:
  name: c2e-service-command-router
  namespace: cloud2edge
  labels:
    app.kubernetes.io/name: hono
    helm.sh/chart: hono-1.12.8
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: c2e
    app.kubernetes.io/version: 1.12.2
    app.kubernetes.io/component: service-command-router
spec:
  ports:
  - name: amqps
    port: 5671
    protocol: TCP
    targetPort: amqps
  selector:
    app.kubernetes.io/name: hono
    app.kubernetes.io/instance: c2e
    app.kubernetes.io/component: service-command-router
---
# Source: cloud2edge/charts/hono/templates/hono-service-device-registry-base/hono-service-device-registry-ext-svc.yaml
#
# Copyright (c) 2019 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
#
apiVersion: v1
kind: Service
metadata:
  name: c2e-service-device-registry-ext
  namespace: cloud2edge
  labels:
    app.kubernetes.io/name: hono
    helm.sh/chart: hono-1.12.8
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: c2e
    app.kubernetes.io/version: 1.12.2
    app.kubernetes.io/component: service-device-registry
spec:
  ports:
  - name: http
    port: 28080
    protocol: TCP
    targetPort: http
    
    nodePort: 31080
  - name: https
    port: 28443
    protocol: TCP
    targetPort: https
    
    nodePort: 31443
  selector:
    app.kubernetes.io/name: hono
    app.kubernetes.io/instance: c2e
    app.kubernetes.io/component: service-device-registry
  type: NodePort
---
# Source: cloud2edge/charts/hono/templates/hono-service-device-registry-base/hono-service-device-registry-svc.yaml
#
# Copyright (c) 2019, 2020 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
#
apiVersion: v1
kind: Service
metadata:
  name: c2e-service-device-registry
  namespace: cloud2edge
  labels:
    app.kubernetes.io/name: hono
    helm.sh/chart: hono-1.12.8
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: c2e
    app.kubernetes.io/version: 1.12.2
    app.kubernetes.io/component: service-device-registry
spec:
  ports:
  - name: amqps
    port: 5671
    protocol: TCP
    targetPort: amqps
  - name: http
    port: 8080
    protocol: TCP
    targetPort: http
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    app.kubernetes.io/name: hono
    app.kubernetes.io/instance: c2e
    app.kubernetes.io/component: service-device-registry
---
# Source: cloud2edge/charts/ditto/charts/mongodb/templates/deployment-standalone.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ditto-mongodb
  namespace: cloud2edge
  labels:
    app: mongodb
    chart: mongodb-7.14.8
    release: "c2e"
    heritage: "Helm"
spec:
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: mongodb
      release: "c2e"
  template:
    metadata:
      labels:
        app: mongodb
        release: "c2e"
        chart: mongodb-7.14.8
    spec:
      serviceAccountName: ditto-mongodb      
      initContainers:
      containers:
        - name: ditto-mongodb
          image: docker.io/bitnami/mongodb:4.2.8-debian-10-r7
          imagePullPolicy: "IfNotPresent"
          env:
            - name: MONGODB_SYSTEM_LOG_VERBOSITY
              value: "0"
            - name: MONGODB_DISABLE_SYSTEM_LOG
              value: "no"
            - name: MONGODB_ENABLE_IPV6
              value: "no"
            - name: MONGODB_ENABLE_DIRECTORY_PER_DB
              value: "no"
          ports:
            - name: mongodb
              containerPort: 27017
          livenessProbe:
            exec:
              command:
                - mongo
                - --eval
                - "db.adminCommand('ping')"
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            exec:
              command:
                - mongo
                - --eval
                - "db.adminCommand('ping')"
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          volumeMounts:
            - name: data
              mountPath: /bitnami/mongodb
              subPath: 
          resources:
            limits:
              cpu: 250m
              memory: 512Mi
            requests:
              cpu: 150m
              memory: 256Mi
      volumes:
        - name: data
          emptyDir: {}
---
# Source: cloud2edge/charts/ditto/templates/concierge-deployment.yaml
# Copyright (c) 2019 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: c2e-ditto-concierge
  labels:
    app.kubernetes.io/name: ditto-concierge
    helm.sh/chart: ditto-2.4.0
    app.kubernetes.io/instance: c2e
    app.kubernetes.io/version: "2.4.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  minReadySeconds: 45
  selector:
    matchLabels:
      app.kubernetes.io/name: ditto-concierge
      app.kubernetes.io/instance: c2e
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ditto-concierge
        app.kubernetes.io/instance: c2e
        actorSystemName: ditto-cluster
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/"
        prometheus.io/port: "9095"
        checksum/mongodb-config: 72e764bf66f5d058167a43e8058c9aedc9b174bc40ee60ee88ccea861623b6bf
    spec:
      serviceAccountName: c2e-ditto
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
        - name: ditto-concierge
          image: docker.io/eclipse/ditto-concierge:2.4.0
          imagePullPolicy: IfNotPresent
          args:
            - "java"
            - "-Dakka.cluster.failure-detector.threshold=15.0"
            - "-Dakka.cluster.failure-detector.expected-response-after=10s"
            - "-Dakka.cluster.failure-detector.acceptable-heartbeat-pause=30s"
            - "-Dakka.cluster.shutdown-after-unsuccessful-join-seed-nodes=120s"
            - "-jar"
            - "/opt/ditto/starter.jar"
          env:
            - name: DITTO_LOGGING_DISABLE_SYSOUT_LOG
              value: "true"
            - name: DITTO_LOGGING_FILE_APPENDER
              value: "false"
            - name: POD_LABEL_SELECTOR
              value: "app.kubernetes.io/name=%s"
            - name: POD_NAMESPACE
              value: cloud2edge
            - name: INSTANCE_INDEX
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: HOSTNAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
            - name: DISCOVERY_METHOD
              value: "kubernetes-api"
            - name: TZ
              value: "Europe/Berlin"
            - name: JAVA_TOOL_OPTIONS
              value: "-XX:ActiveProcessorCount=2 -XX:+ExitOnOutOfMemoryError -XX:+UseContainerSupport -XX:+UseStringDeduplication -Xss512k -XX:MaxRAMPercentage=50 -XX:+UseG1GC -XX:MaxGCPauseMillis=150 -Dakka.coordinated-shutdown.exit-jvm=on "
            - name: MONGO_DB_SSL_ENABLED
              value: "false"
            - name: MONGO_DB_URI
              valueFrom:
                secretKeyRef:
                  name: c2e-ditto-mongodb-secret
                  key: concierge-uri
            - name: PROMETHEUS_PORT
              value: "9095"
          ports:
            - name: remoting
              containerPort: 2551
              protocol: TCP
            - name: management
              containerPort: 8558
              protocol: TCP
          readinessProbe:
            httpGet:
              port: management
              path: /ready
            initialDelaySeconds: 90
            periodSeconds: 10
            timeoutSeconds: 1
            failureThreshold: 3
          livenessProbe:
            httpGet:
              port: management
              path: /alive
            initialDelaySeconds: 160
            periodSeconds: 10
            timeoutSeconds: 3
            failureThreshold: 4
          resources:
            limits:
              memory: 768Mi
            requests:
              cpu: 200m
              memory: 512Mi
          securityContext:
            allowPrivilegeEscalation: false
---
# Source: cloud2edge/charts/ditto/templates/connectivity-deployment.yaml
# Copyright (c) 2019 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: c2e-ditto-connectivity
  labels:
    app.kubernetes.io/name: ditto-connectivity
    helm.sh/chart: ditto-2.4.0
    app.kubernetes.io/instance: c2e
    app.kubernetes.io/version: "2.4.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  minReadySeconds: 45
  selector:
    matchLabels:
      app.kubernetes.io/name: ditto-connectivity
      app.kubernetes.io/instance: c2e
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ditto-connectivity
        app.kubernetes.io/instance: c2e
        actorSystemName: ditto-cluster
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/"
        prometheus.io/port: "9095"
        checksum/mongodb-config: 72e764bf66f5d058167a43e8058c9aedc9b174bc40ee60ee88ccea861623b6bf
    spec:
      serviceAccountName: c2e-ditto
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
        - name: ditto-connectivity
          image: docker.io/eclipse/ditto-connectivity:2.4.0
          imagePullPolicy: IfNotPresent
          args:
            - "java"
            - "-Dakka.cluster.distributed-data.durable.lmdb.dir=/var/tmp/ddata"
            - "-Dakka.cluster.failure-detector.threshold=15.0"
            - "-Dakka.cluster.failure-detector.expected-response-after=10s"
            - "-Dakka.cluster.failure-detector.acceptable-heartbeat-pause=30s"
            - "-Dakka.cluster.shutdown-after-unsuccessful-join-seed-nodes=120s"
            - "-jar"
            - "/opt/ditto/starter.jar"
          env:
            - name: DITTO_LOGGING_DISABLE_SYSOUT_LOG
              value: "true"
            - name: DITTO_LOGGING_FILE_APPENDER
              value: "false"
            - name: POD_LABEL_SELECTOR
              value: "app.kubernetes.io/name=%s"
            - name: POD_NAMESPACE
              value: cloud2edge
            - name: INSTANCE_INDEX
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: HOSTNAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
            - name: DISCOVERY_METHOD
              value: "kubernetes-api"
            - name: TZ
              value: "Europe/Berlin"
            - name: JAVA_TOOL_OPTIONS
              value: "-XX:ActiveProcessorCount=2 -XX:+ExitOnOutOfMemoryError -XX:+UseContainerSupport -XX:+UseStringDeduplication -Xss512k -XX:MaxRAMPercentage=50 -XX:+UseG1GC -XX:MaxGCPauseMillis=150 -Dakka.coordinated-shutdown.exit-jvm=on "
            - name: MONGO_DB_SSL_ENABLED
              value: "false"
            - name: MONGO_DB_URI
              valueFrom:
                secretKeyRef:
                  name: c2e-ditto-mongodb-secret
                  key: connectivity-uri
            - name: PROMETHEUS_PORT
              value: "9095"
            - name: CONNECTIVITY_CONNECTION_BLOCKED_HOSTNAMES
              value: ""
          ports:
            - name: remoting
              containerPort: 2551
              protocol: TCP
            - name: management
              containerPort: 8558
              protocol: TCP
          readinessProbe:
            httpGet:
              port: management
              path: /ready
            initialDelaySeconds: 90
            periodSeconds: 10
            timeoutSeconds: 1
            failureThreshold: 3
          livenessProbe:
            httpGet:
              port: management
              path: /alive
            initialDelaySeconds: 160
            periodSeconds: 10
            timeoutSeconds: 3
            failureThreshold: 4
          resources:
            limits:
              memory: 1Gi
            requests:
              cpu: 200m
              memory: 768Mi
          securityContext:
            allowPrivilegeEscalation: false
---
# Source: cloud2edge/charts/ditto/templates/gateway-deployment.yaml
# Copyright (c) 2019 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: c2e-ditto-gateway
  labels:
    app.kubernetes.io/name: ditto-gateway
    helm.sh/chart: ditto-2.4.0
    app.kubernetes.io/instance: c2e
    app.kubernetes.io/version: "2.4.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  minReadySeconds: 45
  selector:
    matchLabels:
      app.kubernetes.io/name: ditto-gateway
      app.kubernetes.io/instance: c2e
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ditto-gateway
        app.kubernetes.io/instance: c2e
        actorSystemName: ditto-cluster
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/"
        prometheus.io/port: "9095"
        checksum/password-config: c0e6aa9a6c87e6ff14c1e30e18995deed244e6c659094c89a710a80c08dc9a46
        checksum/mongodb-config: 72e764bf66f5d058167a43e8058c9aedc9b174bc40ee60ee88ccea861623b6bf
    spec:
      serviceAccountName: c2e-ditto
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
        - name: ditto-gateway
          image: docker.io/eclipse/ditto-gateway:2.4.0
          imagePullPolicy: IfNotPresent
          args:
            - "java"
            - "-Dakka.cluster.failure-detector.threshold=15.0"
            - "-Dakka.cluster.failure-detector.expected-response-after=10s"
            - "-Dakka.cluster.failure-detector.acceptable-heartbeat-pause=30s"
            - "-Dakka.cluster.shutdown-after-unsuccessful-join-seed-nodes=120s"
            - "-jar"
            - "/opt/ditto/starter.jar"
          env:
            - name: DITTO_LOGGING_DISABLE_SYSOUT_LOG
              value: "true"
            - name: DITTO_LOGGING_FILE_APPENDER
              value: "false"
            - name: POD_LABEL_SELECTOR
              value: "app.kubernetes.io/name=%s"
            - name: POD_NAMESPACE
              value: cloud2edge
            - name: ENABLE_PRE_AUTHENTICATION
              value: "true"
            - name: INSTANCE_INDEX
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: HOSTNAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
            - name: DISCOVERY_METHOD
              value: "kubernetes-api"
            - name: TZ
              value: "Europe/Berlin"
            - name: JAVA_TOOL_OPTIONS
              value: "-XX:ActiveProcessorCount=2 -XX:+ExitOnOutOfMemoryError -XX:+UseContainerSupport -XX:+UseStringDeduplication -Xss512k -XX:MaxRAMPercentage=50 -XX:+UseG1GC -XX:MaxGCPauseMillis=150 -Dakka.coordinated-shutdown.exit-jvm=on "
            - name: DEVOPS_SECURE_STATUS
              value: "false"
            - name: DEVOPS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: c2e-ditto-gateway-secret
                  key: devops-password
            - name: STATUS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: c2e-ditto-gateway-secret
                  key: status-password
            - name: PROMETHEUS_PORT
              value: "9095"
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: remoting
              containerPort: 2551
              protocol: TCP
            - name: management
              containerPort: 8558
              protocol: TCP
          readinessProbe:
            httpGet:
              port: management
              path: /ready
            initialDelaySeconds: 90
            periodSeconds: 10
            timeoutSeconds: 1
            failureThreshold: 3
          livenessProbe:
            httpGet:
              port: management
              path: /alive
            initialDelaySeconds: 160
            periodSeconds: 10
            timeoutSeconds: 3
            failureThreshold: 4
          resources:
            limits:
              memory: 768Mi
            requests:
              cpu: 200m
              memory: 512Mi
          securityContext:
            allowPrivilegeEscalation: false
---
# Source: cloud2edge/charts/ditto/templates/nginx-deployment.yaml
# Copyright (c) 2019 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: c2e-ditto-nginx
  labels:
    app.kubernetes.io/name: ditto-nginx
    helm.sh/chart: ditto-2.4.0
    app.kubernetes.io/instance: c2e
    app.kubernetes.io/version: "2.4.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: ditto-nginx
      app.kubernetes.io/instance: c2e
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ditto-nginx
        app.kubernetes.io/instance: c2e
      annotations:
        checksum/nginx-conf: d04269d45f12b2cf1923d5c97b5a4a20d2a1631edb0f95c1b9d23873e9755fb4
        checksum/nginx-config: 2f8d49dd6ef6af40c4e2034b08a15df9b96307af424a8b09f0d37ae4d26a0858
    spec:
      initContainers:
        - name: wait-for-gateway
          image: curlimages/curl:latest
          args:
            - /bin/sh
            - -c
            - >
              set -x;
              while [[ "$(curl -sL -w "%{http_code}\n" http://c2e-ditto-gateway:8080/health -o /dev/null)" != "200" ]]; do
                echo '.'
                sleep 15;
              done
      containers:
        - name: ditto-nginx
          image: "docker.io/nginx:1.21-alpine"
          imagePullPolicy: IfNotPresent
          env:
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          resources:
            limits:
              cpu: 150m
              memory: 32Mi
            requests:
              cpu: 50m
              memory: 16Mi
          volumeMounts:
            - name: nginx-conf
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
            - name: nginx-htpasswd
              mountPath: /etc/nginx/nginx.htpasswd
              subPath: nginx.htpasswd
            - name: nginx-cors
              mountPath: /etc/nginx/nginx-cors.conf
              subPath: nginx-cors.conf
            - name: nginx-index
              mountPath: /etc/nginx/html/index.html
              subPath: index.html
            - name: nginx-ditto-down
              mountPath: /etc/nginx/html/ditto-down.svg
              subPath: ditto-down.svg
            - name: nginx-ditto-up
              mountPath: /etc/nginx/html/ditto-up.svg
              subPath: ditto-up.svg
            - name: nginx-cache
              mountPath: /var/cache/nginx
            - name: nginx-run
              mountPath: /run/nginx
      volumes:
        - name: nginx-conf
          configMap:
            name: c2e-nginx-conf
        - name: nginx-htpasswd
          configMap:
            name: c2e-nginx-config-nginx-htpasswd
        - name: nginx-cors
          configMap:
            name: c2e-nginx-config-nginx-cors-conf
        - name: nginx-index
          configMap:
            name: c2e-nginx-config-index-html
        - name: nginx-ditto-down
          configMap:
            name: c2e-nginx-config-ditto-down-svg
        - name: nginx-ditto-up
          configMap:
            name: c2e-nginx-config-ditto-up-svg
        - name: nginx-cache
          emptyDir: {}
        - name: nginx-run
          emptyDir: {}
---
# Source: cloud2edge/charts/ditto/templates/policies-deployment.yaml
# Copyright (c) 2019 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: c2e-ditto-policies
  labels:
    app.kubernetes.io/name: ditto-policies
    helm.sh/chart: ditto-2.4.0
    app.kubernetes.io/instance: c2e
    app.kubernetes.io/version: "2.4.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  minReadySeconds: 45
  selector:
    matchLabels:
      app.kubernetes.io/name: ditto-policies
      app.kubernetes.io/instance: c2e
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ditto-policies
        app.kubernetes.io/instance: c2e
        actorSystemName: ditto-cluster
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/"
        prometheus.io/port: "9095"
        checksum/mongodb-config: 72e764bf66f5d058167a43e8058c9aedc9b174bc40ee60ee88ccea861623b6bf
    spec:
      serviceAccountName: c2e-ditto
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
        - name: ditto-policies
          image: docker.io/eclipse/ditto-policies:2.4.0
          imagePullPolicy: IfNotPresent
          args:
            - "java"
            - "-Dakka.cluster.failure-detector.threshold=15.0"
            - "-Dakka.cluster.failure-detector.expected-response-after=10s"
            - "-Dakka.cluster.failure-detector.acceptable-heartbeat-pause=30s"
            - "-Dakka.cluster.shutdown-after-unsuccessful-join-seed-nodes=120s"
            - "-jar"
            - "/opt/ditto/starter.jar"
          env:
            - name: DITTO_LOGGING_DISABLE_SYSOUT_LOG
              value: "true"
            - name: DITTO_LOGGING_FILE_APPENDER
              value: "false"
            - name: POD_LABEL_SELECTOR
              value: "app.kubernetes.io/name=%s"
            - name: POD_NAMESPACE
              value: cloud2edge
            - name: INSTANCE_INDEX
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: HOSTNAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
            - name: DISCOVERY_METHOD
              value: "kubernetes-api"
            - name: TZ
              value: "Europe/Berlin"
            - name: JAVA_TOOL_OPTIONS
              value: "-XX:ActiveProcessorCount=2 -XX:+ExitOnOutOfMemoryError -XX:+UseContainerSupport -XX:+UseStringDeduplication -Xss512k -XX:MaxRAMPercentage=50 -XX:+UseG1GC -XX:MaxGCPauseMillis=150 -Dakka.coordinated-shutdown.exit-jvm=on "
            - name: MONGO_DB_SSL_ENABLED
              value: "false"
            - name: MONGO_DB_URI
              valueFrom:
                secretKeyRef:
                  name: c2e-ditto-mongodb-secret
                  key: policies-uri
            - name: PROMETHEUS_PORT
              value: "9095"
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: remoting
              containerPort: 2551
              protocol: TCP
            - name: management
              containerPort: 8558
              protocol: TCP
          readinessProbe:
            httpGet:
              port: management
              path: /ready
            initialDelaySeconds: 90
            periodSeconds: 10
            timeoutSeconds: 1
            failureThreshold: 3
          livenessProbe:
            httpGet:
              port: management
              path: /alive
            initialDelaySeconds: 160
            periodSeconds: 10
            timeoutSeconds: 3
            failureThreshold: 4
          resources:
            limits:
              memory: 768Mi
            requests:
              cpu: 200m
              memory: 512Mi
          securityContext:
            allowPrivilegeEscalation: false
---
# Source: cloud2edge/charts/ditto/templates/swaggerui-deployment.yaml
# Copyright (c) 2019, 2020 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: c2e-ditto-swaggerui
  labels:
    app.kubernetes.io/name: ditto-swaggerui
    helm.sh/chart: ditto-2.4.0
    app.kubernetes.io/instance: c2e
    app.kubernetes.io/version: "2.4.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: ditto-swaggerui
      app.kubernetes.io/instance: c2e
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ditto-swaggerui
        app.kubernetes.io/instance: c2e
      annotations:
    spec:
      initContainers:
        - name: ditto-init
          image: "docker.io/swaggerapi/swagger-ui:v4.6.1"
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - -ec
            - |
               mkdir -p /usr/share/nginx/html/openapi 
               curl -sL https://raw.githubusercontent.com/eclipse/ditto/2.4.0/documentation/src/main/resources/openapi/ditto-api-2.yml -o /usr/share/nginx/html/openapi/ditto-openapi-2.yaml               
               cp -rv /etc/nginx/. /init-config/
               cp -rv /usr/share/nginx/html/. /init-content/
               mkdir /var/lib/nginx/logs
               mkdir /var/lib/nginx/tmp
          volumeMounts:
            - name: swagger-ui-config
              mountPath: /init-config
            - name: swagger-ui-content
              mountPath: /init-content
            - name: swagger-ui-work
              mountPath: /var/lib/nginx
      containers:
        - name: ditto-swaggerui
          image: "docker.io/swaggerapi/swagger-ui:v4.6.1"
          imagePullPolicy: IfNotPresent
          env:
            - name: QUERY_CONFIG_ENABLED
              value: "true"
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          resources:
            limits:
              cpu: 100m
              memory: 32Mi
            requests:
              cpu: 50m
              memory: 16Mi
          volumeMounts:
            - name: swagger-ui-api
              mountPath: /usr/share/nginx/html/
              subPath: openapi
            - name: swagger-ui-cache
              mountPath: /var/cache/nginx
            - name: swagger-ui-work
              mountPath: /var/lib/nginx
            - name: swagger-ui-config
              mountPath: /etc/nginx
            - name: swagger-ui-content
              mountPath: /usr/share/nginx/html
            - name: swagger-ui-run
              mountPath: /run/nginx
      volumes:
        - name: swagger-ui-api
          configMap:
            name: c2e-ditto-swaggerui
        - name: swagger-ui-cache
          emptyDir: {}
        - name: swagger-ui-work
          emptyDir: {}
        - name: swagger-ui-config
          emptyDir: {}
        - name: swagger-ui-content
          emptyDir: {}
        - name: swagger-ui-run
          emptyDir: {}
---
# Source: cloud2edge/charts/ditto/templates/things-deployment.yaml
# Copyright (c) 2019 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: c2e-ditto-things
  labels:
    app.kubernetes.io/name: ditto-things
    helm.sh/chart: ditto-2.4.0
    app.kubernetes.io/instance: c2e
    app.kubernetes.io/version: "2.4.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  minReadySeconds: 45
  selector:
    matchLabels:
      app.kubernetes.io/name: ditto-things
      app.kubernetes.io/instance: c2e
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ditto-things
        app.kubernetes.io/instance: c2e
        actorSystemName: ditto-cluster
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/"
        prometheus.io/port: "9095"
        checksum/mongodb-config: 72e764bf66f5d058167a43e8058c9aedc9b174bc40ee60ee88ccea861623b6bf
    spec:
      serviceAccountName: c2e-ditto
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
        - name: ditto-things
          image: docker.io/eclipse/ditto-things:2.4.0
          imagePullPolicy: IfNotPresent
          args:
            - "java"
            - "-Dakka.cluster.failure-detector.threshold=15.0"
            - "-Dakka.cluster.failure-detector.expected-response-after=10s"
            - "-Dakka.cluster.failure-detector.acceptable-heartbeat-pause=30s"
            - "-Dakka.cluster.shutdown-after-unsuccessful-join-seed-nodes=120s"
            - "-jar"
            - "/opt/ditto/starter.jar"
          env:
            - name: DITTO_LOGGING_DISABLE_SYSOUT_LOG
              value: "true"
            - name: DITTO_LOGGING_FILE_APPENDER
              value: "false"
            - name: POD_LABEL_SELECTOR
              value: "app.kubernetes.io/name=%s"
            - name: POD_NAMESPACE
              value: cloud2edge
            - name: INSTANCE_INDEX
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: HOSTNAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
            - name: DISCOVERY_METHOD
              value: "kubernetes-api"
            - name: TZ
              value: "Europe/Berlin"
            - name: JAVA_TOOL_OPTIONS
              value: "-XX:ActiveProcessorCount=2 -XX:+ExitOnOutOfMemoryError -XX:+UseContainerSupport -XX:+UseStringDeduplication -Xss512k -XX:MaxRAMPercentage=50 -XX:+UseG1GC -XX:MaxGCPauseMillis=150 -Dakka.coordinated-shutdown.exit-jvm=on "
            - name: MONGO_DB_SSL_ENABLED
              value: "false"
            - name: MONGO_DB_URI
              valueFrom:
                secretKeyRef:
                  name: c2e-ditto-mongodb-secret
                  key: things-uri
            - name: PROMETHEUS_PORT
              value: "9095"
          ports:
            - name: remoting
              containerPort: 2551
              protocol: TCP
            - name: management
              containerPort: 8558
              protocol: TCP
          readinessProbe:
            httpGet:
              port: management
              path: /ready
            initialDelaySeconds: 90
            periodSeconds: 10
            timeoutSeconds: 1
            failureThreshold: 3
          livenessProbe:
            httpGet:
              port: management
              path: /alive
            initialDelaySeconds: 160
            periodSeconds: 10
            timeoutSeconds: 3
            failureThreshold: 4
          resources:
            limits:
              memory: 768Mi
            requests:
              cpu: 200m
              memory: 512Mi
          securityContext:
            allowPrivilegeEscalation: false
---
# Source: cloud2edge/charts/ditto/templates/thingssearch-deployment.yaml
# Copyright (c) 2019 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: c2e-ditto-thingssearch
  labels:
    app.kubernetes.io/name: ditto-thingssearch
    helm.sh/chart: ditto-2.4.0
    app.kubernetes.io/instance: c2e
    app.kubernetes.io/version: "2.4.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  minReadySeconds: 45
  selector:
    matchLabels:
      app.kubernetes.io/name: ditto-thingssearch
      app.kubernetes.io/instance: c2e
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ditto-thingssearch
        app.kubernetes.io/instance: c2e
        actorSystemName: ditto-cluster
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/"
        prometheus.io/port: "9095"
        checksum/mongodb-config: 72e764bf66f5d058167a43e8058c9aedc9b174bc40ee60ee88ccea861623b6bf
    spec:
      serviceAccountName: c2e-ditto
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
        - name: ditto-thingssearch
          image: docker.io/eclipse/ditto-things-search:2.4.0
          imagePullPolicy: IfNotPresent
          args:
            - "java"
            - "-Dakka.cluster.failure-detector.threshold=15.0"
            - "-Dakka.cluster.failure-detector.expected-response-after=10s"
            - "-Dakka.cluster.failure-detector.acceptable-heartbeat-pause=30s"
            - "-Dakka.cluster.shutdown-after-unsuccessful-join-seed-nodes=120s"
            - "-jar"
            - "/opt/ditto/starter.jar"
          env:
            - name: DITTO_LOGGING_DISABLE_SYSOUT_LOG
              value: "true"
            - name: DITTO_LOGGING_FILE_APPENDER
              value: "false"
            - name: POD_LABEL_SELECTOR
              value: "app.kubernetes.io/name=%s"
            - name: POD_NAMESPACE
              value: cloud2edge
            - name: INSTANCE_INDEX
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: HOSTNAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
            - name: DISCOVERY_METHOD
              value: "kubernetes-api"
            - name: TZ
              value: "Europe/Berlin"
            - name: JAVA_TOOL_OPTIONS
              value: "-XX:ActiveProcessorCount=2 -XX:+ExitOnOutOfMemoryError -XX:+UseContainerSupport -XX:+UseStringDeduplication -Xss512k -XX:MaxRAMPercentage=50 -XX:+UseG1GC -XX:MaxGCPauseMillis=150 -Dakka.coordinated-shutdown.exit-jvm=on "
            - name: MONGO_DB_SSL_ENABLED
              value: "false"
            - name: MONGO_DB_URI
              valueFrom:
                secretKeyRef:
                  name: c2e-ditto-mongodb-secret
                  key: searchDB-uri
            - name: PROMETHEUS_PORT
              value: "9095"
          ports:
            - name: remoting
              containerPort: 2551
              protocol: TCP
            - name: management
              containerPort: 8558
              protocol: TCP
          readinessProbe:
            httpGet:
              port: management
              path: /ready
            initialDelaySeconds: 90
            periodSeconds: 10
            timeoutSeconds: 1
            failureThreshold: 3
          livenessProbe:
            httpGet:
              port: management
              path: /alive
            initialDelaySeconds: 160
            periodSeconds: 10
            timeoutSeconds: 3
            failureThreshold: 4
          resources:
            limits:
              memory: 768Mi
            requests:
              cpu: 200m
              memory: 512Mi
          securityContext:
            allowPrivilegeEscalation: false
---
# Source: cloud2edge/charts/hono/templates/artemis/artemis-deployment.yaml
#
# Copyright (c) 2019, 2022 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
#
apiVersion: apps/v1
kind: Deployment
metadata:
  name: c2e-artemis
  namespace: cloud2edge
  labels:
    app.kubernetes.io/name: hono
    helm.sh/chart: hono-1.12.8
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: c2e
    app.kubernetes.io/version: 1.12.2
    app.kubernetes.io/component: amqp-messaging-network-broker
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: hono
      app.kubernetes.io/instance: c2e
      app.kubernetes.io/component: amqp-messaging-network-broker
  template:
    metadata:
      name: c2e-artemis
      namespace: cloud2edge
      labels:
        app.kubernetes.io/name: hono
        helm.sh/chart: hono-1.12.8
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/instance: c2e
        app.kubernetes.io/version: 1.12.2
        app.kubernetes.io/component: amqp-messaging-network-broker
    spec:
      containers:
      - name: apache-activemq-artemis
        image: "quay.io/enmasse/artemis-base:2.13.0"
        command:
        - /opt/apache-artemis/bin/launch.sh
        - start
        env:
        - name: AMQ_NAME
          value: custom
        - name: HOME
          value: /run/artemis/split-1/
        - name: JAVA_INITIAL_MEM_RATIO
          value: "30"
        - name: JAVA_MAX_MEM_RATIO
          value: "70"
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        ports:
        - name: amqps
          containerPort: 5671
          protocol: TCP
        imagePullPolicy: IfNotPresent
        resources:
          limits:
            cpu: "1"
            memory: 512Mi
          requests:
            cpu: 200m
            memory: 256Mi
        livenessProbe:
          initialDelaySeconds: 300
          periodSeconds: 17
          exec:
            command:
            - "/bin/bash"
            - "/opt/apache-artemis/conf/liveness-probe.sh"
          timeoutSeconds: 3
        readinessProbe:
          initialDelaySeconds: 20
          periodSeconds: 10
          exec:
            command:
            - "/bin/bash"
            - "/opt/apache-artemis/conf/readiness-probe.sh"
          timeoutSeconds: 3
        securityContext:
          privileged: false
        volumeMounts:        
        - name: "artemis-conf"
          mountPath: "/opt/apache-artemis/conf"
          readOnly: true
        - name: "artemis-conf"
          mountPath: "/opt/hono/config"
          readOnly: true
      volumes:      
      - name: "artemis-conf"
        secret:
          secretName: "c2e-artemis-conf"
---
# Source: cloud2edge/charts/hono/templates/dispatch-router/dispatch-router-deployment.yaml
#
# Copyright (c) 2019, 2022 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
#
apiVersion: apps/v1
kind: Deployment
metadata:
  name: c2e-dispatch-router
  namespace: cloud2edge
  labels:
    app.kubernetes.io/name: hono
    helm.sh/chart: hono-1.12.8
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: c2e
    app.kubernetes.io/version: 1.12.2
    app.kubernetes.io/component: amqp-messaging-network-router
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: hono
      app.kubernetes.io/instance: c2e
      app.kubernetes.io/component: amqp-messaging-network-router
  template:
    metadata:
      name: c2e-dispatch-router
      namespace: cloud2edge
      labels:
        app.kubernetes.io/name: hono
        helm.sh/chart: hono-1.12.8
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/instance: c2e
        app.kubernetes.io/version: 1.12.2
        app.kubernetes.io/component: amqp-messaging-network-router
    spec:
      containers:
      - name: apache-qpid-dispatch-router
        image: "quay.io/interconnectedcloud/qdrouterd:1.17.1"
        imagePullPolicy: IfNotPresent
        command:
        - /sbin/qdrouterd
        - -c
        - /etc/hono/qdrouterd.json
        env:
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        ports:
        - name: amqps
          containerPort: 5671
          protocol: TCP
        - name: amqp
          containerPort: 5672
          protocol: TCP
        - name: internal
          containerPort: 5673
          protocol: TCP
        - name: health
          containerPort: 8088
          protocol: TCP
        resources:
          limits:
            cpu: "1"
            memory: 256Mi
          requests:
            cpu: 200m
            memory: 64Mi
        livenessProbe:
          initialDelaySeconds: 300
          periodSeconds: 9
          httpGet:
            path: /healthz
            port: health
        readinessProbe:
          initialDelaySeconds: 20
          periodSeconds: 5
          httpGet:
            path: /healthz
            port: health
        securityContext:
          privileged: false
        volumeMounts:        
        - name: "dispatch-router-conf"
          mountPath: "/etc/hono"
          readOnly: true
      volumes:      
      - name: "dispatch-router-conf"
        secret:
          secretName: "c2e-dispatch-router-conf"
---
# Source: cloud2edge/charts/hono/templates/hono-adapter-amqp/hono-adapter-amqp-vertx-deployment.yaml
#
# Copyright (c) 2019, 2021 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
#
apiVersion: apps/v1
kind: Deployment
metadata:
  name: c2e-adapter-amqp-vertx
  namespace: cloud2edge
  labels:
    app.kubernetes.io/name: hono
    helm.sh/chart: hono-1.12.8
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: c2e
    app.kubernetes.io/version: 1.12.2
    app.kubernetes.io/component: adapter-amqp-vertx
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: hono
      app.kubernetes.io/instance: c2e
      app.kubernetes.io/component: adapter-amqp-vertx
  template:
    metadata:
      name: c2e-adapter-amqp-vertx
      namespace: cloud2edge
      labels:
        app.kubernetes.io/name: hono
        helm.sh/chart: hono-1.12.8
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/instance: c2e
        app.kubernetes.io/version: 1.12.2
        app.kubernetes.io/component: adapter-amqp-vertx
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/prometheus"
        prometheus.io/port: "8088"
        prometheus.io/scheme: "http"
    spec:
      containers:            
      - name: "adapter-amqp-vertx"
        image: "index.docker.io/eclipse/hono-adapter-amqp-vertx-quarkus:1.12.2"
        ports:
        - name: health
          containerPort: 8088
          protocol: TCP
        - name: amqps
          containerPort: 5671
          protocol: TCP
        - name: amqp
          containerPort: 5672
          protocol: TCP
        securityContext:
          privileged: false
        env:
        - name: JDK_JAVA_OPTIONS
          value: "-XX:MinRAMPercentage=80 -XX:MaxRAMPercentage=80"
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace        
        - name: SMALLRYE_CONFIG_LOCATIONS
          value: "/opt/hono/config/logging-quarkus-dev.yml"        
        
        - name: JAEGER_SERVICE_NAME
          value: "c2e-adapter-amqp-vertx"
        - name: JAEGER_SAMPLER_TYPE
          value: "const"
        - name: JAEGER_SAMPLER_PARAM
          value: "0"        
        volumeMounts:        
        - name: "adapter-amqp-vertx-conf"
          mountPath: "/etc/hono"
          readOnly: true
        - name: "adapter-amqp-vertx-conf"
          mountPath: "/opt/hono/config"
          readOnly: true
        resources:
          limits:
            cpu: "1"
            memory: 512Mi
          requests:
            cpu: 200m
            memory: 300Mi        
        livenessProbe:
          httpGet:
            path: "/liveness"
            port: "health"
            scheme: "HTTP"
          initialDelaySeconds: 900
        readinessProbe:
          httpGet:
            path: "/readiness"
            port: "health"
            scheme: "HTTP"
          initialDelaySeconds: 45
      volumes:      
      - name: "adapter-amqp-vertx-conf"
        secret:
          secretName: "c2e-adapter-amqp-vertx-conf"
---
# Source: cloud2edge/charts/hono/templates/hono-adapter-http/hono-adapter-http-vertx-deployment.yaml
#
# Copyright (c) 2019, 2021 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
#
apiVersion: apps/v1
kind: Deployment
metadata:
  name: c2e-adapter-http-vertx
  namespace: cloud2edge
  labels:
    app.kubernetes.io/name: hono
    helm.sh/chart: hono-1.12.8
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: c2e
    app.kubernetes.io/version: 1.12.2
    app.kubernetes.io/component: adapter-http-vertx
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: hono
      app.kubernetes.io/instance: c2e
      app.kubernetes.io/component: adapter-http-vertx
  template:
    metadata:
      name: c2e-adapter-http-vertx
      namespace: cloud2edge
      labels:
        app.kubernetes.io/name: hono
        helm.sh/chart: hono-1.12.8
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/instance: c2e
        app.kubernetes.io/version: 1.12.2
        app.kubernetes.io/component: adapter-http-vertx
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/prometheus"
        prometheus.io/port: "8088"
        prometheus.io/scheme: "http"
    spec:
      containers:            
      - name: "adapter-http-vertx"
        image: "index.docker.io/eclipse/hono-adapter-http-vertx-quarkus:1.12.2"
        ports:
        - name: health
          containerPort: 8088
          protocol: TCP
        - name: http
          containerPort: 8080
          protocol: TCP
        - name: https
          containerPort: 8443
          protocol: TCP
        securityContext:
          privileged: false
        env:
        - name: JDK_JAVA_OPTIONS
          value: "-XX:MinRAMPercentage=80 -XX:MaxRAMPercentage=80"
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace        
        - name: SMALLRYE_CONFIG_LOCATIONS
          value: "/opt/hono/config/logging-quarkus-dev.yml"        
        
        - name: JAEGER_SERVICE_NAME
          value: "c2e-adapter-http-vertx"
        - name: JAEGER_SAMPLER_TYPE
          value: "const"
        - name: JAEGER_SAMPLER_PARAM
          value: "0"        
        volumeMounts:        
        - name: "adapter-http-vertx-conf"
          mountPath: "/etc/hono"
          readOnly: true
        - name: "adapter-http-vertx-conf"
          mountPath: "/opt/hono/config"
          readOnly: true
        resources:
          limits:
            cpu: "1"
            memory: 512Mi
          requests:
            cpu: 200m
            memory: 300Mi        
        livenessProbe:
          httpGet:
            path: "/liveness"
            port: "health"
            scheme: "HTTP"
          initialDelaySeconds: 900
        readinessProbe:
          httpGet:
            path: "/readiness"
            port: "health"
            scheme: "HTTP"
          initialDelaySeconds: 45
      volumes:      
      - name: "adapter-http-vertx-conf"
        secret:
          secretName: "c2e-adapter-http-vertx-conf"
---
# Source: cloud2edge/charts/hono/templates/hono-adapter-mqtt/hono-adapter-mqtt-vertx-deployment.yaml
#
# Copyright (c) 2019, 2021 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
#
apiVersion: apps/v1
kind: Deployment
metadata:
  name: c2e-adapter-mqtt-vertx
  namespace: cloud2edge
  labels:
    app.kubernetes.io/name: hono
    helm.sh/chart: hono-1.12.8
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: c2e
    app.kubernetes.io/version: 1.12.2
    app.kubernetes.io/component: adapter-mqtt-vertx
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: hono
      app.kubernetes.io/instance: c2e
      app.kubernetes.io/component: adapter-mqtt-vertx
  template:
    metadata:
      name: c2e-adapter-mqtt-vertx
      namespace: cloud2edge
      labels:
        app.kubernetes.io/name: hono
        helm.sh/chart: hono-1.12.8
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/instance: c2e
        app.kubernetes.io/version: 1.12.2
        app.kubernetes.io/component: adapter-mqtt-vertx
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/prometheus"
        prometheus.io/port: "8088"
        prometheus.io/scheme: "http"
    spec:
      containers:            
      - name: "adapter-mqtt-vertx"
        image: "index.docker.io/eclipse/hono-adapter-mqtt-vertx-quarkus:1.12.2"
        ports:
        - name: health
          containerPort: 8088
          protocol: TCP
        - name: mqtt
          containerPort: 1883
          protocol: TCP
        - name: secure-mqtt
          containerPort: 8883
          protocol: TCP
        securityContext:
          privileged: false
        env:
        - name: JDK_JAVA_OPTIONS
          value: "-XX:MinRAMPercentage=80 -XX:MaxRAMPercentage=80"
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace        
        - name: SMALLRYE_CONFIG_LOCATIONS
          value: "/opt/hono/config/logging-quarkus-dev.yml"        
        
        - name: JAEGER_SERVICE_NAME
          value: "c2e-adapter-mqtt-vertx"
        - name: JAEGER_SAMPLER_TYPE
          value: "const"
        - name: JAEGER_SAMPLER_PARAM
          value: "0"        
        volumeMounts:        
        - name: "adapter-mqtt-vertx-conf"
          mountPath: "/etc/hono"
          readOnly: true
        - name: "adapter-mqtt-vertx-conf"
          mountPath: "/opt/hono/config"
          readOnly: true
        resources:
          limits:
            cpu: "1"
            memory: 512Mi
          requests:
            cpu: 200m
            memory: 300Mi        
        livenessProbe:
          httpGet:
            path: "/liveness"
            port: "health"
            scheme: "HTTP"
          initialDelaySeconds: 900
        readinessProbe:
          httpGet:
            path: "/readiness"
            port: "health"
            scheme: "HTTP"
          initialDelaySeconds: 45
      volumes:      
      - name: "adapter-mqtt-vertx-conf"
        secret:
          secretName: "c2e-adapter-mqtt-vertx-conf"
---
# Source: cloud2edge/charts/hono/templates/hono-service-auth/hono-service-auth-deployment.yaml
#
# Copyright (c) 2019, 2021 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
#
apiVersion: apps/v1
kind: Deployment
metadata:
  name: c2e-service-auth
  namespace: cloud2edge
  labels:
    app.kubernetes.io/name: hono
    helm.sh/chart: hono-1.12.8
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: c2e
    app.kubernetes.io/version: 1.12.2
    app.kubernetes.io/component: service-auth
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: hono
      app.kubernetes.io/instance: c2e
      app.kubernetes.io/component: service-auth
  template:
    metadata:
      name: c2e-service-auth
      namespace: cloud2edge
      labels:
        app.kubernetes.io/name: hono
        helm.sh/chart: hono-1.12.8
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/instance: c2e
        app.kubernetes.io/version: 1.12.2
        app.kubernetes.io/component: service-auth
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/prometheus"
        prometheus.io/port: "8088"
        prometheus.io/scheme: "http"
    spec:
      containers:      
      - name: "service-auth"
        image: "index.docker.io/eclipse/hono-service-auth-quarkus:1.12.2"
        ports:
        - name: health
          containerPort: 8088
          protocol: TCP
        - name: amqps
          containerPort: 5671
          protocol: TCP
        - name: amqp
          containerPort: 5672
          protocol: TCP
        securityContext:
          privileged: false
        env:
        - name: JDK_JAVA_OPTIONS
          value: "-XX:MinRAMPercentage=80 -XX:MaxRAMPercentage=80"
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace        
        - name: SMALLRYE_CONFIG_LOCATIONS
          value: "/opt/hono/config/logging-quarkus-dev.yml"        
        volumeMounts:        
        - name: "service-auth-conf"
          mountPath: "/etc/hono"
          readOnly: true
        - name: "permissions"
          mountPath: "/var/run/hono/auth"
          readOnly: true
        - name: "service-auth-conf"
          mountPath: "/opt/hono/config"
          readOnly: true
        resources:
          limits:
            cpu: "1"
            memory: 256Mi
          requests:
            cpu: 200m
            memory: 196Mi        
        livenessProbe:
          httpGet:
            path: "/liveness"
            port: "health"
            scheme: "HTTP"
          initialDelaySeconds: 900
        readinessProbe:
          httpGet:
            path: "/readiness"
            port: "health"
            scheme: "HTTP"
          initialDelaySeconds: 45
      volumes:      
      - name: "service-auth-conf"
        secret:
          secretName: "c2e-service-auth-conf"
      - name: "permissions"
        secret:
          secretName: "permissions"
---
# Source: cloud2edge/charts/hono/templates/hono-service-command-router/hono-service-command-router-deployment.yaml
#
# Copyright (c) 2021, 2022 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
#
apiVersion: apps/v1
kind: Deployment
metadata:
  name: c2e-service-command-router
  namespace: cloud2edge
  labels:
    app.kubernetes.io/name: hono
    helm.sh/chart: hono-1.12.8
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: c2e
    app.kubernetes.io/version: 1.12.2
    app.kubernetes.io/component: service-command-router
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: hono
      app.kubernetes.io/instance: c2e
      app.kubernetes.io/component: service-command-router
  template:
    metadata:
      name: c2e-service-command-router
      namespace: cloud2edge
      labels:
        app.kubernetes.io/name: hono
        helm.sh/chart: hono-1.12.8
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/instance: c2e
        app.kubernetes.io/version: 1.12.2
        app.kubernetes.io/component: service-command-router
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/prometheus"
        prometheus.io/port: "8088"
        prometheus.io/scheme: "http"
    spec:
      containers:            
      - name: "service-command-router"
        image: "index.docker.io/eclipse/hono-service-command-router-quarkus:1.12.2"
        ports:
        - name: health
          containerPort: 8088
          protocol: TCP
        - name: amqps
          containerPort: 5671
          protocol: TCP
        - name: amqp
          containerPort: 5672
          protocol: TCP
        securityContext:
          privileged: false
        env:
        - name: JDK_JAVA_OPTIONS
          value: "-XX:MinRAMPercentage=80 -XX:MaxRAMPercentage=80 -Djava.security.properties=/etc/hono/dns-cache-config.properties"
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace        
        - name: SMALLRYE_CONFIG_LOCATIONS
          value: "/opt/hono/config/logging-quarkus-dev.yml"        
        
        - name: JAEGER_SERVICE_NAME
          value: "c2e-service-command-router"
        - name: JAEGER_SAMPLER_TYPE
          value: "const"
        - name: JAEGER_SAMPLER_PARAM
          value: "0"        
        volumeMounts:        
        - name: "service-command-router-conf"
          mountPath: "/etc/hono"
          readOnly: true
        - name: "service-command-router-conf"
          mountPath: "/opt/hono/config"
          readOnly: true
        resources:
          limits:
            cpu: "1"
            memory: 512Mi
          requests:
            cpu: 150m
            memory: 256Mi        
        livenessProbe:
          httpGet:
            path: "/liveness"
            port: "health"
            scheme: "HTTP"
          initialDelaySeconds: 900
        readinessProbe:
          httpGet:
            path: "/readiness"
            port: "health"
            scheme: "HTTP"
          initialDelaySeconds: 45
      volumes:      
      - name: "service-command-router-conf"
        secret:
          secretName: "c2e-service-command-router-conf"
      serviceAccountName: "c2e-service-command-router"
---
# Source: cloud2edge/charts/hono/templates/hono-service-device-registry-mongodb/hono-service-device-registry-deployment.yaml
#
# Copyright (c) 2020, 2022 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
#
apiVersion: apps/v1
kind: Deployment
metadata:
  name: c2e-service-device-registry
  namespace: cloud2edge
  labels:
    app.kubernetes.io/name: hono
    helm.sh/chart: hono-1.12.8
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: c2e
    app.kubernetes.io/version: 1.12.2
    app.kubernetes.io/component: service-device-registry
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: hono
      app.kubernetes.io/instance: c2e
      app.kubernetes.io/component: service-device-registry
  template:
    metadata:
      name: c2e-service-device-registry
      namespace: cloud2edge
      labels:
        app.kubernetes.io/name: hono
        helm.sh/chart: hono-1.12.8
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/instance: c2e
        app.kubernetes.io/version: 1.12.2
        app.kubernetes.io/component: service-device-registry
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/prometheus"
        prometheus.io/port: "8088"
        prometheus.io/scheme: "http"
    spec:
      containers:            
      - name: "service-device-registry"
        image: "index.docker.io/eclipse/hono-service-device-registry-mongodb-quarkus:1.12.2"
        ports:
          - name: health
            containerPort: 8088
            protocol: TCP
          - name: http
            containerPort: 8080
            protocol: TCP
          - name: https
            containerPort: 8443
            protocol: TCP
          - name: amqps
            containerPort: 5671
            protocol: TCP
          - name: amqp
            containerPort: 5672
            protocol: TCP
        env:
        - name: JDK_JAVA_OPTIONS
          value: "-XX:MinRAMPercentage=80 -XX:MaxRAMPercentage=80"
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace        
        - name: SMALLRYE_CONFIG_LOCATIONS
          value: "/opt/hono/config/logging-quarkus-dev.yml"        
        
        - name: JAEGER_SERVICE_NAME
          value: "c2e-service-device-registry"
        - name: JAEGER_SAMPLER_TYPE
          value: "const"
        - name: JAEGER_SAMPLER_PARAM
          value: "0"        
        securityContext:
          privileged: false
        volumeMounts:        
        - name: "service-device-registry-conf"
          mountPath: "/etc/hono"
          readOnly: true
        - name: "service-device-registry-conf"
          mountPath: "/opt/hono/config"
          readOnly: true
        resources:
          limits:
            cpu: "1"
            memory: 400Mi
          requests:
            cpu: 200m
            memory: 400Mi        
        livenessProbe:
          httpGet:
            path: "/liveness"
            port: "health"
            scheme: "HTTP"
          initialDelaySeconds: 900
        readinessProbe:
          httpGet:
            path: "/readiness"
            port: "health"
            scheme: "HTTP"
          initialDelaySeconds: 45
      volumes:      
      - name: "service-device-registry-conf"
        secret:
          secretName: "c2e-service-device-registry-conf"
---
# Source: cloud2edge/charts/ditto/templates/concierge-networkpolicy.yaml
# Copyright (c) 2019 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
---
# Source: cloud2edge/charts/ditto/templates/concierge-pdb.yaml
# Copyright (c) 2019 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
---
# Source: cloud2edge/charts/ditto/templates/connectivity-networkpolicy.yaml
# Copyright (c) 2019 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
---
# Source: cloud2edge/charts/ditto/templates/connectivity-pdb.yaml
# Copyright (c) 2019 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
---
# Source: cloud2edge/charts/ditto/templates/gateway-networkpolicy.yaml
# Copyright (c) 2019 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
---
# Source: cloud2edge/charts/ditto/templates/gateway-pdb.yaml
# Copyright (c) 2019 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
---
# Source: cloud2edge/charts/ditto/templates/gateway-secret.yaml
# Copyright (c) 2019 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
---
# Source: cloud2edge/charts/ditto/templates/mongodb-secret.yaml
# Copyright (c) 2019 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
---
# Source: cloud2edge/charts/ditto/templates/nginx-config.yaml
# Copyright (c) 2019 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
---
# Source: cloud2edge/charts/ditto/templates/nginx-ingress.yaml
# Copyright (c) 2019 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
---
# Source: cloud2edge/charts/ditto/templates/nginx-networkpolicy.yaml
# Copyright (c) 2022 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
---
# Source: cloud2edge/charts/ditto/templates/nginx-route.yaml
# Copyright (c) 2019 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
---
# Source: cloud2edge/charts/ditto/templates/policies-networkpolicy.yaml
# Copyright (c) 2019 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
---
# Source: cloud2edge/charts/ditto/templates/policies-pdb.yaml
# Copyright (c) 2019 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
---
# Source: cloud2edge/charts/ditto/templates/swaggerui-networkpolicy.yaml
# Copyright (c) 2019 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
---
# Source: cloud2edge/charts/ditto/templates/swaggerui-pdb.yaml
# Copyright (c) 2019 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
---
# Source: cloud2edge/charts/ditto/templates/things-networkpolicy.yaml
# Copyright (c) 2019 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
---
# Source: cloud2edge/charts/ditto/templates/things-pdb.yaml
# Copyright (c) 2019 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
---
# Source: cloud2edge/charts/ditto/templates/thingssearch-networkpolicy.yaml
# Copyright (c) 2019 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
---
# Source: cloud2edge/charts/ditto/templates/thingssearch-pdb.yaml
# Copyright (c) 2019 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
---
# Source: cloud2edge/templates/permissions-secret.yaml
#
# Copyright (c) 2020 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
#
---
# Source: cloud2edge/templates/post-install-job.yaml
#
# Copyright (c) 2020 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
#
---
# Source: cloud2edge/templates/post-install-secret.yaml
#
# Copyright (c) 2020 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
